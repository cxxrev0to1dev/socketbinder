/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'libsbutils'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct IUnknownVtbl;
struct tagVARIANT;
struct IRecordInfo;
struct tagTYPEDESC;
struct tagARRAYDESC;
struct tagPROPVARIANT;
struct CDetourDis;
struct binder_transaction;
struct binder_buffer;
struct CDetourDisX64;
struct CDetourDisX86;
struct Detour::CImageImportName;
struct BaseAPIVtbl;
struct std::_Facet_baseVtbl;
struct std::error_categoryVtbl;
struct std::exceptionVtbl;
struct std::ios_baseVtbl;
struct std::ios_base::_Iosarray;
struct std::ios_base::_Fnarray;
struct std::basic_streambuf<char,std::char_traits<char> >Vtbl;
struct std::_Container_base12;
struct std::_Iterator_base12;
struct std::nested_exceptionVtbl;
struct _s__RTTIBaseClassArray;
struct type_infoVtbl;
struct google::LogSinkVtbl;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct _TEB_ACTIVE_FRAME_CONTEXT;
struct std::_Node_baseVtbl;
struct std::_Node_end_rep;
struct DNameNodeVtbl;
struct _RTL_BALANCED_NODE;
struct Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::EventTraits>Vtbl;
struct Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>Vtbl;
struct Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>Vtbl;

/* 1 */
enum _tagINTERNETFEATURELIST
{
  FEATURE_OBJECT_CACHING = 0x0,
  FEATURE_ZONE_ELEVATION = 0x1,
  FEATURE_MIME_HANDLING = 0x2,
  FEATURE_MIME_SNIFFING = 0x3,
  FEATURE_WINDOW_RESTRICTIONS = 0x4,
  FEATURE_WEBOC_POPUPMANAGEMENT = 0x5,
  FEATURE_BEHAVIORS = 0x6,
  FEATURE_DISABLE_MK_PROTOCOL = 0x7,
  FEATURE_LOCALMACHINE_LOCKDOWN = 0x8,
  FEATURE_SECURITYBAND = 0x9,
  FEATURE_RESTRICT_ACTIVEXINSTALL = 0xA,
  FEATURE_VALIDATE_NAVIGATE_URL = 0xB,
  FEATURE_RESTRICT_FILEDOWNLOAD = 0xC,
  FEATURE_ADDON_MANAGEMENT = 0xD,
  FEATURE_PROTOCOL_LOCKDOWN = 0xE,
  FEATURE_HTTP_USERNAME_PASSWORD_DISABLE = 0xF,
  FEATURE_SAFE_BINDTOOBJECT = 0x10,
  FEATURE_UNC_SAVEDFILECHECK = 0x11,
  FEATURE_GET_URL_DOM_FILEPATH_UNENCODED = 0x12,
  FEATURE_TABBED_BROWSING = 0x13,
  FEATURE_SSLUX = 0x14,
  FEATURE_DISABLE_NAVIGATION_SOUNDS = 0x15,
  FEATURE_DISABLE_LEGACY_COMPRESSION = 0x16,
  FEATURE_FORCE_ADDR_AND_STATUS = 0x17,
  FEATURE_XMLHTTP = 0x18,
  FEATURE_DISABLE_TELNET_PROTOCOL = 0x19,
  FEATURE_FEEDS = 0x1A,
  FEATURE_BLOCK_INPUT_PROMPTS = 0x1B,
  FEATURE_ENTRY_COUNT = 0x1C,
};

/* 2 */
enum tagCOINITBASE
{
  COINITBASE_MULTITHREADED = 0x0,
};

/* 3 */
enum __MIDL_IUri_0001
{
  Uri_PROPERTY_ABSOLUTE_URI = 0x0,
  Uri_PROPERTY_STRING_START = 0x0,
  Uri_PROPERTY_AUTHORITY = 0x1,
  Uri_PROPERTY_DISPLAY_URI = 0x2,
  Uri_PROPERTY_DOMAIN = 0x3,
  Uri_PROPERTY_EXTENSION = 0x4,
  Uri_PROPERTY_FRAGMENT = 0x5,
  Uri_PROPERTY_HOST = 0x6,
  Uri_PROPERTY_PASSWORD = 0x7,
  Uri_PROPERTY_PATH = 0x8,
  Uri_PROPERTY_PATH_AND_QUERY = 0x9,
  Uri_PROPERTY_QUERY = 0xA,
  Uri_PROPERTY_RAW_URI = 0xB,
  Uri_PROPERTY_SCHEME_NAME = 0xC,
  Uri_PROPERTY_USER_INFO = 0xD,
  Uri_PROPERTY_USER_NAME = 0xE,
  Uri_PROPERTY_STRING_LAST = 0xE,
  Uri_PROPERTY_HOST_TYPE = 0xF,
  Uri_PROPERTY_DWORD_START = 0xF,
  Uri_PROPERTY_PORT = 0x10,
  Uri_PROPERTY_SCHEME = 0x11,
  Uri_PROPERTY_ZONE = 0x12,
  Uri_PROPERTY_DWORD_LAST = 0x12,
};

/* 4 */
enum DISPLAYCONFIG_SCANLINE_ORDERING
{
  DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0x0,
  DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 0x1,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 0x2,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 0x2,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 0x3,
  DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = 0xFFFFFFFF,
};

/* 5 */
enum __MIDL_IUri_0002
{
  Uri_HOST_UNKNOWN = 0x0,
  Uri_HOST_DNS = 0x1,
  Uri_HOST_IPV4 = 0x2,
  Uri_HOST_IPV6 = 0x3,
  Uri_HOST_IDN = 0x4,
};

/* 6 */
enum _USER_ACTIVITY_PRESENCE
{
  PowerUserPresent = 0x0,
  PowerUserNotPresent = 0x1,
  PowerUserInactive = 0x2,
  PowerUserMaximum = 0x3,
  PowerUserInvalid = 0x3,
};

/* 7 */
enum __MIDL_IGetBindHandle_0001
{
  BINDHANDLETYPES_APPCACHE = 0x0,
  BINDHANDLETYPES_DEPENDENCY = 0x1,
  BINDHANDLETYPES_COUNT = 0x2,
};

/* 8 */
enum $7CDFE018DB98A4F3F082169A249FA53E
{
  __the_value = 0x0,
};

/* 9 */
enum __vc_attributes::event_sourceAttribute::type_e
{
  native = 0x0,
  com = 0x1,
  managed = 0x2,
};

/* 10 */
enum __vc_attributes::event_sourceAttribute::optimize_e
{
  speed = 0x0,
  size = 0x1,
};

/* 11 */
enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e
{
  eBoolean = 0x0,
  eInteger = 0x1,
  eFloat = 0x2,
  eDouble = 0x3,
};

/* 12 */
enum __vc_attributes::helper_attributes::usageAttribute::usage_e
{
  eAnyUsage = 0x0,
  eCoClassUsage = 0x1,
  eCOMInterfaceUsage = 0x2,
  eInterfaceUsage = 0x6,
  eMemberUsage = 0x8,
  eMethodUsage = 0x10,
  eInterfaceMethodUsage = 0x20,
  eInterfaceMemberUsage = 0x40,
  eCoClassMemberUsage = 0x80,
  eCoClassMethodUsage = 0x100,
  eGlobalMethodUsage = 0x300,
  eGlobalDataUsage = 0x400,
  eClassUsage = 0x800,
  eInterfaceParameterUsage = 0x1000,
  eMethodParameterUsage = 0x3000,
  eIDLModuleUsage = 0x4000,
  eAnonymousUsage = 0x8000,
  eTypedefUsage = 0x10000,
  eUnionUsage = 0x20000,
  eEnumUsage = 0x40000,
  eDefineTagUsage = 0x80000,
  eStructUsage = 0x100000,
  eLocalUsage = 0x200000,
  ePropertyUsage = 0x400000,
  eEventUsage = 0x800000,
  eTemplateUsage = 0x1000000,
  eModuleUsage = 0x1000000,
  eIllegalUsage = 0x2000000,
  eAsynchronousUsage = 0x4000000,
  eAnyIDLUsage = 0x3F7FFF,
};

/* 13 */
enum __vc_attributes::threadingAttribute::threading_e
{
  apartment = 0x1,
  single = 0x2,
  free = 0x3,
  neutral = 0x4,
  both = 0x5,
};

/* 14 */
enum __vc_attributes::aggregatableAttribute::type_e
{
  never = 0x0,
  allowed = 0x1,
  always = 0x2,
};

/* 15 */
typedef __vc_attributes::event_sourceAttribute::type_e __vc_attributes::event_receiverAttribute::type_e;

/* 16 */
enum __vc_attributes::moduleAttribute::type_e
{
  dll = 0x1,
  exe = 0x2,
  service = 0x3,
  unspecified = 0x4,
  EXE = 0x2,
  SERVICE = 0x3,
};

/* 17 */
enum tagAR_STATE
{
  AR_ENABLED = 0x0,
  AR_DISABLED = 0x1,
  AR_SUPPRESSED = 0x2,
  AR_REMOTESESSION = 0x4,
  AR_MULTIMON = 0x8,
  AR_NOSENSOR = 0x10,
  AR_NOT_SUPPORTED = 0x20,
  AR_DOCKED = 0x40,
  AR_LAPTOP = 0x80,
};

/* 18 */
typedef $7CDFE018DB98A4F3F082169A249FA53E $65AD7847844D2F83A7EE01EA9C62470B;

/* 19 */
typedef $8C57D1DDA788D6050A7C554DBD1EB1AC ADDRESS_MODE;

/* 20 */
enum $A77CD9433B60374CBF69E011E5941D9D
{
  DYNAMIC = 0x1,
  ADDRESS = 0x2,
  NOENLARGE = 0x4,
  RAX = 0x8,
};

/* 21 */
enum $9226FF5D7D16790AF4FA0B680C0E6469
{
  SIB = 0x10,
  RIP = 0x20,
  NOTSIB = 0xF,
};

/* 22 */
enum $73B77DD06CF6BB4595FD7117E1110A46
{
  SIZE_OF_JMP = 0x5,
};

/* 23 */
enum $C8DC98F0AF70492DE0D0A44B4FCDCDCF
{
  A_UNIT = 0x1,
  I_UNIT = 0x2,
  M_UNIT = 0x3,
  B_UNIT = 0x4,
  F_UNIT = 0x5,
  L_UNIT = 0x6,
  X_UNIT = 0x7,
};

/* 24 */
typedef $A77CD9433B60374CBF69E011E5941D9D $409CBF6A7A1A6A1BA2DB311F533E179B;

/* 25 */
typedef $9226FF5D7D16790AF4FA0B680C0E6469 $870C9B5C1FEA344B1247489BF5F35F46;

/* 26 */
enum $71D838748CD293AEF8201E87EC8B86F0
{
  DETOUR_IMAGE_VALID_SIGNATURE = 0xFEDCBA01,
};

/* 27 */
typedef $536385C8F382172408CEC3CAC70F99E4 SYM_TYPE;

/* 28 */
enum BinderDriverReturnProtocol
{
  BR_ERROR = 0x80047200,
  BR_OK = 0x7201,
  BR_TRANSACTION = 0x80287202,
  BR_REPLY = 0x80287203,
  BR_ACQUIRE_RESULT = 0x80047204,
  BR_DEAD_REPLY = 0x7205,
  BR_TRANSACTION_COMPLETE = 0x7206,
  BR_INCREFS = 0x80087207,
  BR_ACQUIRE = 0x80087208,
  BR_RELEASE = 0x80087209,
  BR_DECREFS = 0x8008720A,
  BR_ATTEMPT_ACQUIRE = 0x800C720B,
  BR_NOOP = 0x720C,
  BR_SPAWN_LOOPER = 0x720D,
  BR_FINISHED = 0x720E,
  BR_DEAD_BINDER = 0x8004720F,
  BR_CLEAR_DEATH_NOTIFICATION_DONE = 0x80047210,
  BR_FAILED_REPLY = 0x7211,
};

/* 29 */
enum $41865CB77DA3B5514F065C06BB0AF7CF
{
  BINDER_STAT_PROC = 0x0,
  BINDER_STAT_THREAD = 0x1,
  BINDER_STAT_NODE = 0x2,
  BINDER_STAT_REF = 0x3,
  BINDER_STAT_DEATH = 0x4,
  BINDER_STAT_TRANSACTION = 0x5,
  BINDER_STAT_TRANSACTION_COMPLETE = 0x6,
  BINDER_STAT_COUNT = 0x7,
};

/* 30 */
enum $A16D9E3B21DF0C0B34CF36FB71E1BCBE
{
  FLAT_BINDER_FLAG_PRIORITY_MASK = 0xFF,
  FLAT_BINDER_FLAG_ACCEPTS_FDS = 0x100,
};

/* 31 */
enum $7E51177C6562811140D50676AF40BF92
{
  BINDER_LOOPER_STATE_REGISTERED = 0x1,
  BINDER_LOOPER_STATE_ENTERED = 0x2,
  BINDER_LOOPER_STATE_EXITED = 0x4,
  BINDER_LOOPER_STATE_INVALID = 0x8,
  BINDER_LOOPER_STATE_WAITING = 0x10,
  BINDER_LOOPER_STATE_NEED_RETURN = 0x20,
};

/* 32 */
enum BinderDriverCommandProtocol
{
  BC_TRANSACTION = 0x40286300,
  BC_REPLY = 0x40286301,
  BC_ACQUIRE_RESULT = 0x40046302,
  BC_FREE_BUFFER = 0x40046303,
  BC_INCREFS = 0x40046304,
  BC_ACQUIRE = 0x40046305,
  BC_RELEASE = 0x40046306,
  BC_DECREFS = 0x40046307,
  BC_INCREFS_DONE = 0x40086308,
  BC_ACQUIRE_DONE = 0x40086309,
  BC_ATTEMPT_ACQUIRE = 0x4008630A,
  BC_REGISTER_LOOPER = 0x630B,
  BC_ENTER_LOOPER = 0x630C,
  BC_EXIT_LOOPER = 0x630D,
  BC_REQUEST_DEATH_NOTIFICATION = 0x4008630E,
  BC_CLEAR_DEATH_NOTIFICATION = 0x4008630F,
  BC_DEAD_BINDER_DONE = 0x40046310,
};

/* 33 */
enum $16FAF3A3A59F62A979771EF4CD14C16C
{
  BINDER_DEBUG_USER_ERROR = 0x1,
  BINDER_DEBUG_FAILED_TRANSACTION = 0x2,
  BINDER_DEBUG_DEAD_TRANSACTION = 0x4,
  BINDER_DEBUG_OPEN_CLOSE = 0x8,
  BINDER_DEBUG_DEAD_BINDER = 0x10,
  BINDER_DEBUG_DEATH_NOTIFICATION = 0x20,
  BINDER_DEBUG_READ_WRITE = 0x40,
  BINDER_DEBUG_USER_REFS = 0x80,
  BINDER_DEBUG_THREADS = 0x100,
  BINDER_DEBUG_TRANSACTION = 0x200,
  BINDER_DEBUG_TRANSACTION_COMPLETE = 0x400,
  BINDER_DEBUG_FREE_BUFFER = 0x800,
  BINDER_DEBUG_INTERNAL_REFS = 0x1000,
  BINDER_DEBUG_BUFFER_ALLOC = 0x2000,
  BINDER_DEBUG_PRIORITY_CAP = 0x4000,
  BINDER_DEBUG_BUFFER_ALLOC_ASYNC = 0x8000,
};

/* 34 */
enum $4C246F987AAFF474F03D933A00D98D62
{
  BINDER_DEFERRED_PUT_FILES = 0x1,
  BINDER_DEFERRED_FLUSH = 0x2,
  BINDER_DEFERRED_RELEASE = 0x4,
};

/* 35 */
enum $4E50F41F10557E49D7CD087EEDCBF4BE
{
  PTHREAD_MUTEX_FAST_NP = 0x0,
  PTHREAD_MUTEX_RECURSIVE_NP = 0x1,
  PTHREAD_MUTEX_ERRORCHECK_NP = 0x2,
  PTHREAD_MUTEX_TIMED_NP = 0x0,
  PTHREAD_MUTEX_ADAPTIVE_NP = 0x0,
  PTHREAD_MUTEX_NORMAL = 0x0,
  PTHREAD_MUTEX_RECURSIVE = 0x1,
  PTHREAD_MUTEX_ERRORCHECK = 0x2,
  PTHREAD_MUTEX_DEFAULT = 0x0,
};

/* 36 */
enum $39C81EE52269BC5708A12E7ADA666432
{
  SCHED_OTHER = 0x0,
  SCHED_FIFO = 0x1,
  SCHED_RR = 0x2,
  SCHED_MIN = 0x0,
  SCHED_MAX = 0x2,
};

/* 37 */
enum $A99CC3D3D6CDCF2A8525B50EDEA7C1E0
{
  BINDER_TYPE_BINDER = 0x73622A85,
  BINDER_TYPE_WEAK_BINDER = 0x77622A85,
  BINDER_TYPE_HANDLE = 0x73682A85,
  BINDER_TYPE_WEAK_HANDLE = 0x77682A85,
  BINDER_TYPE_FD = 0x66642A85,
};

/* 38 */
enum $8FFF2F10CD505667A96793BB840C855E
{
  PTW32_FALSE = 0x0,
  PTW32_TRUE = 0x1,
};

/* 39 */
enum transaction_flags
{
  TF_ONE_WAY = 0x1,
  TF_ROOT_OBJECT = 0x4,
  TF_STATUS_CODE = 0x8,
  TF_ACCEPT_FDS = 0x10,
};

/* 40 */
enum $959501DAFB7196048D4C26FFB5C708FD
{
  BINDER_WORK_TRANSACTION = 0x1,
  BINDER_WORK_TRANSACTION_COMPLETE = 0x2,
  BINDER_WORK_NODE = 0x3,
  BINDER_WORK_DEAD_BINDER = 0x4,
  BINDER_WORK_DEAD_BINDER_AND_CLEAR = 0x5,
  BINDER_WORK_CLEAR_DEATH_NOTIFICATION = 0x6,
};

/* 41 */
enum std::_Codecvt_mode
{
  _Consume_header = 0x4,
  _Generate_header = 0x2,
};

/* 42 */
enum std::_Iosb<int>::_Openmode
{
  _Openmask = 0xFF,
};

/* 43 */
enum std::_Iosb<int>::_Fmtflags
{
  _Fmtmask = 0xFFFF,
  _Fmtzero = 0x0,
};

/* 44 */
enum std::_Iosb<int>::_Iostate
{
  _Statmask = 0x17,
};

/* 45 */
enum std::float_round_style
{
  round_indeterminate = 0xFFFFFFFF,
  round_toward_zero = 0x0,
  round_to_nearest = 0x1,
  round_toward_infinity = 0x2,
  round_toward_neg_infinity = 0x3,
};

/* 46 */
enum std::float_denorm_style
{
  denorm_indeterminate = 0xFFFFFFFF,
  denorm_absent = 0x0,
  denorm_present = 0x1,
};

/* 47 */
enum std::_Iosb<int>::_Seekdir
{
  _Seekbeg = 0x0,
  _Seekcur = 0x1,
  _Seekend = 0x2,
};

/* 48 */
enum std::_Uninitialized
{
  _Noinit = 0x0,
};

/* 49 */
enum $9E02737228DF5060E759F32703142FF5
{
  _BUF_SIZE = 0x8,
};

/* 50 */
enum $B2FB91FA9CC7CF3BD50434AFDECAC47F
{
  _ALLOC_MASK = 0x7,
};

/* 51 */
typedef $9E02737228DF5060E759F32703142FF5 $F0551E099AE6F36F41F19B6664DCAFD9;

/* 52 */
typedef $B2FB91FA9CC7CF3BD50434AFDECAC47F $8B51C3C74DF083A54E50CA72E34056B8;

/* 53 */
enum $DBDE8AE3BE3572C1105E906E611275D1
{
  _Allocated = 0x1,
  _Constant = 0x2,
  _Noread = 0x4,
  _Append = 0x8,
  _Atend = 0x10,
};

/* 54 */
enum $D78A09537603E058867F494A102DE664
{
  _MINSIZE = 0x20,
};

/* 55 */
enum std::_Iosb<int>::_Dummy_enum
{
  _Dummy_enum_val = 0x1,
};

/* 56 */
enum $0AE1ED1D395576D0F5C137E464D7BFE0
{
  _Openprot = 0x40,
};

/* 57 */
enum std::errc
{
  address_family_not_supported = 0x66,
  address_in_use = 0x64,
  address_not_available = 0x65,
  already_connected = 0x71,
  argument_list_too_long = 0x7,
  argument_out_of_domain = 0x21,
  bad_address = 0xE,
  bad_file_descriptor = 0x9,
  bad_message = 0x68,
  broken_pipe = 0x20,
  connection_aborted = 0x6A,
  connection_already_in_progress = 0x67,
  connection_refused = 0x6B,
  connection_reset = 0x6C,
  cross_device_link = 0x12,
  destination_address_required = 0x6D,
  device_or_resource_busy = 0x10,
  directory_not_empty = 0x29,
  executable_format_error = 0x8,
  file_exists = 0x11,
  file_too_large = 0x1B,
  filename_too_long = 0x26,
  function_not_supported = 0x28,
  host_unreachable = 0x6E,
  identifier_removed = 0x6F,
  illegal_byte_sequence = 0x2A,
  inappropriate_io_control_operation = 0x19,
  interrupted = 0x4,
  invalid_argument = 0x16,
  invalid_seek = 0x1D,
  io_error = 0x5,
  is_a_directory = 0x15,
  message_size = 0x73,
  network_down = 0x74,
  network_reset = 0x75,
  network_unreachable = 0x76,
  no_buffer_space = 0x77,
  no_child_process = 0xA,
  no_link = 0x79,
  no_lock_available = 0x27,
  no_message_available = 0x78,
  no_message = 0x7A,
  no_protocol_option = 0x7B,
  no_space_on_device = 0x1C,
  no_stream_resources = 0x7C,
  no_such_device_or_address = 0x6,
  no_such_device = 0x13,
  no_such_file_or_directory = 0x2,
  no_such_process = 0x3,
  not_a_directory = 0x14,
  not_a_socket = 0x80,
  not_a_stream = 0x7D,
  not_connected = 0x7E,
  not_enough_memory = 0xC,
  not_supported = 0x81,
  operation_canceled = 0x69,
  operation_in_progress = 0x70,
  operation_not_permitted = 0x1,
  operation_not_supported = 0x82,
  operation_would_block = 0x8C,
  owner_dead = 0x85,
  permission_denied = 0xD,
  protocol_error = 0x86,
  protocol_not_supported = 0x87,
  read_only_file_system = 0x1E,
  resource_deadlock_would_occur = 0x24,
  resource_unavailable_try_again = 0xB,
  result_out_of_range = 0x22,
  state_not_recoverable = 0x7F,
  stream_timeout = 0x89,
  text_file_busy = 0x8B,
  timed_out = 0x8A,
  too_many_files_open_in_system = 0x17,
  too_many_files_open = 0x18,
  too_many_links = 0x1F,
  too_many_symbolic_link_levels = 0x72,
  value_too_large = 0x84,
  wrong_protocol_type = 0x88,
};

/* 58 */
enum std::io_errc
{
  stream = 0x1,
};

/* 59 */
enum std::ios_base::event
{
  erase_event = 0x0,
  imbue_event = 0x1,
  copyfmt_event = 0x2,
};

/* 60 */
enum $3765A173ADD7CE92B6314F58D2CDA9A2
{
  alnum = 0x107,
  alpha = 0x103,
  cntrl = 0x20,
  digit = 0x4,
  graph = 0x117,
  lower = 0x2,
  print = 0x1D7,
  punct = 0x10,
  space = 0x48,
  upper = 0x1,
  xdigit = 0x80,
  blank = 0x48,
};

/* 61 */
enum $888A787B611AC58B01C1CD6E1DF87400
{
  _Future_addr = 0x1,
  _Generic_addr = 0x3,
  _Iostream_addr = 0x5,
  _System_addr = 0x7,
};

/* 62 */
enum $C7A66656BD20095141AF9DA597C58E36
{
  ok = 0x0,
  partial = 0x1,
  error = 0x2,
  noconv = 0x3,
};

/* 63 */
enum $8DE97E81010A5DEE4765A09CFC7C1B80
{
  kNoLogPrefix = 0xFFFFFFFF,
};

/* 64 */
enum ISA_AVAILABILITY
{
  __ISA_AVAILABLE_X86 = 0x0,
  __ISA_AVAILABLE_SSE2 = 0x1,
  __ISA_AVAILABLE_SSE42 = 0x2,
  __ISA_AVAILABLE_AVX = 0x3,
  __ISA_AVAILABLE_ENFSTRG = 0x4,
  __ISA_AVAILABLE_AVX2 = 0x5,
  __ISA_AVAILABLE_ARMNT = 0x0,
  __ISA_AVAILABLE_NEON = 0x1,
  __ISA_AVAILABLE_NEON_ARM64 = 0x2,
};

/* 65 */
enum _RTC_ErrorNumber
{
  _RTC_CHKSTK = 0x0,
  _RTC_CVRT_LOSS_INFO = 0x1,
  _RTC_CORRUPT_STACK = 0x2,
  _RTC_UNINIT_LOCAL_USE = 0x3,
  _RTC_CORRUPTED_ALLOCA = 0x4,
  _RTC_ILLEGAL = 0x5,
};

/* 66 */
enum _crt_argv_mode
{
  _crt_argv_no_arguments = 0x0,
  _crt_argv_unexpanded_arguments = 0x1,
  _crt_argv_expanded_arguments = 0x2,
};

/* 67 */
enum __scrt_native_startup_state
{
  uninitialized = 0x0,
  initializing = 0x1,
  initialized = 0x2,
};

/* 68 */
typedef __vc_attributes::moduleAttribute::type_e __scrt_module_type;

/* 69 */
enum $E9FC1C076C7FA1154C372E26E0451AEA
{
  __crt_maximum_pointer_shift = 0x20,
};

/* 70 */
enum std::_Node_flags
{
  _Fl_none = 0x0,
  _Fl_negate = 0x1,
  _Fl_greedy = 0x2,
  _Fl_final = 0x4,
  _Fl_longest = 0x8,
};

/* 71 */
enum std::_Node_type
{
  _N_none = 0x0,
  _N_nop = 0x1,
  _N_bol = 0x2,
  _N_eol = 0x3,
  _N_wbound = 0x4,
  _N_dot = 0x5,
  _N_str = 0x6,
  _N_class = 0x7,
  _N_group = 0x8,
  _N_end_group = 0x9,
  _N_assert = 0xA,
  _N_neg_assert = 0xB,
  _N_end_assert = 0xC,
  _N_capture = 0xD,
  _N_end_capture = 0xE,
  _N_back = 0xF,
  _N_if = 0x10,
  _N_endif = 0x11,
  _N_rep = 0x12,
  _N_end_rep = 0x13,
  _N_begin = 0x14,
  _N_end = 0x15,
};

/* 72 */
enum std::regex_constants::error_type
{
  error_collate = 0x0,
  error_ctype = 0x1,
  error_escape = 0x2,
  error_backref = 0x3,
  error_brack = 0x4,
  error_paren = 0x5,
  error_brace = 0x6,
  error_badbrace = 0x7,
  error_range = 0x8,
  error_space = 0x9,
  error_badrepeat = 0xA,
  error_complexity = 0xB,
  error_stack = 0xC,
  error_parse = 0xD,
  error_syntax = 0xE,
};

/* 73 */
enum std::_Regex_traits_base::_Char_class_type
{
  _Ch_none = 0x0,
  _Ch_alnum = 0x107,
  _Ch_alpha = 0x103,
  _Ch_cntrl = 0x20,
  _Ch_digit = 0x4,
  _Ch_graph = 0x117,
  _Ch_lower = 0x2,
  _Ch_print = 0x1D7,
  _Ch_punct = 0x10,
  _Ch_space = 0x48,
  _Ch_upper = 0x1,
  _Ch_xdigit = 0x80,
  _Ch_blank = 0x48,
};

/* 74 */
typedef $3765A173ADD7CE92B6314F58D2CDA9A2 $E0E5A63BEEC24A40788161BF85A9B058;

/* 75 */
enum std::time_base::dateorder
{
  no_order = 0x0,
  dmy = 0x1,
  mdy = 0x2,
  ymd = 0x3,
  ydm = 0x4,
};

/* 76 */
enum std::regex_constants::syntax_option_type
{
  ECMAScript = 0x1,
  basic = 0x2,
  extended = 0x4,
  awk = 0x8,
  grep = 0x10,
  egrep = 0x20,
  _Gmask = 0x3F,
  icase = 0x100,
  nosubs = 0x200,
  optimize = 0x400,
  collate = 0x800,
};

/* 77 */
enum __vcrt_lock_id
{
  __vcrt_undname_lock = 0x0,
  __vcrt_lock_count = 0x1,
};

/* 78 */
enum module_id
{
  advapi32 = 0x0,
  api_ms_win_core_fibers_l1_1_1 = 0x1,
  api_ms_win_core_synch_l1_2_0 = 0x2,
  kernel32 = 0x3,
  module_id_count = 0x4,
};

/* 79 */
enum function_id
{
  EventRegister_id = 0x0,
  EventSetInformation_id = 0x1,
  EventUnregister_id = 0x2,
  EventWriteTransfer_id = 0x3,
  FlsAlloc_id = 0x4,
  FlsFree_id = 0x5,
  FlsGetValue_id = 0x6,
  FlsSetValue_id = 0x7,
  InitializeCriticalSectionEx_id = 0x8,
  function_id_count = 0x9,
};

/* 80 */
enum _EVENT_INFO_CLASS
{
  EventProviderBinaryTrackInfo = 0x0,
  MaxEventInfo = 0x1,
};

/* 81 */
enum Tokens
{
  TOK_basedLp = 0x0,
  TOK_cdecl = 0x1,
  TOK_pascal = 0x2,
  TOK_stdcall = 0x3,
  TOK_thiscall = 0x4,
  TOK_fastcall = 0x5,
  TOK_vectorcall = 0x6,
  TOK_cocall = 0x7,
  TOK_eabi = 0x8,
  TOK_ptr64 = 0x9,
  TOK_restrict = 0xA,
  TOK_unaligned = 0xB,
  TOK_restrictSpecLp = 0xC,
  TOK__last = 0xD,
};

/* 82 */
enum DNameStatus
{
  DN_valid = 0x0,
  DN_truncated = 0x1,
  DN_invalid = 0x2,
  DN_error = 0x3,
};

/* 83 */
enum _FP_OPERATION_CODE
{
  _FpCodeUnspecified = 0x0,
  _FpCodeAdd = 0x1,
  _FpCodeSubtract = 0x2,
  _FpCodeMultiply = 0x3,
  _FpCodeDivide = 0x4,
  _FpCodeSquareRoot = 0x5,
  _FpCodeRemainder = 0x6,
  _FpCodeCompare = 0x7,
  _FpCodeConvert = 0x8,
  _FpCodeRound = 0x9,
  _FpCodeTruncate = 0xA,
  _FpCodeFloor = 0xB,
  _FpCodeCeil = 0xC,
  _FpCodeAcos = 0xD,
  _FpCodeAsin = 0xE,
  _FpCodeAtan = 0xF,
  _FpCodeAtan2 = 0x10,
  _FpCodeCabs = 0x11,
  _FpCodeCos = 0x12,
  _FpCodeCosh = 0x13,
  _FpCodeExp = 0x14,
  _FpCodeFabs = 0x15,
  _FpCodeFmod = 0x16,
  _FpCodeFrexp = 0x17,
  _FpCodeHypot = 0x18,
  _FpCodeLdexp = 0x19,
  _FpCodeLog = 0x1A,
  _FpCodeLog10 = 0x1B,
  _FpCodeModf = 0x1C,
  _FpCodePow = 0x1D,
  _FpCodeSin = 0x1E,
  _FpCodeSinh = 0x1F,
  _FpCodeTan = 0x20,
  _FpCodeTanh = 0x21,
  _FpCodeY0 = 0x22,
  _FpCodeY1 = 0x23,
  _FpCodeYn = 0x24,
  _FpCodeLogb = 0x25,
  _FpCodeNextafter = 0x26,
  _FpCodeNegate = 0x27,
  _FpCodeFmin = 0x28,
  _FpCodeFmax = 0x29,
  _FpCodeConvertTrunc = 0x2A,
  _XMMIAddps = 0x2B,
  _XMMIAddss = 0x2C,
  _XMMISubps = 0x2D,
  _XMMISubss = 0x2E,
  _XMMIMulps = 0x2F,
  _XMMIMulss = 0x30,
  _XMMIDivps = 0x31,
  _XMMIDivss = 0x32,
  _XMMISqrtps = 0x33,
  _XMMISqrtss = 0x34,
  _XMMIMaxps = 0x35,
  _XMMIMaxss = 0x36,
  _XMMIMinps = 0x37,
  _XMMIMinss = 0x38,
  _XMMICmpps = 0x39,
  _XMMICmpss = 0x3A,
  _XMMIComiss = 0x3B,
  _XMMIUComiss = 0x3C,
  _XMMICvtpi2ps = 0x3D,
  _XMMICvtsi2ss = 0x3E,
  _XMMICvtps2pi = 0x3F,
  _XMMICvtss2si = 0x40,
  _XMMICvttps2pi = 0x41,
  _XMMICvttss2si = 0x42,
  _XMMIAddsubps = 0x43,
  _XMMIHaddps = 0x44,
  _XMMIHsubps = 0x45,
  _XMMIRoundps = 0x46,
  _XMMIRoundss = 0x47,
  _XMMIDpps = 0x48,
  _XMMI2Addpd = 0x49,
  _XMMI2Addsd = 0x4A,
  _XMMI2Subpd = 0x4B,
  _XMMI2Subsd = 0x4C,
  _XMMI2Mulpd = 0x4D,
  _XMMI2Mulsd = 0x4E,
  _XMMI2Divpd = 0x4F,
  _XMMI2Divsd = 0x50,
  _XMMI2Sqrtpd = 0x51,
  _XMMI2Sqrtsd = 0x52,
  _XMMI2Maxpd = 0x53,
  _XMMI2Maxsd = 0x54,
  _XMMI2Minpd = 0x55,
  _XMMI2Minsd = 0x56,
  _XMMI2Cmppd = 0x57,
  _XMMI2Cmpsd = 0x58,
  _XMMI2Comisd = 0x59,
  _XMMI2UComisd = 0x5A,
  _XMMI2Cvtpd2pi = 0x5B,
  _XMMI2Cvtsd2si = 0x5C,
  _XMMI2Cvttpd2pi = 0x5D,
  _XMMI2Cvttsd2si = 0x5E,
  _XMMI2Cvtps2pd = 0x5F,
  _XMMI2Cvtss2sd = 0x60,
  _XMMI2Cvtpd2ps = 0x61,
  _XMMI2Cvtsd2ss = 0x62,
  _XMMI2Cvtdq2ps = 0x63,
  _XMMI2Cvttps2dq = 0x64,
  _XMMI2Cvtps2dq = 0x65,
  _XMMI2Cvttpd2dq = 0x66,
  _XMMI2Cvtpd2dq = 0x67,
  _XMMI2Addsubpd = 0x68,
  _XMMI2Haddpd = 0x69,
  _XMMI2Hsubpd = 0x6A,
  _XMMI2Roundpd = 0x6B,
  _XMMI2Roundsd = 0x6C,
  _XMMI2Dppd = 0x6D,
};

/* 84 */
enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS
{
  JOB_OBJECT_NET_RATE_CONTROL_ENABLE = 0x1,
  JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = 0x2,
  JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = 0x4,
  JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = 0x7,
};

/* 85 */
enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS
{
  JOB_OBJECT_IO_RATE_CONTROL_ENABLE = 0x1,
  JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = 0x1,
};

/* 86 */
enum error_types
{
  logl_zero = 0x0,
  logl_negative = 0x1,
  log_zero = 0x2,
  log_negative = 0x3,
  logf_zero = 0x4,
  logf_negative = 0x5,
  log10l_zero = 0x6,
  log10l_negative = 0x7,
  log10_zero = 0x8,
  log10_negative = 0x9,
  log10f_zero = 0xA,
  log10f_negative = 0xB,
  expl_overflow = 0xC,
  expl_underflow = 0xD,
  exp_overflow = 0xE,
  exp_underflow = 0xF,
  expf_overflow = 0x10,
  expf_underflow = 0x11,
  powl_overflow = 0x12,
  powl_underflow = 0x13,
  powl_zero_to_zero = 0x14,
  powl_zero_to_negative = 0x15,
  powl_neg_to_non_integer = 0x16,
  powl_nan_to_zero = 0x17,
  pow_overflow = 0x18,
  pow_underflow = 0x19,
  pow_zero_to_zero = 0x1A,
  pow_zero_to_negative = 0x1B,
  pow_neg_to_non_integer = 0x1C,
  pow_nan_to_zero = 0x1D,
  powf_overflow = 0x1E,
  powf_underflow = 0x1F,
  powf_zero_to_zero = 0x20,
  powf_zero_to_negative = 0x21,
  powf_neg_to_non_integer = 0x22,
  powf_nan_to_zero = 0x23,
  atan2l_zero = 0x24,
  atan2_zero = 0x25,
  atan2f_zero = 0x26,
  expm1l_overflow = 0x27,
  expm1l_underflow = 0x28,
  expm1_overflow = 0x29,
  expm1_underflow = 0x2A,
  expm1f_overflow = 0x2B,
  expm1f_underflow = 0x2C,
  hypotl_overflow = 0x2D,
  hypot_overflow = 0x2E,
  hypotf_overflow = 0x2F,
  sqrtl_negative = 0x30,
  sqrt_negative = 0x31,
  sqrtf_negative = 0x32,
  scalbl_overflow = 0x33,
  scalbl_underflow = 0x34,
  scalb_overflow = 0x35,
  scalb_underflow = 0x36,
  scalbf_overflow = 0x37,
  scalbf_underflow = 0x38,
  acosl_gt_one = 0x39,
  acos_gt_one = 0x3A,
  acosf_gt_one = 0x3B,
  asinl_gt_one = 0x3C,
  asin_gt_one = 0x3D,
  asinf_gt_one = 0x3E,
  coshl_overflow = 0x3F,
  cosh_overflow = 0x40,
  coshf_overflow = 0x41,
  y0l_zero = 0x42,
  y0l_negative = 0x43,
  y0l_gt_loss = 0x44,
  y0_zero = 0x45,
  y0_negative = 0x46,
  y0_gt_loss = 0x47,
  y0f_zero = 0x48,
  y0f_negative = 0x49,
  y0f_gt_loss = 0x4A,
  y1l_zero = 0x4B,
  y1l_negative = 0x4C,
  y1l_gt_loss = 0x4D,
  y1_zero = 0x4E,
  y1_negative = 0x4F,
  y1_gt_loss = 0x50,
  y1f_zero = 0x51,
  y1f_negative = 0x52,
  y1f_gt_loss = 0x53,
  ynl_zero = 0x54,
  ynl_negative = 0x55,
  ynl_gt_loss = 0x56,
  yn_zero = 0x57,
  yn_negative = 0x58,
  yn_gt_loss = 0x59,
  ynf_zero = 0x5A,
  ynf_negative = 0x5B,
  ynf_gt_loss = 0x5C,
  j0l_gt_loss = 0x5D,
  j0_gt_loss = 0x5E,
  j0f_gt_loss = 0x5F,
  j1l_gt_loss = 0x60,
  j1_gt_loss = 0x61,
  j1f_gt_loss = 0x62,
  jnl_gt_loss = 0x63,
  jn_gt_loss = 0x64,
  jnf_gt_loss = 0x65,
  lgammal_overflow = 0x66,
  lgammal_negative = 0x67,
  lgammal_reserve = 0x68,
  lgamma_overflow = 0x69,
  lgamma_negative = 0x6A,
  lgamma_reserve = 0x6B,
  lgammaf_overflow = 0x6C,
  lgammaf_negative = 0x6D,
  lgammaf_reserve = 0x6E,
  gammal_overflow = 0x6F,
  gammal_negative = 0x70,
  gammal_reserve = 0x71,
  gamma_overflow = 0x72,
  gamma_negative = 0x73,
  gamma_reserve = 0x74,
  gammaf_overflow = 0x75,
  gammaf_negative = 0x76,
  gammaf_reserve = 0x77,
  fmodl_by_zero = 0x78,
  fmod_by_zero = 0x79,
  fmodf_by_zero = 0x7A,
  remainderl_by_zero = 0x7B,
  remainder_by_zero = 0x7C,
  remainderf_by_zero = 0x7D,
  sinhl_overflow = 0x7E,
  sinh_overflow = 0x7F,
  sinhf_overflow = 0x80,
  atanhl_gt_one = 0x81,
  atanhl_eq_one = 0x82,
  atanh_gt_one = 0x83,
  atanh_eq_one = 0x84,
  atanhf_gt_one = 0x85,
  atanhf_eq_one = 0x86,
  acoshl_lt_one = 0x87,
  acosh_lt_one = 0x88,
  acoshf_lt_one = 0x89,
  log1pl_zero = 0x8A,
  log1pl_negative = 0x8B,
  log1p_zero = 0x8C,
  log1p_negative = 0x8D,
  log1pf_zero = 0x8E,
  log1pf_negative = 0x8F,
  ldexpl_overflow = 0x90,
  ldexpl_underflow = 0x91,
  ldexp_overflow = 0x92,
  ldexp_underflow = 0x93,
  ldexpf_overflow = 0x94,
  ldexpf_underflow = 0x95,
  logbl_zero = 0x96,
  logb_zero = 0x97,
  logbf_zero = 0x98,
  nextafterl_overflow = 0x99,
  nextafter_overflow = 0x9A,
  nextafterf_overflow = 0x9B,
  ilogbl_zero = 0x9C,
  ilogb_zero = 0x9D,
  ilogbf_zero = 0x9E,
  exp2l_overflow = 0x9F,
  exp2l_underflow = 0xA0,
  exp2_overflow = 0xA1,
  exp2_underflow = 0xA2,
  exp2f_overflow = 0xA3,
  exp2f_underflow = 0xA4,
  exp10l_overflow = 0xA5,
  exp10_overflow = 0xA6,
  exp10f_overflow = 0xA7,
  log2l_zero = 0xA8,
  log2l_negative = 0xA9,
  log2_zero = 0xAA,
  log2_negative = 0xAB,
  log2f_zero = 0xAC,
  log2f_negative = 0xAD,
  log_nan = 0x3E8,
  log10_nan = 0x3E9,
  exp_nan = 0x3EA,
  atan_nan = 0x3EB,
  ceil_nan = 0x3EC,
  floor_nan = 0x3ED,
  pow_nan = 0x3EE,
  modf_nan = 0x3EF,
  acos_nan = 0x3F0,
  asin_nan = 0x3F1,
  sin_naninf = 0x3F2,
  cos_naninf = 0x3F3,
  tan_naninf = 0x3F4,
  sqrt_nan = 0x3F5,
};

/* 87 */
enum _FPIEEE_FORMAT
{
  _FpFormatFp32 = 0x0,
  _FpFormatFp64 = 0x1,
  _FpFormatFp80 = 0x2,
  _FpFormatFp128 = 0x3,
  _FpFormatI16 = 0x4,
  _FpFormatI32 = 0x5,
  _FpFormatI64 = 0x6,
  _FpFormatU16 = 0x7,
  _FpFormatU32 = 0x8,
  _FpFormatU64 = 0x9,
  _FpFormatBcd80 = 0xA,
  _FpFormatCompare = 0xB,
  _FpFormatString = 0xC,
};

/* 88 */
enum TrustLevel
{
  BaseTrust = 0x0,
  PartialTrust = 0x1,
  FullTrust = 0x2,
};

/* 89 */
enum RO_INIT_TYPE
{
  RO_INIT_SINGLETHREADED = 0x0,
  RO_INIT_MULTITHREADED = 0x1,
};

/* 90 */
enum __crt_state_management::global_state_index
{
  program_state_index = 0x0,
  state_index_count = 0x1,
};

/* 91 */
enum __acrt_lock_id
{
  __acrt_heap_lock = 0x0,
  __acrt_debug_lock = 0x1,
  __acrt_exit_lock = 0x2,
  __acrt_signal_lock = 0x3,
  __acrt_locale_lock = 0x4,
  __acrt_multibyte_cp_lock = 0x5,
  __acrt_time_lock = 0x6,
  __acrt_lowio_index_lock = 0x7,
  __acrt_stdio_index_lock = 0x8,
  __acrt_conio_lock = 0x9,
  __acrt_popen_lock = 0xA,
  __acrt_environment_lock = 0xB,
  __acrt_tempnam_lock = 0xC,
  __acrt_lock_count = 0xD,
};

/* 92 */
enum _FPIEEE_ROUNDING_MODE
{
  _FpRoundNearest = 0x0,
  _FpRoundMinusInfinity = 0x1,
  _FpRoundPlusInfinity = 0x2,
  _FpRoundChopped = 0x3,
};

/* 93 */
enum _FPIEEE_PRECISION
{
  _FpPrecisionFull = 0x0,
  _FpPrecision53 = 0x1,
  _FpPrecision24 = 0x2,
};

/* 94 */
enum transition_type
{
  start_of_dst = 0x0,
  end_of_dst = 0x1,
};

/* 95 */
enum date_type
{
  absolute_date = 0x0,
  day_in_month = 0x1,
};

/* 96 */
enum $DC56EB0528E6A0B1F4862F1A34E1652A
{
  max_time_t = 0x93406FFF,
};

/* 97 */
enum $60F22570C5DC199C8C87326C7C2AAF0F
{
  max_year = 0x44C,
};

/* 98 */
typedef $DC56EB0528E6A0B1F4862F1A34E1652A $775C7544098B8C17D314C1D019E4362F;

/* 99 */
typedef $60F22570C5DC199C8C87326C7C2AAF0F $5FC58B14ADEB6F3DD08978D1398708C1;

/* 100 */
enum $C97936907F2E9B3338E0794C9EC46DF1
{
  pack_size = 0x20,
};

/* 101 */
enum $DB172DDDE5F27D82E90C8DEA3DB4FE04
{
  element_size = 0x1,
  elements_per_pack = 0x10,
};

/* 102 */
typedef $DB172DDDE5F27D82E90C8DEA3DB4FE04 $967735B7F6542CDAB59CCAE3D7885E54;

/* 103 */
typedef $C97936907F2E9B3338E0794C9EC46DF1 $5CF7DBC53F6F32D69DAB37F667FD2A10;

/* 104 */
enum __crt_simd_isa
{
  sse2 = 0x0,
  avx2 = 0x1,
};

/* 105 */
typedef MACRO__IOREAD $B3C4F2FB26B07EF1D23D08AB45FC61E6;

/* 106 */
enum __crt_lowio_text_mode
{
  ansi = 0x0,
  utf8 = 0x1,
  utf16le = 0x2,
};

/* 107 */
enum $C97727942FFF695511CC5A9A536FF8B2
{
  FOPEN = 0x1,
  FEOFLAG = 0x2,
  FCRLF = 0x4,
  FPIPE = 0x8,
  FNOINHERIT = 0x10,
  FAPPEND = 0x20,
  FDEV = 0x40,
  FTEXT = 0x80,
};

/* 108 */
enum __crt_stdio_output::FLAG
{
  FL_SIGN = 0x1,
  FL_SIGNSP = 0x2,
  FL_LEFT = 0x4,
  FL_LEADZERO = 0x8,
  FL_SIGNED = 0x10,
  FL_ALTERNATE = 0x20,
  FL_NEGATIVE = 0x40,
  FL_FORCEOCTAL = 0x80,
};

/* 109 */
enum __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass
{
  not_started = 0x0,
  position_scan = 0x1,
  output = 0x2,
  finished = 0x3,
};

/* 110 */
enum __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::mode
{
  unknown = 0x0,
  nonpositional = 0x1,
  positional = 0x2,
};

/* 111 */
enum __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::parameter_type
{
  unused = 0x0,
  int32 = 0x1,
  int64 = 0x2,
  pointer = 0x3,
  real64 = 0x4,
};

/* 112 */
enum __crt_stdio_output::length_modifier
{
  none = 0x0,
  hh = 0x1,
  h = 0x2,
  l = 0x3,
  ll = 0x4,
  j = 0x5,
  z = 0x6,
  t = 0x7,
  L = 0x8,
  I = 0x9,
  I32 = 0xA,
  I64 = 0xB,
  w = 0xC,
  T = 0xD,
  enumerator_count = 0xE,
};

/* 113 */
typedef __vc_attributes::event_sourceAttribute::optimize_e __crt_stdio_output::state;

/* 114 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass __crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass;

/* 115 */
enum $31F4AE57909C71802BB619CAB83033DA
{
  member_buffer_size = 0x400,
  maximum_precision = 0x200,
};

/* 116 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> >::pass;

/* 117 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::mode __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> >::mode;

/* 118 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::parameter_type __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> >::parameter_type;

/* 119 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >::pass;

/* 120 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::mode __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >::mode;

/* 121 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::parameter_type __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >::parameter_type;

/* 122 */
typedef $3765A173ADD7CE92B6314F58D2CDA9A2 __crt_stdio_output::character_type;

/* 123 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass __crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >::pass;

/* 124 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass __crt_stdio_output::standard_base<char,__crt_stdio_output::string_output_adapter<char> >::pass;

/* 125 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> >::pass;

/* 126 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::mode __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> >::mode;

/* 127 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::parameter_type __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> >::parameter_type;

/* 128 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass __crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> >::pass;

/* 129 */
enum $F4B69C7BEC7FF395B8587B2B11206DC2
{
  mantissa_bits = 0x35,
  exponent_bits = 0xB,
  maximum_binary_exponent = 0x3FF,
  minimum_binary_exponent = 0xFFFFFC02,
  exponent_bias = 0x3FF,
};

/* 130 */
enum $69A6FE18FC3F31E7EC35A0F7A3615857
{
  exponent_mask = 0x7FF,
  normal_mantissa_mask = 0xFFFFFFFF,
  denormal_mantissa_mask = 0xFFFFFFFF,
  special_nan_mantissa_mask = 0x0,
};

/* 131 */
enum __acrt_fp_class
{
  finite = 0x0,
  infinity = 0x1,
  quiet_nan = 0x2,
  signaling_nan = 0x3,
  indeterminate = 0x4,
};

/* 132 */
typedef $F4B69C7BEC7FF395B8587B2B11206DC2 $4F8920A4A41098E9B028CEC92197A983;

/* 133 */
typedef $69A6FE18FC3F31E7EC35A0F7A3615857 $A15C22A9078F845A4F065AEEF86032E4;

/* 134 */
enum $1E007D60BF1FBD65FD8FF5F337DCE184
{
  initial_table_count = 0x20,
  minimum_table_increment = 0x4,
  maximum_table_increment = 0x200,
};

/* 135 */
enum _PS_WAKE_REASON
{
  PsWakeReasonUser = 0x0,
  PsWakeReasonExecutionRequired = 0x1,
  PsWakeReasonKernel = 0x2,
  PsWakeReasonInstrumentation = 0x3,
  PsWakeReasonPreserveProcess = 0x4,
  PsMaxWakeReasons = 0x5,
};

/* 136 */
enum _crt_exit_return_mode
{
  _crt_exit_terminate_process = 0x0,
  _crt_exit_return_to_caller = 0x1,
};

/* 137 */
enum _crt_exit_cleanup_mode
{
  _crt_exit_full_cleanup = 0x0,
  _crt_exit_quick_cleanup = 0x1,
  _crt_exit_no_cleanup = 0x2,
};

/* 138 */
enum SE_WS_APPX_SIGNATURE_ORIGIN
{
  SE_WS_APPX_SIGNATURE_ORIGIN_NOT_VALIDATED = 0x0,
  SE_WS_APPX_SIGNATURE_ORIGIN_UNKNOWN = 0x1,
  SE_WS_APPX_SIGNATURE_ORIGIN_APPSTORE = 0x2,
  SE_WS_APPX_SIGNATURE_ORIGIN_WINDOWS = 0x3,
  SE_WS_APPX_SIGNATURE_ORIGIN_ENTERPRISE = 0x4,
};

/* 139 */
enum _RTL_RESOURCE_POLICY_FLAGS
{
  RTL_RESOURCE_POLICY_FLAGS_NONE = 0x0,
};

/* 140 */
enum _NT_PRODUCT_TYPE
{
  NtProductWinNt = 0x1,
  NtProductLanManNt = 0x2,
  NtProductServer = 0x3,
};

/* 141 */
enum _ALTERNATIVE_ARCHITECTURE_TYPE
{
  StandardDesign = 0x0,
  NEC98x86 = 0x1,
  EndAlternatives = 0x2,
};

/* 142 */
enum _KSPIN_LOCK_QUEUE_NUMBER
{
  LockQueueUnusedSpare0 = 0x0,
  LockQueueUnusedSpare1 = 0x1,
  LockQueueUnusedSpare2 = 0x2,
  LockQueueUnusedSpare3 = 0x3,
  LockQueueVacbLock = 0x4,
  LockQueueMasterLock = 0x5,
  LockQueueNonPagedPoolLock = 0x6,
  LockQueueIoCancelLock = 0x7,
  LockQueueWorkQueueLock = 0x8,
  LockQueueIoVpbLock = 0x9,
  LockQueueIoDatabaseLock = 0xA,
  LockQueueIoCompletionLock = 0xB,
  LockQueueNtfsStructLock = 0xC,
  LockQueueAfdWorkQueueLock = 0xD,
  LockQueueBcbLock = 0xE,
  LockQueueUnusedSpare15 = 0xF,
  LockQueueUnusedSpare16 = 0x10,
  LockQueueMaximumLock = 0x11,
};

/* 143 */
enum _crt_app_type
{
  _crt_unknown_app = 0x0,
  _crt_console_app = 0x1,
  _crt_gui_app = 0x2,
};

/* 144 */
enum _FILE_INFO_BY_HANDLE_CLASS
{
  FileBasicInfo = 0x0,
  FileStandardInfo = 0x1,
  FileNameInfo = 0x2,
  FileRenameInfo = 0x3,
  FileDispositionInfo = 0x4,
  FileAllocationInfo = 0x5,
  FileEndOfFileInfo = 0x6,
  FileStreamInfo = 0x7,
  FileCompressionInfo = 0x8,
  FileAttributeTagInfo = 0x9,
  FileIdBothDirectoryInfo = 0xA,
  FileIdBothDirectoryRestartInfo = 0xB,
  FileIoPriorityHintInfo = 0xC,
  FileRemoteProtocolInfo = 0xD,
  FileFullDirectoryInfo = 0xE,
  FileFullDirectoryRestartInfo = 0xF,
  FileStorageInfo = 0x10,
  FileAlignmentInfo = 0x11,
  FileIdInfo = 0x12,
  FileIdExtdDirectoryInfo = 0x13,
  FileIdExtdDirectoryRestartInfo = 0x14,
  MaximumFileInfoByHandleClass = 0x15,
};

/* 145 */
typedef __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::mode __acrt_is_packaged_app::__l2::state;

/* 146 */
typedef __crt_stdio_output::FLAG $CB840D3AB6A8444486D394F8CE659C13;

/* 147 */
enum SLD_STATUS
{
  SLD_OK = 0x0,
  SLD_NODIGITS = 0x1,
  SLD_UNDERFLOW = 0x2,
  SLD_OVERFLOW = 0x3,
};

/* 148 */
enum $3143A7E76DC998FE4865D06FD624AE89
{
  value = 0x1,
};

/* 149 */
typedef $3143A7E76DC998FE4865D06FD624AE89 $F9AF551EA4EDF7DA3F11B1C468C927D1;

/* 150 */
enum $6203ABD29D98E2165EF90E496859D9C8
{
  maximum_bits = 0xE4A,
  element_bits = 0x20,
  element_count = 0x73,
};

/* 151 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  char Data4[8];
};

/* 152 */
struct $983F061E0B702DD8AE0B4B955735A6A3
{
  unsigned int Lo;
  int Hi;
};

/* 153 */
union tagCY
{
  $983F061E0B702DD8AE0B4B955735A6A3 __s0;
  __int64 int64;
};

/* 154 */
struct IUnknown
{
  IUnknownVtbl *vfptr;
};

/* 1178 */
typedef int HRESULT;

/* 155 */
struct IUnknownVtbl
{
  HRESULT (__stdcall *QueryInterface)(IUnknown *this, _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
};

/* 156 */
struct __cppobj IDispatch : IUnknown
{
};

/* 157 */
struct tagSAFEARRAYBOUND
{
  unsigned int cElements;
  int lLbound;
};

/* 158 */
struct tagSAFEARRAY
{
  unsigned __int16 cDims;
  unsigned __int16 fFeatures;
  unsigned int cbElements;
  unsigned int cLocks;
  void *pvData;
  tagSAFEARRAYBOUND rgsabound[1];
};

/* 166 */
struct $E2F13C0D8C7A5E44CBEA2DDC2BADB614
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  __int64 llVal;
};

/* 160 */
struct $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA
{
  char scale;
  char sign;
};

/* 161 */
union $62972AD762C81E3A8A560233B379C384
{
  $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA __s0;
  unsigned __int16 signscale;
};

/* 162 */
struct $A04CD8C0331024E133CCEC4B0AB36956
{
  unsigned int Lo32;
  unsigned int Mid32;
};

/* 163 */
union $8C47AF26B19816D8CA9EA583B5A1416E
{
  $A04CD8C0331024E133CCEC4B0AB36956 __s0;
  unsigned __int64 Lo64;
};

/* 164 */
struct tagDEC
{
  unsigned __int16 wReserved;
  $62972AD762C81E3A8A560233B379C384 ___u1;
  unsigned int Hi32;
  $8C47AF26B19816D8CA9EA583B5A1416E ___u3;
};

/* 167 */
struct $592AC76FBF6F1A6A517EB79C0D3B435F
{
  _BYTE gap0[8];
  int lVal;
  IRecordInfo *pRecInfo;
};

/* 168 */
struct $F28A51B4B40B0D33C72915D739D42B4B
{
  _BYTE gap0[8];
  char bVal;
};

/* 169 */
struct $31126B8528A05AF3606C6D495FD178E8
{
  _BYTE gap0[8];
  __int16 iVal;
};

/* 170 */
struct $50230A970D9734D4E9774CFC619DF0F6
{
  _BYTE gap0[8];
  float fltVal;
};

/* 171 */
struct $4C0EC2258454B893CE739DAE89D8DB7B
{
  _BYTE gap0[8];
  long double dblVal;
};

/* 172 */
struct $6DB36323059316E675433BB10D285009
{
  _BYTE gap0[8];
  __int16 boolVal;
};

/* 173 */
struct $8E3C8731874D1B3BC66617C4DD3163A6
{
  _BYTE gap0[8];
  int scode;
};

/* 174 */
struct $35F8D598A1626928EE0EA6F426D2C6F5
{
  _BYTE gap0[8];
  tagCY cyVal;
};

/* 175 */
struct $E94952165EEA9EEA990FEB33603E1B19
{
  _BYTE gap0[8];
  long double date;
};

/* 1125 */
typedef unsigned __int16 wchar_t;

/* 176 */
struct $7B1C2AA558A72DB3909F7F0B6C8C78B2
{
  _BYTE gap0[8];
  wchar_t *bstrVal;
};

/* 177 */
struct $7A96358AB4C9BA41A1648542204D6777
{
  _BYTE gap0[8];
  IUnknown *punkVal;
};

/* 178 */
struct $3A445663AFFDA99601087C5A9E6FAE7A
{
  _BYTE gap0[8];
  IDispatch *pdispVal;
};

/* 179 */
struct $9DF088F4CC77DDA079C87C673A517E4C
{
  _BYTE gap0[8];
  tagSAFEARRAY *parray;
};

/* 180 */
struct $166B1F81F6EA96F97683A65F38FB1A59
{
  _BYTE gap0[8];
  char *pbVal;
};

/* 181 */
struct $76732A64405C0E287FCB302687644550
{
  _BYTE gap0[8];
  __int16 *piVal;
};

/* 182 */
struct $E5FC128E66C26C95254032BA69D36E74
{
  _BYTE gap0[8];
  int *plVal;
};

/* 183 */
struct $E9CDCC48CD0BB58E8F361AA17BFDA76E
{
  _BYTE gap0[8];
  __int64 *pllVal;
};

/* 184 */
struct $BF8CC88CDF129BD6E4FA4ABA13F521AD
{
  _BYTE gap0[8];
  float *pfltVal;
};

/* 185 */
struct $2CABE618CF1C2625A4479554E4967E0A
{
  _BYTE gap0[8];
  long double *pdblVal;
};

/* 186 */
struct $AAA92DA1D6E1B0E8462F69216B62027C
{
  _BYTE gap0[8];
  __int16 *pboolVal;
};

/* 187 */
struct $F7167AE7A8ABA03C094C204FB1564A28
{
  _BYTE gap0[8];
  int *pscode;
};

/* 188 */
struct $1D3A1A012CBAA175DFF2E8941C8EDFC0
{
  _BYTE gap0[8];
  tagCY *pcyVal;
};

/* 189 */
struct $6857AE69DB7C952EEFD665431A7B503A
{
  _BYTE gap0[8];
  long double *pdate;
};

/* 190 */
struct $BE56ADCB97A5F80C4E840DC3FCEE04D4
{
  _BYTE gap0[8];
  wchar_t **pbstrVal;
};

/* 191 */
struct $05500710587EC12AABDDB1DB9A6DA58C
{
  _BYTE gap0[8];
  IUnknown **ppunkVal;
};

/* 192 */
struct $18B9EC2889430C2B56A3CC51EEA4F99C
{
  _BYTE gap0[8];
  IDispatch **ppdispVal;
};

/* 193 */
struct $E31575FE753162278696770EE98823B6
{
  _BYTE gap0[8];
  tagSAFEARRAY **pparray;
};

/* 194 */
struct $2A545D4C89DCE5F0964B3B21FAA1C6D2
{
  _BYTE gap0[8];
  tagVARIANT *pvarVal;
};

/* 195 */
struct $6C39A09D97B880131B2C5BB4943CBB45
{
  _BYTE gap0[8];
  void *byref;
};

/* 196 */
struct $E898A5260D8380431CCAA47FCC291563
{
  _BYTE gap0[8];
  char cVal;
};

/* 197 */
struct $48802A31D3D0701BC13CEF9CEA041E7B
{
  _BYTE gap0[8];
  unsigned __int16 uiVal;
};

/* 198 */
struct $B644145F46FF1F932B106BFA6CC3F6D9
{
  _BYTE gap0[8];
  unsigned int ulVal;
};

/* 199 */
struct $EA00B0D50EAA1933F67C45009B664198
{
  _BYTE gap0[8];
  unsigned __int64 ullVal;
};

/* 200 */
struct $5CA90CF57237397281FB12BFD52C1905
{
  _BYTE gap0[8];
  int intVal;
};

/* 201 */
struct $E7F48E2F4EAA3149E57D87E5D1B2C6B8
{
  _BYTE gap0[8];
  unsigned int uintVal;
};

/* 202 */
struct $7AF01F093920119C128347CB89CF9295
{
  _BYTE gap0[8];
  tagDEC *pdecVal;
};

/* 203 */
struct $E1D71D20C3D01115E20D79FAE9629CE8
{
  _BYTE gap0[8];
  char *pcVal;
};

/* 204 */
struct $5669F5A4AD19EF2CB42A5602080CB0A6
{
  _BYTE gap0[8];
  unsigned __int16 *puiVal;
};

/* 205 */
struct $886F8AE9D7C8B1B861B6CA58D67B682A
{
  _BYTE gap0[8];
  unsigned int *pulVal;
};

/* 206 */
struct $ADBB94A21537A8461C6168A5B871A740
{
  _BYTE gap0[8];
  unsigned __int64 *pullVal;
};

/* 207 */
struct $CDA73A427DD2A30CDA26CA3394C33CF0
{
  _BYTE gap0[8];
  int *pintVal;
};

/* 208 */
struct $2516E53E690D8CC5659AAB7EDC49E664
{
  _BYTE gap0[8];
  unsigned int *puintVal;
};

/* 209 */
struct $17B4421FDC73B39569D8A12F584CB67F
{
  _BYTE gap0[8];
  void *pvRecord;
};

/* 210 */
union $B99321E4B274CF353E26945278D8FDFA
{
  $E2F13C0D8C7A5E44CBEA2DDC2BADB614 __s0;
  tagDEC decVal;
  $592AC76FBF6F1A6A517EB79C0D3B435F __s2;
  $F28A51B4B40B0D33C72915D739D42B4B __s3;
  $31126B8528A05AF3606C6D495FD178E8 __s4;
  $50230A970D9734D4E9774CFC619DF0F6 __s5;
  $4C0EC2258454B893CE739DAE89D8DB7B __s6;
  $6DB36323059316E675433BB10D285009 __s7;
  $8E3C8731874D1B3BC66617C4DD3163A6 __s8;
  $35F8D598A1626928EE0EA6F426D2C6F5 __s9;
  $E94952165EEA9EEA990FEB33603E1B19 __s10;
  $7B1C2AA558A72DB3909F7F0B6C8C78B2 __s11;
  $7A96358AB4C9BA41A1648542204D6777 __s12;
  $3A445663AFFDA99601087C5A9E6FAE7A __s13;
  $9DF088F4CC77DDA079C87C673A517E4C __s14;
  $166B1F81F6EA96F97683A65F38FB1A59 __s15;
  $76732A64405C0E287FCB302687644550 __s16;
  $E5FC128E66C26C95254032BA69D36E74 __s17;
  $E9CDCC48CD0BB58E8F361AA17BFDA76E __s18;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD __s19;
  $2CABE618CF1C2625A4479554E4967E0A __s20;
  $AAA92DA1D6E1B0E8462F69216B62027C __s21;
  $F7167AE7A8ABA03C094C204FB1564A28 __s22;
  $1D3A1A012CBAA175DFF2E8941C8EDFC0 __s23;
  $6857AE69DB7C952EEFD665431A7B503A __s24;
  $BE56ADCB97A5F80C4E840DC3FCEE04D4 __s25;
  $05500710587EC12AABDDB1DB9A6DA58C __s26;
  $18B9EC2889430C2B56A3CC51EEA4F99C __s27;
  $E31575FE753162278696770EE98823B6 __s28;
  $2A545D4C89DCE5F0964B3B21FAA1C6D2 __s29;
  $6C39A09D97B880131B2C5BB4943CBB45 __s30;
  $E898A5260D8380431CCAA47FCC291563 __s31;
  $48802A31D3D0701BC13CEF9CEA041E7B __s32;
  $B644145F46FF1F932B106BFA6CC3F6D9 __s33;
  $EA00B0D50EAA1933F67C45009B664198 __s34;
  $5CA90CF57237397281FB12BFD52C1905 __s35;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 __s36;
  $7AF01F093920119C128347CB89CF9295 __s37;
  $E1D71D20C3D01115E20D79FAE9629CE8 __s38;
  $5669F5A4AD19EF2CB42A5602080CB0A6 __s39;
  $886F8AE9D7C8B1B861B6CA58D67B682A __s40;
  $ADBB94A21537A8461C6168A5B871A740 __s41;
  $CDA73A427DD2A30CDA26CA3394C33CF0 __s42;
  $2516E53E690D8CC5659AAB7EDC49E664 __s43;
  $17B4421FDC73B39569D8A12F584CB67F __s44;
};

/* 159 */
struct tagVARIANT
{
  $B99321E4B274CF353E26945278D8FDFA ___u0;
};

/* 165 */
struct __cppobj IRecordInfo : IUnknown
{
};

/* 211 */
struct tagPARAMDESCEX
{
  unsigned int cBytes;
  tagVARIANT varDefaultValue;
};

/* 212 */
struct __declspec(align(4)) tagPARAMDESC
{
  tagPARAMDESCEX *pparamdescex;
  unsigned __int16 wParamFlags;
};

/* 215 */
union $31CF6A43A9CA64F5484138CDDFE61C21
{
  tagTYPEDESC *lptdesc;
  tagARRAYDESC *lpadesc;
  unsigned int hreftype;
};

/* 213 */
struct __declspec(align(4)) tagTYPEDESC
{
  $31CF6A43A9CA64F5484138CDDFE61C21 ___u0;
  unsigned __int16 vt;
};

/* 214 */
struct __unaligned __declspec(align(4)) tagARRAYDESC
{
  tagTYPEDESC tdescElem;
  unsigned __int16 cDims;
  __declspec(align(4)) tagSAFEARRAYBOUND rgbounds[1];
};

/* 216 */
struct __declspec(align(4)) tagIDLDESC
{
  unsigned int dwReserved;
  unsigned __int16 wIDLFlags;
};

/* 217 */
union $D136F256C4B8F64B2288B20C606FD91E
{
  tagIDLDESC idldesc;
  tagPARAMDESC paramdesc;
};

/* 218 */
struct tagELEMDESC
{
  tagTYPEDESC tdesc;
  $D136F256C4B8F64B2288B20C606FD91E ___u1;
};

/* 219 */
struct __declspec(align(4)) tagFUNCDESC
{
  int memid;
  int *lprgscode;
  tagELEMDESC *lprgelemdescParam;
  tagFUNCKIND funckind;
  tagINVOKEKIND invkind;
  tagCALLCONV callconv;
  __int16 cParams;
  __int16 cParamsOpt;
  __int16 oVft;
  __int16 cScodes;
  tagELEMDESC elemdescFunc;
  unsigned __int16 wFuncFlags;
};

/* 220 */
union $CE81DBFFE96D0FF64526812D29567588
{
  unsigned int oInst;
  tagVARIANT *lpvarValue;
};

/* 221 */
struct tagVARDESC
{
  int memid;
  wchar_t *lpstrSchema;
  $CE81DBFFE96D0FF64526812D29567588 ___u2;
  tagELEMDESC elemdescVar;
  unsigned __int16 wVarFlags;
  tagVARKIND varkind;
};

/* 222 */
struct __cppobj ITypeComp : IUnknown
{
};

/* 223 */
union tagBINDPTR
{
  tagFUNCDESC *lpfuncdesc;
  tagVARDESC *lpvardesc;
  ITypeComp *lptcomp;
};

/* 224 */
struct __declspec(align(4)) tagTLIBATTR
{
  _GUID guid;
  unsigned int lcid;
  tagSYSKIND syskind;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  unsigned __int16 wLibFlags;
};

/* 225 */
struct $B950AFB169DC87688B328897744C612F
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/* 226 */
union _ULARGE_INTEGER
{
  $B950AFB169DC87688B328897744C612F __s0;
  $B950AFB169DC87688B328897744C612F u;
  unsigned __int64 QuadPart;
};

/* 227 */
struct _FILETIME
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/* 228 */
struct tagSTATSTG
{
  wchar_t *pwcsName;
  unsigned int type;
  _ULARGE_INTEGER cbSize;
  _FILETIME mtime;
  _FILETIME ctime;
  _FILETIME atime;
  unsigned int grfMode;
  unsigned int grfLocksSupported;
  _GUID clsid;
  unsigned int grfStateBits;
  unsigned int reserved;
};

/* 229 */
struct __cppobj IEnumSTATSTG : IUnknown
{
};

/* 230 */
struct __cppobj ITypeInfo : IUnknown
{
};

/* 231 */
struct tagEXCEPINFO
{
  unsigned __int16 wCode;
  unsigned __int16 wReserved;
  wchar_t *bstrSource;
  wchar_t *bstrDescription;
  wchar_t *bstrHelpFile;
  unsigned int dwHelpContext;
  void *pvReserved;
  HRESULT (__stdcall *pfnDeferredFillIn)(tagEXCEPINFO *);
  int scode;
};

/* 232 */
struct _KDHELP
{
  unsigned int Thread;
  unsigned int ThCallbackStack;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned int KiCallUserMode;
  unsigned int KeUserCallbackDispatcher;
  unsigned int SystemRangeStart;
  unsigned int ThCallbackBStore;
  unsigned int KiUserExceptionDispatcher;
  unsigned int StackBase;
  unsigned int StackLimit;
  unsigned int Reserved[5];
};

/* 233 */
struct _tagADDRESS64
{
  unsigned __int64 Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/* 234 */
struct _PROCESS_INFORMATION
{
  void *hProcess;
  void *hThread;
  unsigned int dwProcessId;
  unsigned int dwThreadId;
};

/* 235 */
struct tagCAUL
{
  unsigned int cElems;
  unsigned int *pElems;
};

/* 236 */
struct _tagADDRESS
{
  unsigned int Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/* 237 */
struct __cppobj __vcrt_va_list_is_reference<char const * const>
{
};

/* 238 */
struct _DETOUR_SECTION_RECORD
{
  unsigned int cbBytes;
  unsigned int nReserved;
  _GUID guid;
};

/* 239 */
struct tagCABSTR
{
  unsigned int cElems;
  wchar_t **pElems;
};

/* 240 */
struct _MEMORY_BASIC_INFORMATION
{
  void *BaseAddress;
  void *AllocationBase;
  unsigned int AllocationProtect;
  unsigned int RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/* 241 */
struct _IMAGE_FILE_HEADER
{
  unsigned __int16 Machine;
  unsigned __int16 NumberOfSections;
  unsigned int TimeDateStamp;
  unsigned int PointerToSymbolTable;
  unsigned int NumberOfSymbols;
  unsigned __int16 SizeOfOptionalHeader;
  unsigned __int16 Characteristics;
};

/* 242 */
struct __cppobj ISequentialStream : IUnknown
{
};

/* 243 */
struct tagBSTRBLOB
{
  unsigned int cbSize;
  char *pData;
};

/* 244 */
struct _IMAGE_DATA_DIRECTORY
{
  unsigned int VirtualAddress;
  unsigned int Size;
};

/* 245 */
struct tagTYPEATTR
{
  _GUID guid;
  unsigned int lcid;
  unsigned int dwReserved;
  int memidConstructor;
  int memidDestructor;
  wchar_t *lpstrSchema;
  unsigned int cbSizeInstance;
  tagTYPEKIND typekind;
  unsigned __int16 cFuncs;
  unsigned __int16 cVars;
  unsigned __int16 cImplTypes;
  unsigned __int16 cbSizeVft;
  unsigned __int16 cbAlignment;
  unsigned __int16 wTypeFlags;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  tagTYPEDESC tdescAlias;
  tagIDLDESC idldescType;
};

/* 246 */
struct __declspec(align(4)) __vc_attributes::event_sourceAttribute
{
  __vc_attributes::event_sourceAttribute::type_e type;
  __vc_attributes::event_sourceAttribute::optimize_e optimize;
  bool decorate;
};

/* 247 */
struct __vc_attributes::helper_attributes::v1_alttypeAttribute
{
  __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e type;
};

/* 248 */
struct __vc_attributes::helper_attributes::usageAttribute
{
  unsigned int value;
};

/* 249 */
struct __vc_attributes::threadingAttribute
{
  __vc_attributes::threadingAttribute::threading_e value;
};

/* 250 */
struct __vc_attributes::aggregatableAttribute
{
  __vc_attributes::aggregatableAttribute::type_e type;
};

/* 251 */
struct __declspec(align(4)) __vc_attributes::event_receiverAttribute
{
  __vc_attributes::event_receiverAttribute::type_e type;
  bool layout_dependent;
};

/* 252 */
struct __vc_attributes::moduleAttribute
{
  __vc_attributes::moduleAttribute::type_e type;
  const char *name;
  const char *version;
  const char *uuid;
  int lcid;
  bool control;
  const char *helpstring;
  int helpstringcontext;
  const char *helpstringdll;
  const char *helpfile;
  int helpcontext;
  bool hidden;
  bool restricted;
  const char *custom;
  const char *resource_name;
};

/* 253 */
struct tagCADBL
{
  unsigned int cElems;
  long double *pElems;
};

/* 254 */
struct _IMAGE_OPTIONAL_HEADER64
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned __int64 ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned __int64 SizeOfStackReserve;
  unsigned __int64 SizeOfStackCommit;
  unsigned __int64 SizeOfHeapReserve;
  unsigned __int64 SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 255 */
struct _IMAGE_NT_HEADERS64
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

/* 256 */
struct tagCALPSTR
{
  unsigned int cElems;
  char **pElems;
};

/* 257 */
struct __cppobj __vcrt_va_list_is_reference<char const *>
{
};

/* 258 */
struct tagCLIPDATA
{
  unsigned int cbSize;
  int ulClipFmt;
  char *pClipData;
};

/* 259 */
struct tagCACLIPDATA
{
  unsigned int cElems;
  tagCLIPDATA *pElems;
};

/* 260 */
struct _STARTUPINFOA
{
  unsigned int cb;
  char *lpReserved;
  char *lpDesktop;
  char *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  char *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/* 261 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 262 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A __s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/* 263 */
struct tagCAFILETIME
{
  unsigned int cElems;
  _FILETIME *pElems;
};

/* 264 */
struct tagCALPWSTR
{
  unsigned int cElems;
  wchar_t **pElems;
};

/* 265 */
struct tagCAL
{
  unsigned int cElems;
  int *pElems;
};

/* 266 */
struct tagCABSTRBLOB
{
  unsigned int cElems;
  tagBSTRBLOB *pElems;
};

/* 267 */
struct _SECURITY_ATTRIBUTES
{
  unsigned int nLength;
  void *lpSecurityDescriptor;
  int bInheritHandle;
};

/* 268 */
struct _STARTUPINFOW
{
  unsigned int cb;
  wchar_t *lpReserved;
  wchar_t *lpDesktop;
  wchar_t *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  char *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/* 269 */
struct tagCAFLT
{
  unsigned int cElems;
  float *pElems;
};

/* 270 */
struct HINSTANCE__
{
  int unused;
};

/* 271 */
struct _IMAGE_DOS_HEADER
{
  unsigned __int16 e_magic;
  unsigned __int16 e_cblp;
  unsigned __int16 e_cp;
  unsigned __int16 e_crlc;
  unsigned __int16 e_cparhdr;
  unsigned __int16 e_minalloc;
  unsigned __int16 e_maxalloc;
  unsigned __int16 e_ss;
  unsigned __int16 e_sp;
  unsigned __int16 e_csum;
  unsigned __int16 e_ip;
  unsigned __int16 e_cs;
  unsigned __int16 e_lfarlc;
  unsigned __int16 e_ovno;
  unsigned __int16 e_res[4];
  unsigned __int16 e_oemid;
  unsigned __int16 e_oeminfo;
  unsigned __int16 e_res2[10];
  int e_lfanew;
};

/* 272 */
struct _IMAGE_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned int SizeOfStackReserve;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 273 */
struct _IMAGE_NT_HEADERS
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

/* 274 */
struct _DETOUR_CLR_HEADER
{
  unsigned int cb;
  unsigned __int16 MajorRuntimeVersion;
  unsigned __int16 MinorRuntimeVersion;
  _IMAGE_DATA_DIRECTORY MetaData;
  unsigned int Flags;
};

/* 275 */
union $1DAEA1BE8A3BA7D3E9DAC33DF908E779
{
  _IMAGE_NT_HEADERS inh;
  _IMAGE_NT_HEADERS inh32;
  _IMAGE_NT_HEADERS64 inh64;
  char raw[1544];
};

/* 276 */
struct _DETOUR_EXE_RESTORE
{
  unsigned int cb;
  unsigned int cbidh;
  unsigned int cbinh;
  unsigned int cbclr;
  char *pidh;
  char *pinh;
  char *pclr;
  _IMAGE_DOS_HEADER idh;
  __unaligned __declspec(align(1)) $1DAEA1BE8A3BA7D3E9DAC33DF908E779 ___u8;
  _DETOUR_CLR_HEADER clr;
};

/* 277 */
struct tagCAH
{
  unsigned int cElems;
  _LARGE_INTEGER *pElems;
};

/* 278 */
struct tagCAUI
{
  unsigned int cElems;
  unsigned __int16 *pElems;
};

/* 279 */
struct __cppobj __vcrt_va_list_is_reference<__crt_locale_pointers *>
{
};

/* 280 */
struct tagCAUH
{
  unsigned int cElems;
  _ULARGE_INTEGER *pElems;
};

/* 281 */
union $22971E98F1DCAE471B592EC18ECB1551
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/* 282 */
struct _IMAGE_SECTION_HEADER
{
  char Name[8];
  $22971E98F1DCAE471B592EC18ECB1551 Misc;
  unsigned int VirtualAddress;
  unsigned int SizeOfRawData;
  unsigned int PointerToRawData;
  unsigned int PointerToRelocations;
  unsigned int PointerToLinenumbers;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int Characteristics;
};

/* 283 */
struct tagCADATE
{
  unsigned int cElems;
  long double *pElems;
};

/* 284 */
struct tagBLOB
{
  unsigned int cbSize;
  char *pBlobData;
};

/* 285 */
struct __cppobj IStream : ISequentialStream
{
};

/* 286 */
struct __cppobj IStorage : IUnknown
{
};

/* 287 */
struct tagVersionedStream
{
  _GUID guidVersion;
  IStream *pStream;
};

/* 288 */
struct tagCAC
{
  unsigned int cElems;
  char *pElems;
};

/* 289 */
struct tagCAUB
{
  unsigned int cElems;
  char *pElems;
};

/* 290 */
struct tagCAI
{
  unsigned int cElems;
  __int16 *pElems;
};

/* 291 */
struct tagCABOOL
{
  unsigned int cElems;
  __int16 *pElems;
};

/* 292 */
struct tagCASCODE
{
  unsigned int cElems;
  int *pElems;
};

/* 293 */
struct tagCACY
{
  unsigned int cElems;
  tagCY *pElems;
};

/* 294 */
struct tagCACLSID
{
  unsigned int cElems;
  _GUID *pElems;
};

/* 297 */
struct __unaligned __declspec(align(1)) $5DF3780F58367B9F2537DF425A8A812E
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  char cVal;
};

/* 298 */
struct $6D336DA143C556260FF80C12817B08DB
{
  _BYTE gap0[8];
  int lVal;
};

/* 299 */
struct $DEE9ECFB61AAACFE9D35BE56B44D483F
{
  _BYTE gap0[8];
  _LARGE_INTEGER hVal;
};

/* 300 */
struct $6A2D34E3FE0C2C435047B75B13571B3D
{
  _BYTE gap0[8];
  _ULARGE_INTEGER uhVal;
};

/* 301 */
struct $71629D5674D9243F3B364EE1710526C4
{
  _BYTE gap0[8];
  _FILETIME filetime;
};

/* 302 */
struct $2947F90437E85623BD5E76EFAD406282
{
  _BYTE gap0[8];
  _GUID *puuid;
};

/* 303 */
struct $6EEB307EEAE231C158A2E42D7817ED20
{
  _BYTE gap0[8];
  tagCLIPDATA *pclipdata;
};

/* 304 */
struct $9EE38BC9E9168916A7FB6442669AC033
{
  _BYTE gap0[8];
  tagBSTRBLOB bstrblobVal;
};

/* 305 */
struct $0BA5C6E0F5BF2103BF0B3CACF028FF37
{
  _BYTE gap0[8];
  tagBLOB blob;
};

/* 306 */
struct $17BA733FE6B8BEB3CC80B954432F0727
{
  _BYTE gap0[8];
  char *pszVal;
};

/* 307 */
struct $A123DDE5155BABE8656CED1ACF96B10E
{
  _BYTE gap0[8];
  wchar_t *pwszVal;
};

/* 308 */
struct $02E123CB80335929ABFB0001990A1B77
{
  _BYTE gap0[8];
  IStream *pStream;
};

/* 309 */
struct $25EBA3AB1960AD46B630B470CB96B679
{
  _BYTE gap0[8];
  IStorage *pStorage;
};

/* 310 */
struct $C4BBD34685111AC545A3A804F3F37DBD
{
  _BYTE gap0[8];
  tagVersionedStream *pVersionedStream;
};

/* 311 */
struct $9865029DF484B9B0B2F295B6956CC944
{
  _BYTE gap0[8];
  tagCAC cac;
};

/* 312 */
struct $A5CEEEC5535EF338C66F43D60D1D0405
{
  _BYTE gap0[8];
  tagCAUB caub;
};

/* 313 */
struct $A819D43C0D9CD9D0F2440DF5CB64063B
{
  _BYTE gap0[8];
  tagCAI cai;
};

/* 314 */
struct $3DBF9F8B5F3BEF7C91303594FBDB11B6
{
  _BYTE gap0[8];
  tagCAUI caui;
};

/* 315 */
struct $E54E80F26CD1C0D0F4DF342294762A2A
{
  _BYTE gap0[8];
  tagCAL cal;
};

/* 316 */
struct $54A7A2E906CD765659C11DEFCBCB898A
{
  _BYTE gap0[8];
  tagCAUL caul;
};

/* 317 */
struct $6509BF821DFA37406950E8ED1BB1F446
{
  _BYTE gap0[8];
  tagCAH cah;
};

/* 318 */
struct $C8526134A64D428F20E331D1D3567BDC
{
  _BYTE gap0[8];
  tagCAUH cauh;
};

/* 319 */
struct $FDB619CC8AFD0B9733085AE9FBED4E13
{
  _BYTE gap0[8];
  tagCAFLT caflt;
};

/* 320 */
struct $D57A078796D1D5D00ECE0E62B8C22EBD
{
  _BYTE gap0[8];
  tagCADBL cadbl;
};

/* 321 */
struct $6B94243E4EFD5870122F3F0522BC6930
{
  _BYTE gap0[8];
  tagCABOOL cabool;
};

/* 322 */
struct $E6293C104FF6E1A1506672309DBC0B3F
{
  _BYTE gap0[8];
  tagCASCODE cascode;
};

/* 323 */
struct $87A265EE278C4CB7B23B505AA58CB102
{
  _BYTE gap0[8];
  tagCACY cacy;
};

/* 324 */
struct $FC7DCA20EAF4270C512C5B20F5759710
{
  _BYTE gap0[8];
  tagCADATE cadate;
};

/* 325 */
struct $5E1D404F1054DC8CE843CA68C14F283F
{
  _BYTE gap0[8];
  tagCAFILETIME cafiletime;
};

/* 326 */
struct $0837D6159E0C124B21A62CCBCC7E6DE1
{
  _BYTE gap0[8];
  tagCACLSID cauuid;
};

/* 327 */
struct $340821BFDB797DEB53E1B524698F56D9
{
  _BYTE gap0[8];
  tagCACLIPDATA caclipdata;
};

/* 328 */
struct $C3B3FF04909B9C99CCC72EC9193EFA6C
{
  _BYTE gap0[8];
  tagCABSTR cabstr;
};

/* 329 */
struct $DFAB67F0CFC1FDD73BBD914713266224
{
  _BYTE gap0[8];
  tagCABSTRBLOB cabstrblob;
};

/* 330 */
struct $04E2469FA6CBB7FDAD3CE10A2DC7C600
{
  _BYTE gap0[8];
  tagCALPSTR calpstr;
};

/* 331 */
struct $6478543CE742DE4677B8C3D5A7C7F24A
{
  _BYTE gap0[8];
  tagCALPWSTR calpwstr;
};

/* 296 */
struct tagCAPROPVARIANT
{
  unsigned int cElems;
  tagPROPVARIANT *pElems;
};

/* 332 */
struct $29271403615400D0CF26B375B325A62D
{
  _BYTE gap0[8];
  tagCAPROPVARIANT capropvar;
};

/* 333 */
struct $111FE93999F382BFC00DDD9AC2E19F87
{
  _BYTE gap0[8];
  tagPROPVARIANT *pvarVal;
};

/* 334 */
union $E775A556EB3B3CC5211B164750401379
{
  $5DF3780F58367B9F2537DF425A8A812E __s0;
  tagDEC decVal;
  $F28A51B4B40B0D33C72915D739D42B4B __s2;
  $31126B8528A05AF3606C6D495FD178E8 __s3;
  $48802A31D3D0701BC13CEF9CEA041E7B __s4;
  $6D336DA143C556260FF80C12817B08DB __s5;
  $B644145F46FF1F932B106BFA6CC3F6D9 __s6;
  $5CA90CF57237397281FB12BFD52C1905 __s7;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 __s8;
  $DEE9ECFB61AAACFE9D35BE56B44D483F __s9;
  $6A2D34E3FE0C2C435047B75B13571B3D __s10;
  $50230A970D9734D4E9774CFC619DF0F6 __s11;
  $4C0EC2258454B893CE739DAE89D8DB7B __s12;
  $6DB36323059316E675433BB10D285009 __s13;
  $8E3C8731874D1B3BC66617C4DD3163A6 __s14;
  $35F8D598A1626928EE0EA6F426D2C6F5 __s15;
  $E94952165EEA9EEA990FEB33603E1B19 __s16;
  $71629D5674D9243F3B364EE1710526C4 __s17;
  $2947F90437E85623BD5E76EFAD406282 __s18;
  $6EEB307EEAE231C158A2E42D7817ED20 __s19;
  $7B1C2AA558A72DB3909F7F0B6C8C78B2 __s20;
  $9EE38BC9E9168916A7FB6442669AC033 __s21;
  $0BA5C6E0F5BF2103BF0B3CACF028FF37 __s22;
  $17BA733FE6B8BEB3CC80B954432F0727 __s23;
  $A123DDE5155BABE8656CED1ACF96B10E __s24;
  $7A96358AB4C9BA41A1648542204D6777 __s25;
  $3A445663AFFDA99601087C5A9E6FAE7A __s26;
  $02E123CB80335929ABFB0001990A1B77 __s27;
  $25EBA3AB1960AD46B630B470CB96B679 __s28;
  $C4BBD34685111AC545A3A804F3F37DBD __s29;
  $9DF088F4CC77DDA079C87C673A517E4C __s30;
  $9865029DF484B9B0B2F295B6956CC944 __s31;
  $A5CEEEC5535EF338C66F43D60D1D0405 __s32;
  $A819D43C0D9CD9D0F2440DF5CB64063B __s33;
  $3DBF9F8B5F3BEF7C91303594FBDB11B6 __s34;
  $E54E80F26CD1C0D0F4DF342294762A2A __s35;
  $54A7A2E906CD765659C11DEFCBCB898A __s36;
  $6509BF821DFA37406950E8ED1BB1F446 __s37;
  $C8526134A64D428F20E331D1D3567BDC __s38;
  $FDB619CC8AFD0B9733085AE9FBED4E13 __s39;
  $D57A078796D1D5D00ECE0E62B8C22EBD __s40;
  $6B94243E4EFD5870122F3F0522BC6930 __s41;
  $E6293C104FF6E1A1506672309DBC0B3F __s42;
  $87A265EE278C4CB7B23B505AA58CB102 __s43;
  $FC7DCA20EAF4270C512C5B20F5759710 __s44;
  $5E1D404F1054DC8CE843CA68C14F283F __s45;
  $0837D6159E0C124B21A62CCBCC7E6DE1 __s46;
  $340821BFDB797DEB53E1B524698F56D9 __s47;
  $C3B3FF04909B9C99CCC72EC9193EFA6C __s48;
  $DFAB67F0CFC1FDD73BBD914713266224 __s49;
  $04E2469FA6CBB7FDAD3CE10A2DC7C600 __s50;
  $6478543CE742DE4677B8C3D5A7C7F24A __s51;
  $29271403615400D0CF26B375B325A62D __s52;
  $E1D71D20C3D01115E20D79FAE9629CE8 __s53;
  $166B1F81F6EA96F97683A65F38FB1A59 __s54;
  $76732A64405C0E287FCB302687644550 __s55;
  $5669F5A4AD19EF2CB42A5602080CB0A6 __s56;
  $E5FC128E66C26C95254032BA69D36E74 __s57;
  $886F8AE9D7C8B1B861B6CA58D67B682A __s58;
  $CDA73A427DD2A30CDA26CA3394C33CF0 __s59;
  $2516E53E690D8CC5659AAB7EDC49E664 __s60;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD __s61;
  $2CABE618CF1C2625A4479554E4967E0A __s62;
  $AAA92DA1D6E1B0E8462F69216B62027C __s63;
  $7AF01F093920119C128347CB89CF9295 __s64;
  $F7167AE7A8ABA03C094C204FB1564A28 __s65;
  $1D3A1A012CBAA175DFF2E8941C8EDFC0 __s66;
  $6857AE69DB7C952EEFD665431A7B503A __s67;
  $BE56ADCB97A5F80C4E840DC3FCEE04D4 __s68;
  $05500710587EC12AABDDB1DB9A6DA58C __s69;
  $18B9EC2889430C2B56A3CC51EEA4F99C __s70;
  $E31575FE753162278696770EE98823B6 __s71;
  $111FE93999F382BFC00DDD9AC2E19F87 __s72;
};

/* 295 */
struct tagPROPVARIANT
{
  $E775A556EB3B3CC5211B164750401379 ___u0;
};

/* 335 */
struct tagDISPPARAMS
{
  tagVARIANT *rgvarg;
  int *rgdispidNamedArgs;
  unsigned int cArgs;
  unsigned int cNamedArgs;
};

/* 336 */
struct __cppobj ITypeLib : IUnknown
{
};

/* 337 */
struct $8C32E5D3ED1763EA38B94549972C5F20
{
  unsigned __int32 LongFunction : 1;
  unsigned __int32 Persistent : 1;
  unsigned __int32 Private : 30;
};

/* 338 */
union $CA0F4519C75A30EF6770065994E62D43
{
  unsigned int Flags;
  $8C32E5D3ED1763EA38B94549972C5F20 s;
};

/* 339 */
struct _TP_CALLBACK_ENVIRON_V3
{
  unsigned int Version;
  _TP_POOL *Pool;
  _TP_CLEANUP_GROUP *CleanupGroup;
  void (__stdcall *CleanupGroupCancelCallback)(void *, void *);
  void *RaceDll;
  _ACTIVATION_CONTEXT *ActivationContext;
  void (__stdcall *FinalizationCallback)(_TP_CALLBACK_INSTANCE *, void *);
  $CA0F4519C75A30EF6770065994E62D43 u;
  _TP_CALLBACK_PRIORITY CallbackPriority;
  unsigned int Size;
};

/* 340 */
union $980F6A28C67C8F3640106D01D4C85A6A
{
  unsigned int Characteristics;
  unsigned int OriginalFirstThunk;
};

/* 341 */
struct _IMAGE_IMPORT_DESCRIPTOR
{
  $980F6A28C67C8F3640106D01D4C85A6A ___u0;
  unsigned int TimeDateStamp;
  unsigned int ForwarderChain;
  unsigned int Name;
  unsigned int FirstThunk;
};

/* 342 */
struct __crt_locale_data_public
{
  const unsigned __int16 *_locale_pctype;
  int _locale_mb_cur_max;
  unsigned int _locale_lc_codepage;
};

/* 343 */
struct __crt_locale_refcount
{
  char *locale;
  wchar_t *wlocale;
  int *refcount;
  int *wrefcount;
};

/* 344 */
struct lconv
{
  char *decimal_point;
  char *thousands_sep;
  char *grouping;
  char *int_curr_symbol;
  char *currency_symbol;
  char *mon_decimal_point;
  char *mon_thousands_sep;
  char *mon_grouping;
  char *positive_sign;
  char *negative_sign;
  char int_frac_digits;
  char frac_digits;
  char p_cs_precedes;
  char p_sep_by_space;
  char n_cs_precedes;
  char n_sep_by_space;
  char p_sign_posn;
  char n_sign_posn;
  wchar_t *_W_decimal_point;
  wchar_t *_W_thousands_sep;
  wchar_t *_W_int_curr_symbol;
  wchar_t *_W_currency_symbol;
  wchar_t *_W_mon_decimal_point;
  wchar_t *_W_mon_thousands_sep;
  wchar_t *_W_positive_sign;
  wchar_t *_W_negative_sign;
};

/* 345 */
const struct __crt_lc_time_data
{
  char *wday_abbr[7];
  char *wday[7];
  char *month_abbr[12];
  char *month[12];
  char *ampm[2];
  char *ww_sdatefmt;
  char *ww_ldatefmt;
  char *ww_timefmt;
  int ww_caltype;
  int refcount;
  wchar_t *_W_wday_abbr[7];
  wchar_t *_W_wday[7];
  wchar_t *_W_month_abbr[12];
  wchar_t *_W_month[12];
  wchar_t *_W_ampm[2];
  wchar_t *_W_ww_sdatefmt;
  wchar_t *_W_ww_ldatefmt;
  wchar_t *_W_ww_timefmt;
  wchar_t *_W_ww_locale_name;
};

/* 346 */
struct __crt_locale_data
{
  __crt_locale_data_public _public;
  int refcount;
  unsigned int lc_collate_cp;
  unsigned int lc_time_cp;
  int lc_clike;
  __crt_locale_refcount lc_category[6];
  int *lconv_intl_refcount;
  int *lconv_num_refcount;
  int *lconv_mon_refcount;
  lconv *lconv;
  int *ctype1_refcount;
  unsigned __int16 *ctype1;
  const char *pclmap;
  const char *pcumap;
  __crt_lc_time_data *lc_time_curr;
  wchar_t *locale_name[6];
};

/* 347 */
struct __crt_multibyte_data
{
  int refcount;
  int mbcodepage;
  int ismbcodepage;
  unsigned __int16 mbulinfo[6];
  char mbctype[257];
  char mbcasemap[256];
  const wchar_t *mblocalename;
};

/* 348 */
struct __crt_locale_pointers
{
  __crt_locale_data *locinfo;
  __crt_multibyte_data *mbcinfo;
};

/* 349 */
struct HWND__
{
  int unused;
};

/* 350 */
struct _ldiv_t
{
  int quot;
  int rem;
};

/* 351 */
struct _lldiv_t
{
  __int64 quot;
  __int64 rem;
};

/* 352 */
struct _KDHELP64
{
  unsigned __int64 Thread;
  unsigned int ThCallbackStack;
  unsigned int ThCallbackBStore;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned __int64 KiCallUserMode;
  unsigned __int64 KeUserCallbackDispatcher;
  unsigned __int64 SystemRangeStart;
  unsigned __int64 KiUserExceptionDispatcher;
  unsigned __int64 StackBase;
  unsigned __int64 StackLimit;
  unsigned int BuildVersion;
  unsigned int Reserved0;
  unsigned __int64 Reserved1[4];
};

/* 353 */
struct __cppobj __vcrt_va_list_is_reference<wchar_t const *>
{
};

/* 354 */
struct _DETOUR_EXE_HELPER
{
  unsigned int cb;
  unsigned int pid;
  unsigned int nDlls;
  char rDlls[4];
};

/* 355 */
struct _iobuf
{
  void *_Placeholder;
};

/* 356 */
struct _DETOUR_SECTION_HEADER
{
  unsigned int cbHeaderSize;
  unsigned int nSignature;
  unsigned int nDataOffset;
  unsigned int cbDataSize;
  unsigned int nOriginalImportVirtualAddress;
  unsigned int nOriginalImportSize;
  unsigned int nOriginalBoundImportVirtualAddress;
  unsigned int nOriginalBoundImportSize;
  unsigned int nOriginalIatVirtualAddress;
  unsigned int nOriginalIatSize;
  unsigned int nOriginalSizeOfImage;
  unsigned int cbPrePE;
  unsigned int nOriginalClrFlags;
  unsigned int reserved1;
  unsigned int reserved2;
  unsigned int reserved3;
};

/* 357 */
struct __cppobj __vcrt_va_list_is_reference<wchar_t const * const>
{
};

/* 358 */
struct __cppobj __vcrt_va_list_is_reference<__crt_locale_pointers * const>
{
};

/* 359 */
struct CDetourDis::COPYENTRY
{
  unsigned __int32 nOpcode : 8;
  unsigned __int32 nFixedSize : 4;
  unsigned __int32 nFixedSize16 : 4;
  unsigned __int32 nModOffset : 4;
  unsigned __int32 nRelOffset : 4;
  unsigned __int32 nTargetBack : 4;
  unsigned __int32 nFlagBits : 4;
  char *(__thiscall *pfCopy)(CDetourDis *this, CDetourDis::COPYENTRY *, char *, char *);
};

/* 360 */
struct CDetourDis
{
  int m_bOperandOverride;
  int m_bAddressOverride;
  int m_bRaxOverride;
  int m_bVex;
  int m_bF2;
  int m_bF3;
  char m_nSegmentOverride;
  char **m_ppbTarget;
  int *m_plExtra;
  int m_lScratchExtra;
  char *m_pbScratchTarget;
  char m_rbScratchDst[64];
};

/* 361 */
struct _DETOUR_ALIGN
{
  __int8 obTarget : 3;
  __int8 obTrampoline : 5;
};

/* 362 */
struct _DETOUR_TRAMPOLINE
{
  char rbCode[30];
  char cbCode;
  char cbCodeBreak;
  char rbRestore[22];
  char cbRestore;
  char cbRestoreBreak;
  _DETOUR_ALIGN rAlign[8];
  char *pbRemain;
  char *pbDetour;
};

/* 363 */
struct rb_node
{
  unsigned int rb_parent_color;
  rb_node *rb_right;
  rb_node *rb_left;
};

/* 364 */
struct rb_root
{
  rb_node *rb_node;
};

/* 365 */
struct hlist_node
{
  hlist_node *next;
  hlist_node **pprev;
};

/* 366 */
struct list_head
{
  list_head *next;
  list_head *prev;
};

/* 367 */
struct binder_stats
{
  int br[18];
  int bc[17];
  int obj_created[7];
  int obj_deleted[7];
};

/* 368 */
struct binder_proc
{
  hlist_node proc_node;
  rb_root threads;
  rb_root nodes;
  rb_root refs_by_desc;
  rb_root refs_by_node;
  int pid;
  int uid;
  int fd;
  void *buffer;
  int user_buffer_offset;
  list_head buffers;
  rb_root free_buffers;
  rb_root allocated_buffers;
  unsigned int free_async_space;
  unsigned int buffer_size;
  unsigned int buffer_free;
  list_head todo;
  struct pthread_cond_t_ *wait;
  binder_stats stats;
  list_head delivered_death;
  int max_threads;
  int requested_threads;
  int requested_threads_started;
  int ready_threads;
  int default_priority;
};

/* 369 */
struct binder_work
{
  list_head entry;
  $959501DAFB7196048D4C26FFB5C708FD type;
};

/* 370 */
struct binder_thread
{
  binder_proc *proc;
  rb_node rb_node;
  int pid;
  int looper;
  binder_transaction *transaction_stack;
  list_head todo;
  unsigned int return_error;
  unsigned int return_error2;
  struct pthread_cond_t_ *wait;
  binder_stats stats;
};

/* 371 */
struct binder_transaction
{
  int debug_id;
  binder_work work;
  binder_thread *from;
  binder_transaction *from_parent;
  binder_proc *to_proc;
  binder_thread *to_thread;
  binder_transaction *to_parent;
  unsigned __int32 need_reply : 1;
  binder_buffer *buffer;
  unsigned int code;
  unsigned int flags;
  int priority;
  int saved_priority;
  int sender_euid;
};

/* 372 */
struct hlist_head
{
  hlist_node *first;
};

/* 373 */
union $8638E47524F68A36A08BFFAC7E9695E6
{
  rb_node rb_node;
  hlist_node dead_node;
};

/* 374 */
struct binder_node
{
  int debug_id;
  binder_work work;
  $8638E47524F68A36A08BFFAC7E9695E6 ___u2;
  binder_proc *proc;
  hlist_head refs;
  int internal_strong_refs;
  int local_weak_refs;
  int local_strong_refs;
  void *ptr;
  void *cookie;
  unsigned __int32 has_strong_ref : 1;
  unsigned __int32 pending_strong_ref : 1;
  unsigned __int32 has_weak_ref : 1;
  unsigned __int32 pending_weak_ref : 1;
  unsigned __int32 has_async_transaction : 1;
  unsigned __int32 accept_fds : 1;
  __int32 min_priority : 8;
  list_head async_todo;
};

/* 375 */
struct binder_buffer
{
  list_head entry;
  rb_node rb_node;
  unsigned __int32 free : 1;
  unsigned __int32 allow_user_free : 1;
  unsigned __int32 async_transaction : 1;
  unsigned __int32 debug_id : 29;
  binder_transaction *transaction;
  binder_node *target_node;
  unsigned int data_size;
  unsigned int offsets_size;
  char data[];
};

/* 376 */
struct DetourOperation
{
  DetourOperation *pNext;
  int fIsRemove;
  char **ppbPointer;
  char *pbTarget;
  _DETOUR_TRAMPOLINE *pTrampoline;
  unsigned int dwPerm;
};

/* 377 */
struct DetourThread
{
  DetourThread *pNext;
  void *hThread;
};

/* 378 */
struct DETOUR_REGION
{
  unsigned int dwSignature;
  DETOUR_REGION *pNext;
  _DETOUR_TRAMPOLINE *pFree;
};

/* 379 */
struct _FLOATING_SAVE_AREA
{
  unsigned int ControlWord;
  unsigned int StatusWord;
  unsigned int TagWord;
  unsigned int ErrorOffset;
  unsigned int ErrorSelector;
  unsigned int DataOffset;
  unsigned int DataSelector;
  char RegisterArea[80];
  unsigned int Spare0;
};

/* 380 */
struct _CONTEXT
{
  unsigned int ContextFlags;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  _FLOATING_SAVE_AREA FloatSave;
  unsigned int SegGs;
  unsigned int SegFs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int Ebp;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int Esp;
  unsigned int SegSs;
  char ExtendedRegisters[512];
};

/* 381 */
struct CDetourDisARM
{
  char *m_pbTarget;
  char *m_pbPool;
  int m_lExtra;
  char m_rbScratchDst[64];
};

/* 382 */
struct CDetourDisARM::COPYENTRY
{
  unsigned __int16 nOpcode;
  char (__thiscall *pfCopy)(CDetourDisARM *this, char *, char *);
};

/* 383 */
struct CDetourDisARM::Branch5
{
  unsigned __int32 Register : 3;
  unsigned __int32 Imm5 : 5;
  unsigned __int32 Padding : 1;
  unsigned __int32 I : 1;
  unsigned __int32 OpCode : 6;
};

/* 384 */
struct CDetourDisARM::Branch5Target
{
  unsigned __int32 Padding : 1;
  unsigned __int32 Imm5 : 5;
  unsigned __int32 I : 1;
  unsigned __int32 Padding2 : 25;
};

/* 385 */
struct CDetourDisARM::Branch8
{
  unsigned __int32 Imm8 : 8;
  unsigned __int32 Condition : 4;
  unsigned __int32 OpCode : 4;
};

/* 386 */
struct CDetourDisARM::Branch8Target
{
  unsigned __int32 Padding : 1;
  unsigned __int32 Imm8 : 8;
  unsigned __int32 Padding2 : 23;
};

/* 387 */
struct CDetourDisARM::Branch11
{
  unsigned __int32 Imm11 : 11;
  unsigned __int32 OpCode : 5;
};

/* 388 */
struct CDetourDisARM::Branch11Target
{
  unsigned __int32 Padding : 1;
  unsigned __int32 Imm11 : 11;
  unsigned __int32 Padding2 : 20;
};

/* 389 */
struct CDetourDisARM::Branch20
{
  unsigned __int32 Imm11 : 11;
  unsigned __int32 J2 : 1;
  unsigned __int32 IT : 1;
  unsigned __int32 J1 : 1;
  unsigned __int32 Other : 2;
  unsigned __int32 Imm6 : 6;
  unsigned __int32 Condition : 4;
  unsigned __int32 Sign : 1;
  unsigned __int32 OpCode : 5;
};

/* 390 */
struct CDetourDisARM::Branch20Target
{
  unsigned __int32 Padding : 1;
  unsigned __int32 Imm11 : 11;
  unsigned __int32 Imm6 : 6;
  unsigned __int32 J1 : 1;
  unsigned __int32 J2 : 1;
  unsigned __int32 Sign : 1;
  __int32 Padding2 : 11;
};

/* 391 */
struct CDetourDisARM::Branch24
{
  unsigned __int32 Imm11 : 11;
  unsigned __int32 J2 : 1;
  unsigned __int32 InstructionSet : 1;
  unsigned __int32 J1 : 1;
  unsigned __int32 Link : 1;
  unsigned __int32 Branch : 1;
  unsigned __int32 Imm10 : 10;
  unsigned __int32 Sign : 1;
  unsigned __int32 OpCode : 5;
};

/* 392 */
struct CDetourDisARM::Branch24Target
{
  unsigned __int32 Padding : 1;
  unsigned __int32 Imm11 : 11;
  unsigned __int32 Imm10 : 10;
  unsigned __int32 I2 : 1;
  unsigned __int32 I1 : 1;
  unsigned __int32 Sign : 1;
  __int32 Padding2 : 7;
};

/* 393 */
struct CDetourDisARM::LiteralLoad8
{
  unsigned __int32 Imm8 : 8;
  unsigned __int32 Register : 3;
  unsigned __int32 OpCode : 5;
};

/* 394 */
struct CDetourDisARM::LiteralLoad8Target
{
  unsigned __int32 Padding : 2;
  unsigned __int32 Imm8 : 8;
  unsigned __int32 Padding2 : 22;
};

/* 395 */
struct CDetourDisARM::LiteralLoad12
{
  unsigned __int32 Imm12 : 12;
  unsigned __int32 Register : 4;
  unsigned __int32 OpCodeSuffix : 7;
  unsigned __int32 Add : 1;
  unsigned __int32 OpCodePrefix : 8;
};

/* 396 */
struct CDetourDisARM::LiteralLoad12Target
{
  unsigned __int32 Imm12 : 12;
  unsigned __int32 Padding : 20;
};

/* 397 */
struct CDetourDisARM::ImmediateRegisterLoad32
{
  unsigned __int32 Imm12 : 12;
  unsigned __int32 DestinationRegister : 4;
  unsigned __int32 SourceRegister : 4;
  unsigned __int32 OpCode : 12;
};

/* 398 */
struct CDetourDisARM::ImmediateRegisterLoad16
{
  unsigned __int32 DestinationRegister : 3;
  unsigned __int32 SourceRegister : 3;
  unsigned __int32 OpCode : 10;
};

/* 399 */
struct CDetourDisARM::TableBranch
{
  unsigned __int32 IndexRegister : 4;
  unsigned __int32 HalfWord : 1;
  unsigned __int32 OpCodeSuffix : 11;
  unsigned __int32 BaseRegister : 4;
  unsigned __int32 OpCodePrefix : 12;
};

/* 400 */
struct CDetourDisARM::Shift
{
  unsigned __int32 Imm2 : 2;
  unsigned __int32 Imm3 : 3;
};

/* 401 */
struct CDetourDisARM::Add32
{
  unsigned __int32 SecondOperandRegister : 4;
  unsigned __int32 Type : 2;
  unsigned __int32 Imm2 : 2;
  unsigned __int32 DestinationRegister : 4;
  unsigned __int32 Imm3 : 3;
  unsigned __int32 Padding : 1;
  unsigned __int32 FirstOperandRegister : 4;
  unsigned __int32 SetFlags : 1;
  unsigned __int32 OpCode : 11;
};

/* 402 */
struct CDetourDisARM::LogicalShiftLeft32
{
  unsigned __int32 SourceRegister : 4;
  unsigned __int32 Padding : 2;
  unsigned __int32 Imm2 : 2;
  unsigned __int32 DestinationRegister : 4;
  unsigned __int32 Imm3 : 3;
  unsigned __int32 Padding2 : 5;
  unsigned __int32 SetFlags : 1;
  unsigned __int32 OpCode : 11;
};

/* 403 */
struct CDetourDisARM::StoreImmediate12
{
  unsigned __int32 Imm12 : 12;
  unsigned __int32 SourceRegister : 4;
  unsigned __int32 BaseRegister : 4;
  unsigned __int32 OpCode : 12;
};

/* 404 */
struct CDetourDisARM64
{
  char *m_pbTarget;
  char m_rbScratchDst[64];
};

/* 405 */
struct $80C45DE83E4A0022B13A52AD4BBA2B5C
{
  unsigned __int32 Rd : 5;
  unsigned __int32 Rn : 5;
  unsigned __int32 Imm12 : 12;
  unsigned __int32 Shift : 2;
  unsigned __int32 Opcode1 : 7;
  unsigned __int32 Size : 1;
};

/* 406 */
union CDetourDisARM64::AddImm12
{
  unsigned int Assembled;
  $80C45DE83E4A0022B13A52AD4BBA2B5C s;
};

/* 407 */
struct $AF98EA6789D88008266B9C1F4C3499FC
{
  unsigned __int32 Rd : 5;
  unsigned __int32 Imm19 : 19;
  unsigned __int32 Opcode1 : 5;
  unsigned __int32 Imm2 : 2;
  unsigned __int32 Type : 1;
};

/* 408 */
union CDetourDisARM64::Adr19
{
  unsigned int Assembled;
  $AF98EA6789D88008266B9C1F4C3499FC s;
};

/* 409 */
struct $244FE88E7DCCCC1A39926AE92D9DF215
{
  unsigned __int32 Condition : 4;
  unsigned __int32 Opcode1 : 1;
  unsigned __int32 Imm19 : 19;
  unsigned __int32 Opcode2 : 8;
};

/* 410 */
union CDetourDisARM64::Bcc19
{
  unsigned int Assembled;
  $244FE88E7DCCCC1A39926AE92D9DF215 s;
};

/* 411 */
struct $FD76DF5C590366B210F456E2B3945985
{
  unsigned __int32 Imm26 : 26;
  unsigned __int32 Opcode1 : 5;
  unsigned __int32 Link : 1;
};

/* 412 */
union CDetourDisARM64::Branch26
{
  unsigned int Assembled;
  $FD76DF5C590366B210F456E2B3945985 s;
};

/* 413 */
struct $D63452FDC3AEB5D241DCC1E57F2061E0
{
  unsigned __int32 Opcode1 : 5;
  unsigned __int32 Rn : 5;
  unsigned __int32 Opcode2 : 22;
};

/* 414 */
union CDetourDisARM64::Br
{
  unsigned int Assembled;
  $D63452FDC3AEB5D241DCC1E57F2061E0 s;
};

/* 415 */
struct $461BF0722AB359109151336A20A1344B
{
  unsigned __int32 Rt : 5;
  unsigned __int32 Imm19 : 19;
  unsigned __int32 Nz : 1;
  unsigned __int32 Opcode1 : 6;
  unsigned __int32 Size : 1;
};

/* 416 */
union CDetourDisARM64::Cbz19
{
  unsigned int Assembled;
  $461BF0722AB359109151336A20A1344B s;
};

/* 417 */
struct $52AAB1DED27E3F39B41C081E208F4309
{
  unsigned __int32 Rt : 5;
  unsigned __int32 Imm19 : 19;
  unsigned __int32 Opcode1 : 2;
  unsigned __int32 FpNeon : 1;
  unsigned __int32 Opcode2 : 3;
  unsigned __int32 Size : 2;
};

/* 418 */
union CDetourDisARM64::LdrLit19
{
  unsigned int Assembled;
  $52AAB1DED27E3F39B41C081E208F4309 s;
};

/* 419 */
struct $3405BCE078AD75E54CE940EAEB884AF8
{
  unsigned __int32 Rt : 5;
  unsigned __int32 Rn : 5;
  unsigned __int32 Imm12 : 12;
  unsigned __int32 Opcode1 : 1;
  unsigned __int32 Opc : 1;
  unsigned __int32 Opcode2 : 6;
  unsigned __int32 Size : 2;
};

/* 420 */
union CDetourDisARM64::LdrFpNeonImm9
{
  unsigned int Assembled;
  $3405BCE078AD75E54CE940EAEB884AF8 s;
};

/* 421 */
struct $3624573474C8EEE477EB9C60BBEE53FD
{
  unsigned __int32 Rd : 5;
  unsigned __int32 Imm16 : 16;
  unsigned __int32 Shift : 2;
  unsigned __int32 Opcode : 6;
  unsigned __int32 Type : 2;
  unsigned __int32 Size : 1;
};

/* 422 */
union CDetourDisARM64::Mov16
{
  unsigned int Assembled;
  $3624573474C8EEE477EB9C60BBEE53FD s;
};

/* 423 */
struct $5AED328D77AF2ADFA61D884A40B644CA
{
  unsigned __int32 Rt : 5;
  unsigned __int32 Imm14 : 14;
  unsigned __int32 Bit : 5;
  unsigned __int32 Nz : 1;
  unsigned __int32 Opcode1 : 6;
  unsigned __int32 Size : 1;
};

/* 424 */
union CDetourDisARM64::Tbz14
{
  unsigned int Assembled;
  $5AED328D77AF2ADFA61D884A40B644CA s;
};

/* 425 */
struct DETOUR_IA64_BUNDLE::DETOUR_IA64_METADATA
{
  unsigned __int32 nTemplate : 8;
  unsigned __int32 nUnit0 : 4;
  unsigned __int32 nUnit1 : 4;
  unsigned __int32 nUnit2 : 4;
};

/* 426 */
union $E25ACA65F15A6986ABD609C747957E94
{
  char data[16];
  unsigned __int64 wide[2];
};

/* 427 */
struct DETOUR_IA64_BUNDLE
{
  $E25ACA65F15A6986ABD609C747957E94 ___u0;
};

/* 428 */
struct CDetourDisX64::COPYENTRY
{
  unsigned __int32 nOpcode : 8;
  unsigned __int32 nFixedSize : 4;
  unsigned __int32 nFixedSize16 : 4;
  unsigned __int32 nModOffset : 4;
  unsigned __int32 nRelOffset : 4;
  unsigned __int32 nTargetBack : 4;
  unsigned __int32 nFlagBits : 4;
  char *(__thiscall *pfCopy)(CDetourDisX64 *this, CDetourDisX64::COPYENTRY *, char *, char *);
};

/* 429 */
struct CDetourDisX64
{
  int m_bOperandOverride;
  int m_bAddressOverride;
  int m_bRaxOverride;
  int m_bVex;
  int m_bF2;
  int m_bF3;
  char m_nSegmentOverride;
  char **m_ppbTarget;
  int *m_plExtra;
  int m_lScratchExtra;
  char *m_pbScratchTarget;
  char m_rbScratchDst[64];
};

/* 430 */
struct CDetourDisX86::COPYENTRY
{
  unsigned __int32 nOpcode : 8;
  unsigned __int32 nFixedSize : 4;
  unsigned __int32 nFixedSize16 : 4;
  unsigned __int32 nModOffset : 4;
  unsigned __int32 nRelOffset : 4;
  unsigned __int32 nTargetBack : 4;
  unsigned __int32 nFlagBits : 4;
  char *(__thiscall *pfCopy)(CDetourDisX86 *this, CDetourDisX86::COPYENTRY *, char *, char *);
};

/* 431 */
struct CDetourDisX86
{
  int m_bOperandOverride;
  int m_bAddressOverride;
  int m_bRaxOverride;
  int m_bVex;
  int m_bF2;
  int m_bF3;
  char m_nSegmentOverride;
  char **m_ppbTarget;
  int *m_plExtra;
  int m_lScratchExtra;
  char *m_pbScratchTarget;
  char m_rbScratchDst[64];
};

/* 432 */
struct Detour::CImageImportFile
{
  Detour::CImageImportFile *m_pNextFile;
  int m_fByway;
  Detour::CImageImportName *m_pImportNames;
  unsigned int m_nImportNames;
  unsigned int m_rvaOriginalFirstThunk;
  unsigned int m_rvaFirstThunk;
  unsigned int m_nForwarderChain;
  const char *m_pszOrig;
  const char *m_pszName;
};

/* 433 */
struct Detour::CImageImportName
{
  unsigned __int16 m_nHint;
  unsigned int m_nOrig;
  unsigned int m_nOrdinal;
  const char *m_pszOrig;
  const char *m_pszName;
};

/* 434 */
struct Detour::CImageData
{
  char *m_pbData;
  unsigned int m_cbData;
  unsigned int m_cbAlloc;
};

/* 435 */
struct Detour::CImage
{
  unsigned int m_dwValidSignature;
  Detour::CImageData *m_pImageData;
  void *m_hMap;
  char *m_pMap;
  unsigned int m_nNextFileAddr;
  unsigned int m_nNextVirtAddr;
  _IMAGE_DOS_HEADER m_DosHeader;
  _IMAGE_NT_HEADERS m_NtHeader;
  _IMAGE_SECTION_HEADER m_SectionHeaders[16];
  unsigned int m_nPrePE;
  unsigned int m_cbPrePE;
  unsigned int m_cbPostPE;
  unsigned int m_nPeOffset;
  unsigned int m_nSectionsOffset;
  unsigned int m_nExtraOffset;
  unsigned int m_nFileSize;
  unsigned int m_nOutputVirtAddr;
  unsigned int m_nOutputVirtSize;
  unsigned int m_nOutputFileAddr;
  char *m_pbOutputBuffer;
  unsigned int m_cbOutputBuffer;
  Detour::CImageImportFile *m_pImportFiles;
  unsigned int m_nImportFiles;
  int m_fHadDetourSection;
};

/* 436 */
struct Detour::CImageChars
{
  Detour::CImage *m_pImage;
  char *m_pChars;
  unsigned int m_nChars;
  unsigned int m_nCharsMax;
  unsigned int m_nCharVirtAddr;
};

/* 437 */
union $E6E24A7F5B6F8B597C18331DB62781EC
{
  unsigned int ForwarderString;
  unsigned int Function;
  unsigned int Ordinal;
  unsigned int AddressOfData;
};

/* 438 */
struct _IMAGE_THUNK_DATA32
{
  $E6E24A7F5B6F8B597C18331DB62781EC u1;
};

/* 439 */
struct Detour::CImageThunks
{
  Detour::CImage *m_pImage;
  _IMAGE_THUNK_DATA32 *m_pThunks;
  unsigned int m_nThunks;
  unsigned int m_nThunksMax;
  unsigned int m_nThunkVirtAddr;
};

/* 440 */
union $A5A483E05FC9B52B872A8DCFA58CFF52
{
  unsigned int Offset;
  void *Pointer;
};

/* 441 */
struct _OVERLAPPED
{
  unsigned int Internal;
  unsigned int InternalHigh;
  $A5A483E05FC9B52B872A8DCFA58CFF52 ___u2;
  unsigned int OffsetHigh;
  void *hEvent;
};

/* 442 */
struct _IMAGE_DEBUG_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Type;
  unsigned int SizeOfData;
  unsigned int AddressOfRawData;
  unsigned int PointerToRawData;
};

/* 443 */
struct __declspec(align(2)) _IMAGE_IMPORT_BY_NAME
{
  unsigned __int16 Hint;
  char Name[1];
};

/* 444 */
struct _IMAGEHLP_MODULE64
{
  unsigned int SizeOfStruct;
  unsigned __int64 BaseOfImage;
  unsigned int ImageSize;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int NumSyms;
  SYM_TYPE SymType;
  char ModuleName[32];
  char ImageName[256];
  char LoadedImageName[256];
  char LoadedPdbName[256];
  unsigned int CVSig;
  char CVData[780];
  unsigned int PdbSig;
  _GUID PdbSig70;
  unsigned int PdbAge;
  int PdbUnmatched;
  int DbgUnmatched;
  int LineNumbers;
  int GlobalSymbols;
  int TypeInfo;
  int SourceIndexed;
  int Publics;
  unsigned int MachineType;
  unsigned int Reserved;
};

/* 445 */
struct __declspec(align(4)) _SYMBOL_INFO
{
  unsigned int SizeOfStruct;
  unsigned int TypeIndex;
  unsigned __int64 Reserved[2];
  unsigned int Index;
  unsigned int Size;
  unsigned __int64 ModBase;
  unsigned int Flags;
  unsigned __int64 Value;
  unsigned __int64 Address;
  unsigned int Register;
  unsigned int Scope;
  unsigned int Tag;
  unsigned int NameLen;
  unsigned int MaxNameLen;
  char Name[1];
};

/* 446 */
struct _IMAGE_EXPORT_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Name;
  unsigned int Base;
  unsigned int NumberOfFunctions;
  unsigned int NumberOfNames;
  unsigned int AddressOfFunctions;
  unsigned int AddressOfNames;
  unsigned int AddressOfNameOrdinals;
};

/* 447 */
struct API_VERSION
{
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 Revision;
  unsigned __int16 Reserved;
};

/* 448 */
struct _DETOUR_SYM_INFO
{
  void *hProcess;
  HINSTANCE__ *hDbgHelp;
  API_VERSION *(__stdcall *pfImagehlpApiVersionEx)(API_VERSION *);
  int (__stdcall *pfSymInitialize)(void *, const char *, int);
  unsigned int (__stdcall *pfSymSetOptions)(unsigned int);
  unsigned int (__stdcall *pfSymGetOptions)();
  unsigned __int64 (__stdcall *pfSymLoadModule64)(void *, void *, char *, char *, unsigned __int64, unsigned int);
  int (__stdcall *pfSymGetModuleInfo64)(void *, unsigned __int64, _IMAGEHLP_MODULE64 *);
  int (__stdcall *pfSymFromName)(void *, char *, _SYMBOL_INFO *);
};

/* 449 */
struct _DETOUR_ENUMERATE_IMPORTS_THUNK_CONTEXT
{
  void *pContext;
  int (__stdcall *pfImportFunc)(void *, unsigned int, const char *, void *);
};

/* 450 */
struct remap_global_varable
{
  int *binder_context_mgr_uid;
  pthread_mutex_t_ **binder_lock;
  unsigned int *binder_stats_br;
  unsigned int *binder_stats_br_0;
  unsigned int *binder_stats_bc;
  unsigned int *binder_stats_obj_created_BINDER_STAT_PROC;
  unsigned int *binder_stats_obj_created_BINDER_STAT_THREAD;
  unsigned int *binder_stats_obj_created_BINDER_STAT_NODE;
  unsigned int *binder_stats_obj_created_BINDER_STAT_REF;
  unsigned int *binder_stats_obj_created_BINDER_STAT_DEATH;
  unsigned int *binder_stats_obj_created_BINDER_STAT_TRANSACTION;
  unsigned int *binder_stats_obj_created_BINDER_STAT_TRANSACTION_COMPLETE;
  unsigned int *binder_stats_obj_deleted_BINDER_STAT_PROC;
  unsigned int *binder_stats_obj_deleted_BINDER_STAT_THREAD;
  unsigned int *binder_stats_obj_deleted_BINDER_STAT_NODE;
  unsigned int *binder_stats_obj_deleted_BINDER_STAT_REF;
  unsigned int *binder_stats_obj_deleted_BINDER_STAT_DEATH;
  unsigned int *binder_stats_obj_deleted_BINDER_STAT_TRANSACTION;
  unsigned int *binder_stats_obj_deleted_BINDER_STAT_TRANSACTION_COMPLETE;
  binder_node *binder_context_mgr_node;
  unsigned int *binder_last_id;
  hlist_head *binder_procs;
  hlist_head *binder_dead_nodes;
};

/* 451 */
struct _SYSTEMTIME
{
  unsigned __int16 wYear;
  unsigned __int16 wMonth;
  unsigned __int16 wDayOfWeek;
  unsigned __int16 wDay;
  unsigned __int16 wHour;
  unsigned __int16 wMinute;
  unsigned __int16 wSecond;
  unsigned __int16 wMilliseconds;
};

/* 452 */
struct binder_write_read
{
  int write_size;
  int write_consumed;
  unsigned int write_buffer;
  int read_size;
  int read_consumed;
  unsigned int read_buffer;
};

/* 453 */
struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};

/* 454 */
struct binder_ref_death
{
  binder_work work;
  void *cookie;
};

/* 457 */
struct struct_api
{
  int (__cdecl *get_file_name)(void *, char *, int);
  int (__cdecl *osal_close)(void *);
  int (__cdecl *osal_openTempFile)(const char *, int, int);
  int (__cdecl *osal_sockmap_getPid)(const char *);
  int (__cdecl *Perror)(const char *);
  int (__cdecl *getpid)();
  int (__cdecl *gettid)();
  int (__cdecl *getuid)();
  void *(__cdecl *mmap)(void *, unsigned int, int, int, int, unsigned __int64);
  int (__cdecl *munmap)(void *, unsigned int);
  int (__cdecl *pid2handle)(int);
  int (__cdecl *writePipe)(void *, const void *, int);
  int (__cdecl *readPipe)(void *, void *, unsigned int);
  void *(__cdecl *connectPipe)(const char *);
  int (__cdecl *closePipe)(void *);
  int (__cdecl *socketeq_open)(const char *, int);
  int (__cdecl *send_message)(const void *, unsigned int, bool, int, void *);
  int (__cdecl *_open_osfhandle)(int, int);
  int (__cdecl *_get_osfhandle)(int);
  void *(__cdecl *malloc)(unsigned int);
  void (__cdecl *free)(void *);
  int (__cdecl *pthread_mutex_lock)(pthread_mutex_t_ **);
  int (__cdecl *pthread_mutex_unlock)(pthread_mutex_t_ **);
  int (__cdecl *pthread_cond_wait)(struct pthread_cond_t_ **, pthread_mutex_t_ **);
  int (__cdecl *pthread_cond_init)(struct pthread_cond_t_ **, struct pthread_condattr_t_ *const *);
  int (__cdecl *pthread_cond_signal)(struct pthread_cond_t_ **);
};

/* 455 */
struct BaseAPI
{
  BaseAPIVtbl *vfptr;
  struct_api struct_api_;
};

/* 456 */
struct BaseAPIVtbl
{
  void *(__thiscall *__vecDelDtor)(BaseAPI *this, unsigned int);
};

/* 458 */
union $1CF2D7F262ED255DDAB0F01A40F1DA30
{
  void *binder;
  int handle;
};

/* 459 */
struct flat_binder_object
{
  unsigned int type;
  unsigned int flags;
  $1CF2D7F262ED255DDAB0F01A40F1DA30 ___u2;
  void *cookie;
};

/* 460 */
struct __declspec(align(8)) timespec
{
  __int64 tv_sec;
  int tv_nsec;
};

/* 461 */
struct binder_version
{
  int protocol_version;
};

/* 462 */
struct file
{
  void *private_data;
  void *f_flags;
};

/* 463 */
struct timeval
{
  int tv_sec;
  int tv_usec;
};

/* 464 */
struct binder_transaction_log_entry
{
  int debug_id;
  int call_type;
  int from_proc;
  int from_thread;
  int target_handle;
  int to_proc;
  int to_thread;
  int to_node;
  int data_size;
  int offsets_size;
};

/* 465 */
struct binder_transaction_log
{
  int next;
  int full;
  binder_transaction_log_entry entry[32];
};

/* 466 */
struct binder_ref
{
  int debug_id;
  rb_node rb_node_desc;
  rb_node rb_node_node;
  hlist_node node_entry;
  binder_proc *proc;
  binder_node *node;
  unsigned int desc;
  int strong;
  int weak;
  binder_ref_death *death;
};

/* 467 */
union $2F9EC58EC9314F6C9AF43E98CF85E2FF
{
  unsigned int handle;
  void *ptr;
};

/* 468 */
struct $76E49E73D22C7EB97CD59DFF8F6549A8
{
  const void *buffer;
  const void *offsets;
};

/* 469 */
union $C0A12E3699D0AACCC0D366E7E24F9950
{
  $76E49E73D22C7EB97CD59DFF8F6549A8 ptr;
  char buf[8];
};

/* 470 */
struct binder_transaction_data
{
  $2F9EC58EC9314F6C9AF43E98CF85E2FF target;
  void *cookie;
  unsigned int code;
  unsigned int flags;
  int sender_pid;
  int sender_euid;
  unsigned int data_size;
  unsigned int offsets_size;
  $C0A12E3699D0AACCC0D366E7E24F9950 data;
};

/* 471 */
struct __declspec(align(8)) _timespec64
{
  __int64 tv_sec;
  int tv_nsec;
};

/* 472 */
struct __cppobj std::allocator<char>
{
};

/* 473 */
struct __cppobj std::_Wrap_alloc<std::allocator<char> > : std::allocator<char>
{
};

/* 474 */
struct __cppobj std::_Container_base0
{
};

/* 475 */
union std::_String_val<std::_Simple_types<char> >::_Bxty
{
  char _Buf[16];
  char *_Ptr;
  char _Alias[16];
};

/* 476 */
struct __cppobj std::_String_val<std::_Simple_types<char> > : std::_Container_base0
{
  std::_String_val<std::_Simple_types<char> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 477 */
struct __cppobj std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1> : std::_Wrap_alloc<std::allocator<char> >
{
  std::_String_val<std::_Simple_types<char> > _Myval2;
};

/* 478 */
struct std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
{
  std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1> _Mypair;
};

/* 479 */
struct __cppobj std::basic_string<char,std::char_traits<char>,std::allocator<char> > : std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
{
};

/* 480 */
struct __cppobj std::char_traits<char>
{
};

/* 481 */
struct __cppobj std::_Iterator_base0
{
};

/* 482 */
struct __cppobj std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base0> : std::_Iterator_base0
{
};

/* 483 */
struct __cppobj std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > : std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base0>
{
  const char *_Ptr;
};

/* 484 */
struct __cppobj std::_String_iterator<std::_String_val<std::_Simple_types<char> > > : std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
{
};

/* 485 */
struct std::initializer_list<char>
{
  const char *_First;
  const char *_Last;
};

/* 486 */
struct __cppobj std::input_iterator_tag
{
};

/* 487 */
struct __cppobj std::_Mutable_iterator_tag
{
};

/* 488 */
struct __cppobj std::forward_iterator_tag : std::input_iterator_tag, std::_Mutable_iterator_tag
{
  _BYTE gap0[1];
};

/* 489 */
struct __cppobj std::bidirectional_iterator_tag : std::forward_iterator_tag
{
};

/* 490 */
struct __cppobj std::random_access_iterator_tag : std::bidirectional_iterator_tag
{
};

/* 491 */
struct HHOOK__
{
  int unused;
};

/* 492 */
struct _TypeDescriptor
{
  const void *pVFTable;
  void *spare;
  char name[];
};

/* 493 */
struct _PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 494 */
struct _s__CatchableType
{
  unsigned int properties;
  _TypeDescriptor *pType;
  _PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)(void *);
};

/* 495 */
struct $_TypeDescriptor$_extraBytes_24
{
  const void *pVFTable;
  void *spare;
  char name[24];
};

/* 496 */
struct _Ctypevec
{
  unsigned int _Page;
  const __int16 *_Table;
  int _Delfl;
  wchar_t *_LocaleName;
};

/* 497 */
struct $_TypeDescriptor$_extraBytes_28
{
  const void *pVFTable;
  void *spare;
  char name[28];
};

/* 498 */
union __m128
{
  float m128_f32[4];
  unsigned __int64 m128_u64[2];
  char m128_i8[16];
  __int16 m128_i16[8];
  int m128_i32[4];
  __int64 m128_i64[2];
  char m128_u8[16];
  unsigned __int16 m128_u16[8];
  unsigned int m128_u32[4];
};

/* 499 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_23
{
  const void *pVFTable;
  void *spare;
  char name[23];
};

/* 500 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_34
{
  const void *pVFTable;
  void *spare;
  char name[34];
};

/* 501 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_46
{
  const void *pVFTable;
  void *spare;
  char name[46];
};

/* 502 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_19
{
  const void *pVFTable;
  void *spare;
  char name[19];
};

/* 503 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_21
{
  const void *pVFTable;
  void *spare;
  char name[21];
};

/* 504 */
struct $_TypeDescriptor$_extraBytes_20
{
  const void *pVFTable;
  void *spare;
  char name[20];
};

/* 505 */
struct $_s__CatchableTypeArray$_extraBytes_20
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[5];
};

/* 506 */
struct __cppobj std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base0> : std::_Iterator_base0
{
};

/* 507 */
struct __cppobj std::_Iterator012<std::random_access_iterator_tag,char16_t,int,char16_t const *,char16_t const &,std::_Iterator_base0> : std::_Iterator_base0
{
};

/* 508 */
struct __cppobj std::output_iterator_tag : std::_Mutable_iterator_tag
{
};

/* 509 */
struct __cppobj std::pointer_traits<char *>
{
};

/* 510 */
struct __cppobj std::_Simple_types<char>
{
};

/* 511 */
struct std::_Lockit
{
  int _Locktype;
};

/* 512 */
struct __cppobj std::_Bitwise_hash<long double>
{
};

/* 513 */
struct __cppobj std::_Num_base
{
};

/* 514 */
union std::_Align_type<int,8>
{
  int _Val;
  char _Pad[8];
};

/* 515 */
struct std::_Immortalizer<std::_Iostream_error_category>
{
  std::_Align_type<int,8> _Storage;
};

/* 516 */
struct __cppobj std::_Bitwise_hash<float>
{
};

/* 517 */
struct __cppobj std::hash<float> : std::_Bitwise_hash<float>
{
};

/* 518 */
struct std::_Immortalizer<std::_System_error_category>
{
  std::_Align_type<int,8> _Storage;
};

/* 519 */
struct __cppobj std::_Bitwise_hash<int>
{
};

/* 520 */
struct __cppobj std::hash<int> : std::_Bitwise_hash<int>
{
};

/* 521 */
struct __cppobj std::_Num_int_base : std::_Num_base
{
};

/* 522 */
struct std::_Facet_base
{
  std::_Facet_baseVtbl *vfptr;
};

/* 523 */
struct std::_Facet_baseVtbl
{
  void *(__thiscall *__vecDelDtor)(std::_Facet_base *this, unsigned int);
  void (__thiscall *_Incref)(std::_Facet_base *this);
  std::_Facet_base *(__thiscall *_Decref)(std::_Facet_base *this);
};

/* 524 */
struct __cppobj std::_Crt_new_delete
{
};

/* 525 */
struct __cppobj std::locale::facet : std::_Facet_base, std::_Crt_new_delete
{
  unsigned int _Myrefs;
};

/* 526 */
struct __cppobj std::ctype_base : std::locale::facet
{
};

/* 527 */
struct _Cvtvec
{
  unsigned int _Page;
  unsigned int _Mbcurmax;
  int _Isclocale;
  char _Isleadbyte[32];
};

/* 528 */
struct __cppobj std::ctype<wchar_t> : std::ctype_base
{
  _Ctypevec _Ctype;
  _Cvtvec _Cvt;
};

/* 529 */
struct std::locale::id
{
  unsigned int _Id;
};

/* 530 */
struct __declspec(align(4)) std::_Yarn<char>
{
  char *_Myptr;
  char _Nul;
};

/* 531 */
struct __declspec(align(4)) std::_Yarn<wchar_t>
{
  wchar_t *_Myptr;
  wchar_t _Nul;
};

/* 532 */
struct std::_Locinfo
{
  std::_Lockit _Lock;
  std::_Yarn<char> _Days;
  std::_Yarn<char> _Months;
  std::_Yarn<wchar_t> _W_Days;
  std::_Yarn<wchar_t> _W_Months;
  std::_Yarn<char> _Oldlocname;
  std::_Yarn<char> _Newlocname;
};

/* 533 */
struct __cppobj std::_Locbase<int>
{
};

/* 534 */
struct __cppobj std::locale::_Locimp : std::locale::facet
{
  std::locale::facet **_Facetvec;
  unsigned int _Facetcount;
  int _Catmask;
  bool _Xparent;
  std::_Yarn<char> _Name;
};

/* 535 */
struct __cppobj std::locale : std::_Locbase<int>, std::_Crt_new_delete
{
  _BYTE gap0[1];
  std::locale::_Locimp *_Ptr;
};

/* 536 */
struct std::error_category
{
  std::error_categoryVtbl *vfptr;
  unsigned int _Addr;
};

/* 537 */
struct std::error_condition
{
  int _Myval;
  std::error_category *_Mycat;
};

/* 538 */
const struct std::error_code
{
  int _Myval;
  std::error_category *_Mycat;
};

/* 539 */
struct std::error_categoryVtbl
{
  void *(__thiscall *__vecDelDtor)(std::error_category *this, unsigned int);
  const char *(__thiscall *name)(std::error_category *this);
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *(__thiscall *message)(std::error_category *this, std::basic_string<char,std::char_traits<char>,std::allocator<char> > *result, int);
  std::error_condition *(__thiscall *default_error_condition)(std::error_category *this, std::error_condition *result, int);
  bool (__thiscall *equivalent)(std::error_category *this, std::error_code *, int);
  bool (__thiscall *equivalent)(std::error_category *this, int, std::error_condition *);
};

/* 540 */
struct __cppobj std::_System_error_category : std::error_category
{
};

/* 541 */
struct __cppobj std::allocator_traits<std::allocator<char> >
{
};

/* 542 */
struct __cppobj std::integral_constant<bool,0>
{
};

/* 543 */
struct __cppobj std::integral_constant<bool,1>
{
};

/* 544 */
struct __cppobj std::_Nil
{
};

/* 545 */
struct __cppobj std::_Wrap_alloc<std::allocator<char> >::rebind<char>
{
};

/* 546 */
struct __cppobj std::allocator<wchar_t>
{
};

/* 547 */
struct __cppobj std::allocator_traits<std::allocator<wchar_t> >
{
};

/* 550 */
struct __declspec(align(4)) __std_exception_data
{
  const char *_What;
  bool _DoFree;
};

/* 548 */
struct std::exception
{
  std::exceptionVtbl *vfptr;
  __std_exception_data _Data;
};

/* 549 */
struct std::exceptionVtbl
{
  void *(__thiscall *__vecDelDtor)(std::exception *this, unsigned int);
  const char *(__thiscall *what)(std::exception *this);
};

/* 551 */
struct __cppobj std::bad_cast : std::exception
{
};

/* 552 */
struct __cppobj std::_Num_float_base : std::_Num_base
{
};

/* 553 */
struct __cppobj std::numeric_limits<double> : std::_Num_float_base
{
};

/* 554 */
struct __cppobj std::bad_typeid : std::exception
{
};

/* 555 */
struct __cppobj std::__non_rtti_object : std::bad_typeid
{
};

/* 556 */
struct __cppobj std::logic_error : std::exception
{
};

/* 557 */
struct __cppobj std::_Simple_types<wchar_t>
{
};

/* 558 */
struct __cppobj std::_Char_traits<char32_t,unsigned int>
{
};

/* 559 */
struct __cppobj std::char_traits<char32_t> : std::_Char_traits<char32_t,unsigned int>
{
};

/* 560 */
struct __cppobj std::allocator<char32_t>
{
};

/* 561 */
struct __cppobj std::_Wrap_alloc<std::allocator<char32_t> > : std::allocator<char32_t>
{
};

/* 562 */
union __declspec(align(16)) std::_String_val<std::_Simple_types<char32_t> >::_Bxty
{
  char _Alias[4];
};

/* 563 */
struct __cppobj __unaligned __declspec(align(8)) std::_String_val<std::_Simple_types<char32_t> > : std::_Container_base0
{
  std::_String_val<std::_Simple_types<char32_t> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 564 */
struct __cppobj std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char32_t> >,std::_String_val<std::_Simple_types<char32_t> >,1> : std::_Wrap_alloc<std::allocator<char32_t> >
{
  std::_String_val<std::_Simple_types<char32_t> > _Myval2;
};

/* 565 */
struct __cppobj std::_Simple_types<char16_t>
{
};

/* 566 */
struct __cppobj std::numeric_limits<bool> : std::_Num_int_base
{
};

/* 567 */
struct __cppobj std::_Wrap_alloc<std::allocator<wchar_t> > : std::allocator<wchar_t>
{
};

/* 568 */
union std::_String_val<std::_Simple_types<wchar_t> >::_Bxty
{
  wchar_t _Buf[8];
  wchar_t *_Ptr;
  char _Alias[8];
};

/* 569 */
struct __cppobj std::_String_val<std::_Simple_types<wchar_t> > : std::_Container_base0
{
  std::_String_val<std::_Simple_types<wchar_t> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 570 */
struct __cppobj std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1> : std::_Wrap_alloc<std::allocator<wchar_t> >
{
  std::_String_val<std::_Simple_types<wchar_t> > _Myval2;
};

/* 571 */
struct std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
{
  std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1> _Mypair;
};

/* 572 */
struct __cppobj std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > : std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
{
};

/* 573 */
struct __cppobj std::char_traits<wchar_t>
{
};

/* 574 */
struct __cppobj std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > > : std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base0>
{
  const wchar_t *_Ptr;
};

/* 575 */
struct std::initializer_list<wchar_t>
{
  const wchar_t *_First;
  const wchar_t *_Last;
};

/* 576 */
struct __cppobj std::numeric_limits<unsigned short> : std::_Num_int_base
{
};

/* 577 */
struct __cppobj std::_Iosb<int>
{
};

/* 578 */
struct __cppobj std::ios_base : std::_Iosb<int>
{
  std::ios_baseVtbl *vfptr;
  unsigned int _Stdstr;
  int _Mystate;
  int _Except;
  int _Fmtfl;
  __int64 _Prec;
  __int64 _Wide;
  std::ios_base::_Iosarray *_Arr;
  std::ios_base::_Fnarray *_Calls;
  std::locale *_Ploc;
};

/* 579 */
struct std::ios_baseVtbl
{
  void *(__thiscall *__vecDelDtor)(std::ios_base *this, unsigned int);
};

/* 580 */
struct __cppobj std::ios_base::_Iosarray : std::_Crt_new_delete
{
  std::ios_base::_Iosarray *_Next;
  int _Index;
  int _Lo;
  void *_Vp;
};

/* 581 */
struct __cppobj std::ios_base::_Fnarray : std::_Crt_new_delete
{
  std::ios_base::_Fnarray *_Next;
  int _Index;
  void (__cdecl *_Pfn)(std::ios_base::event, std::ios_base *, int);
};

/* 582 */
struct std::basic_streambuf<char,std::char_traits<char> >
{
  std::basic_streambuf<char,std::char_traits<char> >Vtbl *vfptr;
  char *_Gfirst;
  char *_Pfirst;
  char **_IGfirst;
  char **_IPfirst;
  char *_Gnext;
  char *_Pnext;
  char **_IGnext;
  char **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 583 */
struct _Mbstatet
{
  unsigned int _Wchar;
  unsigned __int16 _Byte;
  unsigned __int16 _State;
};

/* 584 */
struct std::fpos<_Mbstatet>
{
  __int64 _Myoff;
  __int64 _Fpos;
  _Mbstatet _Mystate;
};

/* 585 */
struct std::basic_streambuf<char,std::char_traits<char> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<char,std::char_traits<char> > *this, unsigned int);
  _BYTE gap4[4];
  void (__thiscall *_Unlock)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *overflow)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  int (__thiscall *pbackfail)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  __int64 (__thiscall *showmanyc)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *underflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *uflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  __int64 (__thiscall *xsgetn)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, __int64);
  __int64 (__thiscall *xsputn)(std::basic_streambuf<char,std::char_traits<char> > *this, const char *, __int64);
  std::fpos<_Mbstatet> *(__thiscall *seekoff)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<_Mbstatet> *result, __int64, int, int);
  std::fpos<_Mbstatet> *(__thiscall *seekpos)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<_Mbstatet> *result, std::fpos<_Mbstatet>, int);
  std::basic_streambuf<char,std::char_traits<char> > *(__thiscall *setbuf)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, __int64);
  int (__thiscall *sync)(std::basic_streambuf<char,std::char_traits<char> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<char,std::char_traits<char> > *this, std::locale *);
};

/* 586 */
struct __cppobj std::basic_ostream<char,std::char_traits<char> >
{
  _BYTE gap0[80];
};

/* 587 */
struct __cppobj __declspec(align(8)) std::basic_ios<char,std::char_traits<char> > : std::ios_base
{
  std::basic_streambuf<char,std::char_traits<char> > *_Mystrbuf;
  std::basic_ostream<char,std::char_traits<char> > *_Tiestr;
  char _Fillch;
};

/* 588 */
struct __cppobj std::iterator<std::output_iterator_tag,void,void,void,void>
{
};

/* 589 */
struct __cppobj std::ostreambuf_iterator<char,std::char_traits<char> > : std::iterator<std::output_iterator_tag,void,void,void,void>
{
  bool _Failed;
  std::basic_streambuf<char,std::char_traits<char> > *_Strbuf;
};

/* 590 */
struct __cppobj std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > : std::locale::facet
{
};

/* 591 */
struct std::basic_ostream<char,std::char_traits<char> >::_Sentry_base
{
  std::basic_ostream<char,std::char_traits<char> > *_Myostr;
};

/* 592 */
struct __cppobj __declspec(align(4)) std::basic_ostream<char,std::char_traits<char> >::sentry : std::basic_ostream<char,std::char_traits<char> >::_Sentry_base
{
  bool _Ok;
};

/* 593 */
struct __cppobj std::runtime_error : std::exception
{
};

/* 594 */
struct __cppobj std::overflow_error : std::runtime_error
{
};

/* 595 */
struct __cppobj std::_One_then_variadic_args_t
{
};

/* 596 */
struct __cppobj std::allocator_traits<std::allocator<char32_t> >
{
};

/* 597 */
struct __cppobj std::_Wrap_alloc<std::allocator<char32_t> >::rebind<char32_t>
{
};

/* 598 */
struct __cppobj std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t> > > : std::_Iterator012<std::random_access_iterator_tag,char16_t,int,char16_t const *,char16_t const &,std::_Iterator_base0>
{
  _BYTE gap0[4];
};

/* 599 */
struct __cppobj std::allocator<char16_t>
{
};

/* 600 */
struct __cppobj std::_Wrap_alloc<std::allocator<char16_t> > : std::allocator<char16_t>
{
};

/* 601 */
union __declspec(align(16)) std::_String_val<std::_Simple_types<char16_t> >::_Bxty
{
  char _Alias[8];
};

/* 602 */
struct __cppobj __unaligned __declspec(align(8)) std::_String_val<std::_Simple_types<char16_t> > : std::_Container_base0
{
  std::_String_val<std::_Simple_types<char16_t> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 603 */
struct __cppobj std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char16_t> >,std::_String_val<std::_Simple_types<char16_t> >,1> : std::_Wrap_alloc<std::allocator<char16_t> >
{
  std::_String_val<std::_Simple_types<char16_t> > _Myval2;
};

/* 604 */
struct std::_String_alloc<std::_String_base_types<char16_t,std::allocator<char16_t> > >
{
  std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char16_t> >,std::_String_val<std::_Simple_types<char16_t> >,1> _Mypair;
};

/* 605 */
struct __cppobj std::numeric_limits<unsigned __int64> : std::_Num_int_base
{
};

/* 606 */
struct _Collvec
{
  unsigned int _Page;
  wchar_t *_LocaleName;
};

/* 607 */
struct std::_Timevec
{
  void *_Timeptr;
};

/* 608 */
struct __cppobj std::numeric_limits<char16_t> : std::_Num_int_base
{
};

/* 609 */
struct __cppobj std::codecvt_base : std::locale::facet
{
};

/* 610 */
struct __cppobj std::codecvt<wchar_t,char,_Mbstatet> : std::codecvt_base
{
  _Cvtvec _Cvt;
};

/* 611 */
struct std::_Immortalizer<std::_Generic_error_category>
{
  std::_Align_type<int,8> _Storage;
};

/* 612 */
struct std::_Container_proxy
{
  std::_Container_base12 *_Mycont;
  std::_Iterator_base12 *_Myfirstiter;
};

/* 613 */
const struct std::_Container_base12
{
  std::_Container_proxy *_Myproxy;
};

/* 614 */
struct std::_Iterator_base12
{
  std::_Container_proxy *_Myproxy;
  std::_Iterator_base12 *_Mynextiter;
};

/* 615 */
struct __cppobj std::hash<std::error_code>
{
};

/* 616 */
struct __cppobj std::char_traits<unsigned short>
{
};

/* 617 */
struct __cppobj __declspec(align(4)) std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > : std::basic_streambuf<char,std::char_traits<char> >
{
  char *_Seekhigh;
  int _Mystate;
  std::allocator<char> _Al;
};

/* 618 */
struct __cppobj __declspec(align(8)) std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > : std::basic_ostream<char,std::char_traits<char> >
{
  _BYTE gap50[72];
};

/* 619 */
struct __cppobj std::_Iterator012<std::random_access_iterator_tag,char32_t,int,char32_t const *,char32_t const &,std::_Iterator_base0> : std::_Iterator_base0
{
};

/* 620 */
struct __cppobj std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t> > > : std::_Iterator012<std::random_access_iterator_tag,char32_t,int,char32_t const *,char32_t const &,std::_Iterator_base0>
{
  _BYTE gap0[4];
};

/* 621 */
struct __cppobj std::_Wrap_alloc<std::allocator<wchar_t> >::rebind<wchar_t>
{
};

/* 622 */
struct __cppobj std::hash<long double> : std::_Bitwise_hash<long double>
{
};

/* 623 */
struct __cppobj std::basic_string<char16_t,std::char_traits<char16_t>,std::allocator<char16_t> > : std::_String_alloc<std::_String_base_types<char16_t,std::allocator<char16_t> > >
{
};

/* 624 */
struct __cppobj std::_Char_traits<char16_t,unsigned short>
{
};

/* 625 */
struct __cppobj std::char_traits<char16_t> : std::_Char_traits<char16_t,unsigned short>
{
};

/* 626 */
struct __cppobj std::initializer_list<char16_t>
{
  _BYTE gap0[8];
};

/* 627 */
struct __cppobj std::numeric_limits<wchar_t> : std::_Num_int_base
{
};

/* 628 */
struct __cppobj std::_Bitwise_hash<double>
{
};

/* 629 */
struct __cppobj std::hash<double> : std::_Bitwise_hash<double>
{
};

/* 630 */
struct __cppobj std::numpunct<char> : std::locale::facet
{
  const char *_Grouping;
  char _Dp;
  char _Kseparator;
  const char *_Falsename;
  const char *_Truename;
};

/* 631 */
struct __cppobj std::_System_error : std::runtime_error
{
  std::error_code _Mycode;
};

/* 632 */
struct __cppobj std::bad_exception : std::exception
{
};

/* 633 */
struct __cppobj std::_Zero_then_variadic_args_t
{
};

/* 634 */
struct std::_String_alloc<std::_String_base_types<char32_t,std::allocator<char32_t> > >
{
  std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char32_t> >,std::_String_val<std::_Simple_types<char32_t> >,1> _Mypair;
};

/* 635 */
struct __cppobj std::basic_string<char32_t,std::char_traits<char32_t>,std::allocator<char32_t> > : std::_String_alloc<std::_String_base_types<char32_t,std::allocator<char32_t> > >
{
};

/* 636 */
struct __cppobj std::initializer_list<char32_t>
{
  _BYTE gap0[8];
};

/* 637 */
struct __cppobj std::invalid_argument : std::logic_error
{
};

/* 638 */
struct __cppobj std::length_error : std::logic_error
{
};

/* 639 */
struct __cppobj std::numeric_limits<float> : std::_Num_float_base
{
};

/* 640 */
struct __cppobj std::allocator_traits<std::allocator<char16_t> >
{
};

/* 641 */
struct __cppobj std::_Wrap_alloc<std::allocator<char16_t> >::rebind<char16_t>
{
};

/* 642 */
struct std::exception_ptr
{
  void *_Data1;
  void *_Data2;
};

/* 643 */
struct __cppobj std::numeric_limits<char32_t> : std::_Num_int_base
{
};

/* 644 */
struct __cppobj std::system_error : std::_System_error
{
};

/* 645 */
struct __cppobj std::ios_base::failure : std::system_error
{
};

/* 646 */
struct __cppobj std::ios_base::Init
{
};

/* 647 */
struct __cppobj std::numeric_limits<unsigned char> : std::_Num_int_base
{
};

/* 648 */
struct __cppobj std::numeric_limits<long> : std::_Num_int_base
{
};

/* 649 */
struct __cppobj std::numeric_limits<short> : std::_Num_int_base
{
};

/* 650 */
struct __cppobj std::ctype<unsigned short> : std::ctype_base
{
  _Ctypevec _Ctype;
  _Cvtvec _Cvt;
};

/* 651 */
struct __cppobj std::bad_alloc : std::exception
{
};

/* 652 */
struct __cppobj std::underflow_error : std::runtime_error
{
};

/* 653 */
struct __cppobj std::out_of_range : std::logic_error
{
};

/* 654 */
struct __cppobj std::numeric_limits<__int64> : std::_Num_int_base
{
};

/* 655 */
struct __cppobj std::ctype<char> : std::ctype_base
{
  _Ctypevec _Ctype;
};

/* 656 */
struct __cppobj std::_Simple_types<char32_t>
{
};

/* 657 */
struct __cppobj std::_Generic_error_category : std::error_category
{
};

/* 658 */
struct __cppobj std::_Iostream_error_category : std::_Generic_error_category
{
};

/* 659 */
struct __cppobj std::bad_array_new_length : std::bad_alloc
{
};

/* 660 */
struct __cppobj std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
{
};

/* 661 */
struct __cppobj std::_Facetptr<std::ctype<char> >
{
};

/* 662 */
struct std::nested_exception
{
  std::nested_exceptionVtbl *vfptr;
  std::exception_ptr _Exc;
};

/* 663 */
struct std::nested_exceptionVtbl
{
  void *(__thiscall *__vecDelDtor)(std::nested_exception *this, unsigned int);
};

/* 664 */
struct __cppobj std::numeric_limits<unsigned int> : std::_Num_int_base
{
};

/* 665 */
struct __cppobj std::codecvt<char32_t,char,_Mbstatet> : std::codecvt_base
{
  unsigned int _Maxcode;
  std::_Codecvt_mode _Mode;
};

/* 666 */
struct __cppobj std::numeric_limits<long double> : std::_Num_float_base
{
};

/* 667 */
struct __cppobj std::range_error : std::runtime_error
{
};

/* 668 */
struct __cppobj std::_Wrap_int
{
};

/* 669 */
struct __cppobj std::numeric_limits<unsigned long> : std::_Num_int_base
{
};

/* 670 */
struct __cppobj std::ctype_byname<char> : std::ctype<char>
{
};

/* 671 */
struct __cppobj std::numeric_limits<signed char> : std::_Num_int_base
{
};

/* 672 */
struct __cppobj std::domain_error : std::logic_error
{
};

/* 673 */
struct __cppobj std::allocator<void>
{
};

/* 674 */
struct __cppobj std::numeric_limits<char> : std::_Num_int_base
{
};

/* 675 */
struct __cppobj std::codecvt<char16_t,char,_Mbstatet> : std::codecvt_base
{
  unsigned int _Maxcode;
  std::_Codecvt_mode _Mode;
};

/* 676 */
struct __cppobj std::codecvt<unsigned short,char,_Mbstatet> : std::codecvt_base
{
  _Cvtvec _Cvt;
};

/* 677 */
struct __cppobj std::_Facetptr<std::numpunct<char> >
{
};

/* 678 */
struct __cppobj std::numeric_limits<int> : std::_Num_int_base
{
};

/* 679 */
struct _s__RTTIClassHierarchyDescriptor
{
  unsigned int signature;
  unsigned int attributes;
  unsigned int numBaseClasses;
  _s__RTTIBaseClassArray *pBaseClassArray;
};

/* 680 */
const struct _s__RTTIBaseClassDescriptor2
{
  _TypeDescriptor *pTypeDescriptor;
  unsigned int numContainedBases;
  _PMD where;
  unsigned int attributes;
  _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

/* 681 */
const struct __unaligned __declspec(align(1)) _s__RTTIBaseClassArray
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[];
};

/* 682 */
struct stat
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  int st_size;
  __int64 st_atime;
  __int64 st_mtime;
  __int64 st_ctime;
};

/* 683 */
struct tagPROCESSENTRY32
{
  unsigned int dwSize;
  unsigned int cntUsage;
  unsigned int th32ProcessID;
  unsigned int th32DefaultHeapID;
  unsigned int th32ModuleID;
  unsigned int cntThreads;
  unsigned int th32ParentProcessID;
  int pcPriClassBase;
  unsigned int dwFlags;
  char szExeFile[260];
};

/* 684 */
struct $_TypeDescriptor$_extraBytes_52
{
  const void *pVFTable;
  void *spare;
  char name[52];
};

/* 685 */
struct _s__CatchableTypeArray
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[];
};

/* 686 */
struct _stat64i32
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  int st_size;
  __int64 st_atime;
  __int64 st_mtime;
  __int64 st_ctime;
};

/* 689 */
struct __declspec(align(4)) __std_type_info_data
{
  const char *_UndecoratedName;
  const char _DecoratedName[1];
};

/* 687 */
struct type_info
{
  type_infoVtbl *vfptr;
  __std_type_info_data _Data;
};

/* 688 */
struct type_infoVtbl
{
  void *(__thiscall *__vecDelDtor)(type_info *this, unsigned int);
};

/* 690 */
struct google::base::CheckOpMessageBuilder
{
  std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > *stream_;
};

/* 691 */
struct google::CheckOpString
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *str_;
};

/* 692 */
struct google::LogSink
{
  google::LogSinkVtbl *vfptr;
};

/* 693 */
struct google::LogSinkVtbl
{
  void *(__thiscall *__vecDelDtor)(google::LogSink *this, unsigned int);
  void (__thiscall *send)(google::LogSink *this, int, const char *, const char *, int, tm *, const char *, unsigned int);
  void (__thiscall *WaitTillSent)(google::LogSink *this);
};

/* 694 */
struct __cppobj google::DummyClassToDefineOperator
{
};

/* 695 */
struct __cppobj google::base_logging::LogStreamBuf : std::basic_streambuf<char,std::char_traits<char> >
{
};

/* 696 */
struct __cppobj __declspec(align(8)) google::LogMessage::LogStream : std::basic_ostream<char,std::char_traits<char> >
{
  _BYTE gap50[72];
};

/* 697 */
struct __cppobj __declspec(align(16)) google::NullStream : google::LogMessage::LogStream
{
};

/* 698 */
struct __cppobj google::NullStreamFatal : google::NullStream
{
};

/* 699 */
struct google::LogMessage
{
  struct google::LogMessage::LogMessageData *allocated_;
  struct google::LogMessage::LogMessageData *data_;
};

/* 700 */
struct __cppobj google::LogMessageVoidify
{
};

/* 701 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_20
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[5];
  _BYTE gap14[1];
};

/* 702 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_27
{
  const void *pVFTable;
  void *spare;
  char name[27];
};

/* 703 */
struct _s__ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)(void *);
  int (__cdecl *pForwardCompat)();
  _s__CatchableTypeArray *pCatchableTypeArray;
};

/* 704 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_25
{
  const void *pVFTable;
  void *spare;
  char name[25];
};

/* 705 */
struct _s__RTTICompleteObjectLocator
{
  unsigned int signature;
  unsigned int offset;
  unsigned int cdOffset;
  _TypeDescriptor *pTypeDescriptor;
  _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

/* 706 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_16
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[4];
  _BYTE gap10[1];
};

/* 707 */
union __m64
{
  unsigned __int64 m64_u64;
  float m64_f32[2];
  char m64_i8[8];
  __int16 m64_i16[4];
  int m64_i32[2];
  __int64 m64_i64;
  char m64_u8[8];
  unsigned __int16 m64_u16[4];
  unsigned int m64_u32[2];
};

/* 708 */
struct _EVENT_DATA_DESCRIPTOR
{
  unsigned __int64 Ptr;
  unsigned int Size;
  unsigned int Reserved;
};

/* 709 */
struct _EVENT_DESCRIPTOR
{
  unsigned __int16 Id;
  char Version;
  char Channel;
  char Level;
  char Opcode;
  unsigned __int16 Task;
  unsigned __int64 Keyword;
};

/* 710 */
struct __cppobj __crt_fast_encoded_nullptr_t
{
};

/* 711 */
struct _EXCEPTION_RECORD
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 712 */
struct _EXCEPTION_POINTERS
{
  _EXCEPTION_RECORD *ExceptionRecord;
  _CONTEXT *ContextRecord;
};

/* 713 */
union FT
{
  unsigned __int64 ft_scalar;
  _FILETIME ft_struct;
};

/* 714 */
struct _IMAGE_LOAD_CONFIG_DIRECTORY32
{
  unsigned int Size;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  unsigned int LockPrefixTable;
  unsigned int MaximumAllocationSize;
  unsigned int VirtualMemoryThreshold;
  unsigned int ProcessHeapFlags;
  unsigned int ProcessAffinityMask;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  unsigned int EditList;
  unsigned int SecurityCookie;
  unsigned int SEHandlerTable;
  unsigned int SEHandlerCount;
  unsigned int GuardCFCheckFunctionPointer;
  unsigned int Reserved2;
  unsigned int GuardCFFunctionTable;
  unsigned int GuardCFFunctionCount;
  unsigned int GuardFlags;
};

/* 715 */
struct __cppobj __scrt_wide_argv_policy
{
};

/* 716 */
struct __cppobj __scrt_narrow_argv_policy
{
};

/* 717 */
struct PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 718 */
struct TypeDescriptor
{
  unsigned int hash;
  void *spare;
  char name[];
};

/* 719 */
struct _s_CatchableType
{
  unsigned int properties;
  TypeDescriptor *pType;
  PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)(void *);
};

/* 720 */
struct _s_CatchableTypeArray
{
  int nCatchableTypes;
  _s_CatchableType *arrayOfCatchableTypes[];
};

/* 721 */
struct _s_ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)(void *);
  int (*pForwardCompat)(...);
  _s_CatchableTypeArray *pCatchableTypeArray;
};

/* 722 */
struct EHExceptionRecord::EHParameters
{
  unsigned int magicNumber;
  void *pExceptionObject;
  _s_ThrowInfo *pThrowInfo;
};

/* 723 */
struct EHExceptionRecord
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  EHExceptionRecord::EHParameters params;
};

/* 724 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 725 */
struct $F5EC29C7FB4BD8CEB9F50E77F7B60288
{
  _SINGLE_LIST_ENTRY Next;
  unsigned __int16 Depth;
  unsigned __int16 CpuId;
};

/* 726 */
union _SLIST_HEADER
{
  unsigned __int64 Alignment;
  $F5EC29C7FB4BD8CEB9F50E77F7B60288 __s1;
};

/* 727 */
struct __type_info_node
{
  _SLIST_HEADER _Header;
};

/* 728 */
struct $_s__CatchableTypeArray$_extraBytes_12
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[3];
};

/* 729 */
struct $_s__CatchableTypeArray$_extraBytes_8
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[2];
};

/* 730 */
struct _onexit_table_t
{
  void (__cdecl **_first)();
  void (__cdecl **_last)();
  void (__cdecl **_end)();
};

/* 1544 */
enum _EXCEPTION_DISPOSITION
{
  ExceptionContinueExecution = 0x0,
  ExceptionContinueSearch = 0x1,
  ExceptionNestedException = 0x2,
  ExceptionCollidedUnwind = 0x3,
};

/* 731 */
struct _EXCEPTION_REGISTRATION_RECORD
{
  _EXCEPTION_REGISTRATION_RECORD *Next;
  _EXCEPTION_DISPOSITION (__stdcall *Handler)(_EXCEPTION_RECORD *, void *, _CONTEXT *, void *);
};

/* 733 */
union $7A727655067EA29DD1B3C3F7D79CBFD1
{
  void *FiberData;
  unsigned int Version;
};

/* 732 */
struct _NT_TIB
{
  _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *StackBase;
  void *StackLimit;
  void *SubSystemTib;
  $7A727655067EA29DD1B3C3F7D79CBFD1 ___u4;
  void *ArbitraryUserPointer;
  _NT_TIB *Self;
};

/* 734 */
struct _CLIENT_ID
{
  void *UniqueProcess;
  void *UniqueThread;
};

/* 735 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 736 */
struct _PEB_LDR_DATA
{
  unsigned int Length;
  char Initialized;
  void *SsHandle;
  _LIST_ENTRY InLoadOrderModuleList;
  _LIST_ENTRY InMemoryOrderModuleList;
  _LIST_ENTRY InInitializationOrderModuleList;
  void *EntryInProgress;
  char ShutdownInProgress;
  void *ShutdownThreadId;
};

/* 737 */
struct _UNICODE_STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  wchar_t *Buffer;
};

/* 738 */
struct _CURDIR
{
  _UNICODE_STRING DosPath;
  void *Handle;
};

/* 739 */
struct _STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  char *Buffer;
};

/* 740 */
struct _RTL_DRIVE_LETTER_CURDIR
{
  unsigned __int16 Flags;
  unsigned __int16 Length;
  unsigned int TimeStamp;
  _STRING DosPath;
};

/* 741 */
struct _RTL_USER_PROCESS_PARAMETERS
{
  unsigned int MaximumLength;
  unsigned int Length;
  unsigned int Flags;
  unsigned int DebugFlags;
  void *ConsoleHandle;
  unsigned int ConsoleFlags;
  void *StandardInput;
  void *StandardOutput;
  void *StandardError;
  _CURDIR CurrentDirectory;
  _UNICODE_STRING DllPath;
  _UNICODE_STRING ImagePathName;
  _UNICODE_STRING CommandLine;
  void *Environment;
  unsigned int StartingX;
  unsigned int StartingY;
  unsigned int CountX;
  unsigned int CountY;
  unsigned int CountCharsX;
  unsigned int CountCharsY;
  unsigned int FillAttribute;
  unsigned int WindowFlags;
  unsigned int ShowWindowFlags;
  _UNICODE_STRING WindowTitle;
  _UNICODE_STRING DesktopInfo;
  _UNICODE_STRING ShellInfo;
  _UNICODE_STRING RuntimeData;
  _RTL_DRIVE_LETTER_CURDIR CurrentDirectores[32];
  unsigned int EnvironmentSize;
  unsigned int EnvironmentVersion;
  void *PackageDependencyData;
  unsigned int ProcessGroupId;
  unsigned int LoaderThreads;
};

/* 742 */
struct _RTL_CRITICAL_SECTION
{
  _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int SpinCount;
};

/* 743 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  _LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Flags;
  unsigned __int16 CreatorBackTraceIndexHigh;
  unsigned __int16 SpareWORD;
};

/* 744 */
struct $80C54752D44305E7C47053D650BD9E29
{
  __int8 ImageUsesLargePages : 1;
  __int8 IsProtectedProcess : 1;
  __int8 IsImageDynamicallyRelocated : 1;
  __int8 SkipPatchingUser32Forwarders : 1;
  __int8 IsPackagedProcess : 1;
  __int8 IsAppContainer : 1;
  __int8 IsProtectedProcessLight : 1;
  __int8 SpareBits : 1;
};

/* 745 */
union $62C2D3252F2B8A5477C6DE3DBB7D03AE
{
  char BitField;
  $80C54752D44305E7C47053D650BD9E29 __s1;
};

/* 746 */
struct $B5C0D3AF06C7C0E0C35F2AF79ED7DD00
{
  unsigned __int32 ProcessInJob : 1;
  unsigned __int32 ProcessInitializing : 1;
  unsigned __int32 ProcessUsingVEH : 1;
  unsigned __int32 ProcessUsingVCH : 1;
  unsigned __int32 ProcessUsingFTH : 1;
  unsigned __int32 ReservedBits0 : 27;
};

/* 747 */
union $307567E727EC7FCA975CD0BC82CF0D0D
{
  unsigned int CrossProcessFlags;
  $B5C0D3AF06C7C0E0C35F2AF79ED7DD00 __s1;
};

/* 748 */
union $6F1CA9A36B21C857AE5467E073440320
{
  void *KernelCallbackTable;
  void *UserSharedInfoPtr;
};

/* 749 */
struct $B9EB1F4F9D70F693049DD1A0DA8FBDA7
{
  unsigned __int32 HeapTracingEnabled : 1;
  unsigned __int32 CritSecTracingEnabled : 1;
  unsigned __int32 LibLoaderTracingEnabled : 1;
  unsigned __int32 SpareTracingBits : 29;
};

/* 750 */
union $A559EF65D42559A691C59964757A35A1
{
  unsigned int TracingFlags;
  $B9EB1F4F9D70F693049DD1A0DA8FBDA7 __s1;
};

/* 751 */
struct _PEB
{
  char InheritedAddressSpace;
  char ReadImageFileExecOptions;
  char BeingDebugged;
  $62C2D3252F2B8A5477C6DE3DBB7D03AE ___u3;
  void *Mutant;
  void *ImageBaseAddress;
  _PEB_LDR_DATA *Ldr;
  _RTL_USER_PROCESS_PARAMETERS *ProcessParameters;
  void *SubSystemData;
  void *ProcessHeap;
  _RTL_CRITICAL_SECTION *FastPebLock;
  void *AtlThunkSListPtr;
  void *IFEOKey;
  $307567E727EC7FCA975CD0BC82CF0D0D ___u13;
  $6F1CA9A36B21C857AE5467E073440320 ___u14;
  unsigned int SystemReserved[1];
  unsigned int AtlThunkSListPtr32;
  void *ApiSetMap;
  unsigned int TlsExpansionCounter;
  void *TlsBitmap;
  unsigned int TlsBitmapBits[2];
  void *ReadOnlySharedMemoryBase;
  void *SparePvoid0;
  void **ReadOnlyStaticServerData;
  void *AnsiCodePageData;
  void *OemCodePageData;
  void *UnicodeCaseTableData;
  unsigned int NumberOfProcessors;
  unsigned int NtGlobalFlag;
  _LARGE_INTEGER CriticalSectionTimeout;
  unsigned int HeapSegmentReserve;
  unsigned int HeapSegmentCommit;
  unsigned int HeapDeCommitTotalFreeThreshold;
  unsigned int HeapDeCommitFreeBlockThreshold;
  unsigned int NumberOfHeaps;
  unsigned int MaximumNumberOfHeaps;
  void **ProcessHeaps;
  void *GdiSharedHandleTable;
  void *ProcessStarterHelper;
  unsigned int GdiDCAttributeList;
  _RTL_CRITICAL_SECTION *LoaderLock;
  unsigned int OSMajorVersion;
  unsigned int OSMinorVersion;
  unsigned __int16 OSBuildNumber;
  unsigned __int16 OSCSDVersion;
  unsigned int OSPlatformId;
  unsigned int ImageSubsystem;
  unsigned int ImageSubsystemMajorVersion;
  unsigned int ImageSubsystemMinorVersion;
  unsigned int ActiveProcessAffinityMask;
  unsigned int GdiHandleBuffer[34];
  void (__stdcall *PostProcessInitRoutine)();
  void *TlsExpansionBitmap;
  unsigned int TlsExpansionBitmapBits[32];
  unsigned int SessionId;
  _ULARGE_INTEGER AppCompatFlags;
  _ULARGE_INTEGER AppCompatFlagsUser;
  void *pShimData;
  void *AppCompatInfo;
  _UNICODE_STRING CSDVersion;
  const struct _ACTIVATION_CONTEXT_DATA *ActivationContextData;
  struct _ASSEMBLY_STORAGE_MAP *ProcessAssemblyStorageMap;
  const struct _ACTIVATION_CONTEXT_DATA *SystemDefaultActivationContextData;
  struct _ASSEMBLY_STORAGE_MAP *SystemAssemblyStorageMap;
  unsigned int MinimumStackCommit;
  struct _FLS_CALLBACK_INFO *FlsCallback;
  _LIST_ENTRY FlsListHead;
  void *FlsBitmap;
  unsigned int FlsBitmapBits[4];
  unsigned int FlsHighIndex;
  void *WerRegistrationData;
  void *WerShipAssertPtr;
  void *pUnused;
  void *pImageHeaderHash;
  $A559EF65D42559A691C59964757A35A1 ___u74;
  unsigned __int64 CsrServerReadOnlySharedMemoryBase;
};

/* 752 */
struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME
{
  _RTL_ACTIVATION_CONTEXT_STACK_FRAME *Previous;
  _ACTIVATION_CONTEXT *ActivationContext;
  unsigned int Flags;
};

/* 753 */
struct _ACTIVATION_CONTEXT_STACK
{
  _RTL_ACTIVATION_CONTEXT_STACK_FRAME *ActiveFrame;
  _LIST_ENTRY FrameListCache;
  unsigned int Flags;
  unsigned int NextCookieSequenceNumber;
  unsigned int StackId;
};

/* 754 */
struct _GDI_TEB_BATCH
{
  unsigned __int32 Offset : 31;
  unsigned __int32 HasRenderingCommand : 1;
  unsigned int HDC;
  unsigned int Buffer[310];
};

/* 755 */
struct _PROCESSOR_NUMBER
{
  unsigned __int16 Group;
  char Number;
  char Reserved;
};

/* 756 */
struct _TEB_ACTIVE_FRAME
{
  unsigned int Flags;
  _TEB_ACTIVE_FRAME *Previous;
  _TEB_ACTIVE_FRAME_CONTEXT *Context;
};

/* 757 */
const struct _TEB_ACTIVE_FRAME_CONTEXT
{
  unsigned int Flags;
  const char *FrameName;
};

/* 758 */
struct $AB04A71F05BB26963DB075FCCA6DB396
{
  char ReservedPad0;
  char ReservedPad1;
  char ReservedPad2;
  char IdealProcessor;
};

/* 759 */
union $802EF0517C194529D308CC527D9B1F6B
{
  _PROCESSOR_NUMBER CurrentIdealProcessor;
  unsigned int IdealProcessorValue;
  $AB04A71F05BB26963DB075FCCA6DB396 __s2;
};

/* 760 */
struct $88D35C6E749BA8930BA8A8A22D5F60D0
{
  unsigned __int16 SpareCrossTebBits : 16;
};

/* 761 */
union $72F875EFDB04E5E8E2D013CD98D04895
{
  volatile unsigned __int16 CrossTebFlags;
  $88D35C6E749BA8930BA8A8A22D5F60D0 __s1;
};

/* 762 */
struct $40C2999BA0C7DC4E033AE936C90D56A5
{
  unsigned __int16 SafeThunkCall : 1;
  unsigned __int16 InDebugPrint : 1;
  unsigned __int16 HasFiberData : 1;
  unsigned __int16 SkipThreadAttach : 1;
  unsigned __int16 WerInShipAssertCode : 1;
  unsigned __int16 RanProcessInit : 1;
  unsigned __int16 ClonedThread : 1;
  unsigned __int16 SuppressDebugMsg : 1;
  unsigned __int16 DisableUserStackWalk : 1;
  unsigned __int16 RtlExceptionAttached : 1;
  unsigned __int16 InitialThread : 1;
  unsigned __int16 SessionAware : 1;
  unsigned __int16 LoadOwner : 1;
  unsigned __int16 LoaderWorker : 1;
  unsigned __int16 SpareSameTebBits : 2;
};

/* 763 */
union $E27F27B9F4B89C6CA0B07AB887BA62C1
{
  unsigned __int16 SameTebFlags;
  $40C2999BA0C7DC4E033AE936C90D56A5 __s1;
};

/* 764 */
struct _TEB
{
  _NT_TIB NtTib;
  void *EnvironmentPointer;
  _CLIENT_ID ClientId;
  void *ActiveRpcHandle;
  void *ThreadLocalStoragePointer;
  _PEB *ProcessEnvironmentBlock;
  unsigned int LastErrorValue;
  unsigned int CountOfOwnedCriticalSections;
  void *CsrClientThread;
  void *Win32ThreadInfo;
  unsigned int User32Reserved[26];
  unsigned int UserReserved[5];
  void *WOW32Reserved;
  unsigned int CurrentLocale;
  unsigned int FpSoftwareStatusRegister;
  void *ReservedForDebuggerInstrumentation[16];
  void *SystemReserved1[38];
  int ExceptionCode;
  _ACTIVATION_CONTEXT_STACK *ActivationContextStackPointer;
  unsigned int InstrumentationCallbackSp;
  unsigned int InstrumentationCallbackPreviousPc;
  unsigned int InstrumentationCallbackPreviousSp;
  char InstrumentationCallbackDisabled;
  char SpareBytes[23];
  unsigned int TxFsContext;
  _GDI_TEB_BATCH GdiTebBatch;
  _CLIENT_ID RealClientId;
  void *GdiCachedProcessHandle;
  unsigned int GdiClientPID;
  unsigned int GdiClientTID;
  void *GdiThreadLocalInfo;
  unsigned int Win32ClientInfo[62];
  void *glDispatchTable[233];
  unsigned int glReserved1[29];
  void *glReserved2;
  void *glSectionInfo;
  void *glSection;
  void *glTable;
  void *glCurrentRC;
  void *glContext;
  unsigned int LastStatusValue;
  _UNICODE_STRING StaticUnicodeString;
  wchar_t StaticUnicodeBuffer[261];
  void *DeallocationStack;
  void *TlsSlots[64];
  _LIST_ENTRY TlsLinks;
  void *Vdm;
  void *ReservedForNtRpc;
  void *DbgSsReserved[2];
  unsigned int HardErrorMode;
  void *Instrumentation[9];
  _GUID ActivityId;
  void *SubProcessTag;
  void *PerflibData;
  void *EtwTraceData;
  void *WinSockData;
  unsigned int GdiBatchCount;
  $802EF0517C194529D308CC527D9B1F6B ___u57;
  unsigned int GuaranteedStackBytes;
  void *ReservedForPerf;
  void *ReservedForOle;
  unsigned int WaitingOnLoaderLock;
  void *SavedPriorityState;
  unsigned int ReservedForCodeCoverage;
  void *ThreadPoolData;
  void **TlsExpansionSlots;
  unsigned int MuiGeneration;
  unsigned int IsImpersonating;
  void *NlsCache;
  void *pShimData;
  unsigned __int16 HeapVirtualAffinity;
  unsigned __int16 LowFragHeapDataSlot;
  void *CurrentTransactionHandle;
  _TEB_ACTIVE_FRAME *ActiveFrame;
  void *FlsData;
  void *PreferredLanguages;
  void *UserPrefLanguages;
  void *MergedPrefLanguages;
  unsigned int MuiImpersonation;
  $72F875EFDB04E5E8E2D013CD98D04895 ___u79;
  $E27F27B9F4B89C6CA0B07AB887BA62C1 ___u80;
  void *TxnScopeEnterCallback;
  void *TxnScopeExitCallback;
  void *TxnScopeContext;
  unsigned int LockCount;
  int WowTebOffset;
  void *ResourceRetValue;
  void *ReservedForWdf;
  unsigned __int64 ReservedForCrt;
  _GUID EffectiveContainerId;
};

/* 765 */
struct __cppobj std::_Rand_urng_from_func
{
};

/* 766 */
struct std::_Node_base
{
  std::_Node_baseVtbl *vfptr;
  std::_Node_type _Kind;
  std::_Node_flags _Flags;
  std::_Node_base *_Next;
  std::_Node_base *_Prev;
};

/* 767 */
struct std::_Node_baseVtbl
{
  void *(__thiscall *__vecDelDtor)(std::_Node_base *this, unsigned int);
};

/* 768 */
struct __cppobj std::_Regex_traits_base
{
};

/* 769 */
struct std::money_base::pattern
{
  char field[4];
};

/* 770 */
struct __cppobj std::money_base : std::locale::facet
{
};

/* 771 */
struct __cppobj std::_Node_capture : std::_Node_base
{
  unsigned int _Idx;
};

/* 772 */
struct __cppobj std::_Regex_traits<wchar_t> : std::_Regex_traits_base
{
  const struct std::collate<wchar_t> *_Pcoll;
  std::ctype<wchar_t> *_Pctype;
  std::locale _Loc;
};

/* 773 */
struct __cppobj std::_Regex_traits<char> : std::_Regex_traits_base
{
  const struct std::collate<char> *_Pcoll;
  std::ctype<char> *_Pctype;
  std::locale _Loc;
};

/* 774 */
struct __cppobj std::_Node_back : std::_Node_base
{
  unsigned int _Idx;
};

/* 775 */
struct __cppobj std::time_base : std::locale::facet
{
};

/* 776 */
struct __cppobj std::_Node_assert : std::_Node_base
{
  std::_Node_base *_Child;
};

/* 777 */
struct __cppobj std::regex_traits<wchar_t> : std::_Regex_traits<wchar_t>
{
};

/* 778 */
struct __cppobj std::tuple<>
{
};

/* 779 */
struct __declspec(align(4)) std::_Cl_names
{
  const char *_Narrow;
  const wchar_t *_Wide;
  unsigned int _Len;
  __int16 _Ctype;
};

/* 780 */
struct __cppobj std::_Node_endif : std::_Node_base
{
};

/* 781 */
struct __cppobj std::_Node_if : std::_Node_base
{
  std::_Node_endif *_Endif;
  std::_Node_if *_Child;
};

/* 782 */
struct __cppobj std::regex_traits<char> : std::_Regex_traits<char>
{
};

/* 783 */
struct __cppobj std::regex_error : std::runtime_error
{
  std::regex_constants::error_type _Err;
};

/* 784 */
struct __cppobj std::messages_base : std::locale::facet
{
};

/* 785 */
struct __cppobj std::_Node_end_group : std::_Node_base
{
  std::_Node_base *_Back;
};

/* 786 */
struct __cppobj std::_Root_node : std::_Node_base
{
  std::regex_constants::syntax_option_type _Fl;
  unsigned int _Loops;
  unsigned int _Marks;
  unsigned int _Refs;
};

/* 787 */
struct __cppobj std::_Node_rep : std::_Node_base
{
  const int _Min;
  const int _Max;
  std::_Node_end_rep *_End_rep;
  unsigned int _Loop_number;
  int _Simple_loop;
};

/* 788 */
struct __cppobj std::_Node_end_rep : std::_Node_base
{
  std::_Node_rep *_Begin_rep;
};

/* 789 */
struct std::_Bitmap
{
  char _Chrs[32];
};

/* 790 */
struct __cppobj std::bad_function_call : std::exception
{
};

/* 791 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_26
{
  const void *pVFTable;
  void *spare;
  char name[26];
};

/* 792 */
struct __declspec(align(32)) _JMP_BUF
{
  unsigned int saved_ebp;
  unsigned int saved_ebx;
  unsigned int saved_edi;
  unsigned int saved_esi;
  unsigned int saved_esp;
  unsigned int saved_return;
  unsigned int saved_xregistration;
  unsigned int saved_trylevel;
  unsigned int version_cookie;
  unsigned int unwind_func;
  unsigned int unwind_data;
};

/* 793 */
struct __declspec(align(16)) ExceptionRecordStruct
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned int ExceptionRecord_;
  unsigned int ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInfo;
  _BYTE gap18[56];
};

/* 794 */
struct RegistrationNode
{
  unsigned int Next;
  unsigned int Handler;
  unsigned int EH4ScopeTable;
  unsigned int TryLevel;
};

/* 795 */
union $0E3F8CB7D65B38BD22FD7A6AB8ED9E74
{
  unsigned int HandlerAddress;
  unsigned int FinallyFunc;
};

/* 796 */
struct ScopeTableRecord
{
  unsigned int EnclosingLevel;
  unsigned int FilterFunc;
  $0E3F8CB7D65B38BD22FD7A6AB8ED9E74 ___u2;
};

/* 797 */
struct UnwindGuardNode
{
  unsigned int Next;
  unsigned int Handler;
  unsigned int SecurityCookie;
  unsigned int OrigTargetLevel;
  unsigned int OrigEstablisher;
  unsigned int OrigCookiePointer;
  unsigned int FramePointer;
};

/* 798 */
struct ScopeTable
{
  unsigned int GSCookieOffset;
  unsigned int GSCookieXOROffset;
  unsigned int EHCookieOffset;
  unsigned int EHCookieXOROffset;
  unsigned int ScopeRecord;
};

/* 799 */
struct _EXCEPTION_REGISTRATION
{
  unsigned int prev;
  unsigned int handler;
};

/* 800 */
struct _NLG_INFO
{
  unsigned int dwSig;
  unsigned int uoffDestination;
  unsigned int dwCode;
  unsigned int uoffFramePointer;
};

/* 801 */
struct __declspec(align(16)) _EXCEPTION_RECORD_CRT
{
  unsigned int exception_number;
  unsigned int exception_flags;
  unsigned int exception_record;
  unsigned int exception_address;
  unsigned int number_parameters;
  unsigned int exception_information;
  _BYTE gap18[56];
};

/* 802 */
struct _EXCEPTION_REGISTRATION_COMMON
{
  _BYTE gap0[8];
  unsigned int scopetable;
  unsigned int trylevel;
};

/* 803 */
struct _SCOPETABLE_ENTRY
{
  unsigned int enclosing_level;
  unsigned int filter;
  unsigned int specific_handler;
};

/* 804 */
union $0BD1D6F9CC3F9A31C27E2AFCF271B0B7
{
  void (__cdecl *HandlerAddress)();
  void (__fastcall *FinallyFunc)(int);
};

/* 805 */
struct _EH4_SCOPETABLE_RECORD
{
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 1337 */
typedef unsigned int DWORD;

/* 806 */
struct _EH4_SCOPETABLE
{
  DWORD GSCookieOffset;
  DWORD GSCookieXOROffset;
  DWORD EHCookieOffset;
  DWORD EHCookieXOROffset;
  struct _EH4_SCOPETABLE_RECORD ScopeRecord[];
};

/* 807 */
struct _EH4_EXCEPTION_REGISTRATION_RECORD
{
  void *SavedESP;
  _EXCEPTION_POINTERS *ExceptionPointers;
  _EXCEPTION_REGISTRATION_RECORD SubRecord;
  unsigned int EncodedScopeTable;
  unsigned int TryLevel;
};

/* 808 */
struct __JUMP_BUFFER
{
  unsigned int Ebp;
  unsigned int Ebx;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Esp;
  unsigned int Eip;
  unsigned int Registration;
  unsigned int TryLevel;
  unsigned int Cookie;
  unsigned int UnwindFunc;
  unsigned int UnwindData[6];
};

/* 809 */
union __m128i
{
  char m128i_i8[16];
  __int16 m128i_i16[8];
  int m128i_i32[4];
  __int64 m128i_i64[2];
  char m128i_u8[16];
  unsigned __int16 m128i_u16[8];
  unsigned int m128i_u32[4];
  unsigned __int64 m128i_u64[2];
};

/* 810 */
struct _s_HandlerType
{
  unsigned int adjectives;
  TypeDescriptor *pType;
  int dispCatchObj;
  void *addressOfHandler;
};

/* 811 */
struct _s_TryBlockMapEntry
{
  int tryLow;
  int tryHigh;
  int catchHigh;
  int nCatches;
  _s_HandlerType *pHandlerArray;
};

/* 812 */
struct _s_UnwindMapEntry
{
  int toState;
  void (__cdecl *action)();
};

/* 813 */
struct _s_ESTypeList
{
  int nCount;
  _s_HandlerType *pTypeArray;
};

/* 814 */
struct _s_FuncInfo
{
  unsigned __int32 magicNumber : 29;
  unsigned __int32 bbtFlags : 3;
  int maxState;
  _s_UnwindMapEntry *pUnwindMap;
  unsigned int nTryBlocks;
  _s_TryBlockMapEntry *pTryBlockMap;
  unsigned int nIPMapEntries;
  void *pIPtoStateMap;
  _s_ESTypeList *pESTypeList;
  int EHFlags;
};

/* 815 */
struct __vcrt_ptd
{
  unsigned int _NLG_dwCode;
  void (__cdecl *_unexpected)();
  void *_translator;
  void *_purecall;
  void *_curexception;
  void *_curcontext;
  int _ProcessingThrow;
  void *_curexcspec;
  int _cxxReThrow;
  void *_pFrameInfoChain;
};

/* 816 */
struct EHRegistrationNode
{
  EHRegistrationNode *pNext;
  void *frameHandler;
  int state;
};

/* 817 */
struct FrameInfo
{
  void *pExceptionObject;
  FrameInfo *pNext;
};

/* 818 */
struct __cppobj __crt_public_free_policy
{
};

/* 819 */
struct __crt_unique_heap_ptr<char,__crt_public_free_policy>
{
  char *_p;
};

/* 820 */
struct __crt_unique_heap_ptr<void,__crt_internal_free_policy>
{
  void *_p;
};

/* 821 */
struct __cppobj __crt_internal_free_policy
{
};

/* 822 */
struct __crt_unique_heap_ptr<char,__crt_internal_free_policy>
{
  char *_p;
};

/* 823 */
struct WinRTExceptionInfo
{
  void *description;
  void *restrictedErrorString;
  void *restrictedErrorReference;
  void *capabilitySid;
  int hr;
  void *restrictedInfo;
  _s_ThrowInfo *throwInfo;
  unsigned int size;
  void (__stdcall *PrepareThrow)(void *);
};

/* 824 */
struct __crt_unique_heap_ptr<__vcrt_ptd,__crt_internal_free_policy>
{
  __vcrt_ptd *_p;
};

/* 825 */
struct scoped_get_last_error_reset
{
  unsigned int _old_last_error;
};

/* 826 */
struct _EVENT_FILTER_DESCRIPTOR
{
  unsigned __int64 Ptr;
  unsigned int Size;
  unsigned int Type;
};

/* 827 */
struct DNameNode
{
  DNameNodeVtbl *vfptr;
};

/* 828 */
struct DNameNodeVtbl
{
  int (__thiscall *length)(DNameNode *this);
  char (__thiscall *getLastChar)(DNameNode *this);
  char *(__thiscall *getString)(DNameNode *this, char *, char *);
};

/* 829 */
struct DName
{
  DNameNode *node;
  __int32 stat : 8;
  unsigned __int32 isIndir : 1;
  unsigned __int32 isAUDC : 1;
  unsigned __int32 isAUDTThunk : 1;
  unsigned __int32 isArrayType : 1;
  unsigned __int32 NoTE : 1;
  unsigned __int32 pinPtr : 1;
  unsigned __int32 comArray : 1;
  unsigned __int32 vcallThunk : 1;
};

/* 830 */
struct Replicator
{
  int index;
  DName *dNameBuffer[10];
};

/* 831 */
struct _HeapManager::Block
{
  _HeapManager::Block *next;
  char memBlock[4096];
};

/* 832 */
struct _HeapManager
{
  void *(__cdecl *pOpNew)(unsigned int);
  void (__cdecl *pOpDelete)(void *);
  _HeapManager::Block *head;
  _HeapManager::Block *tail;
  unsigned int blockLeft;
};

/* 833 */
struct __cppobj pairNode : DNameNode
{
  DNameNode *left;
  DNameNode *right;
  int myLen;
};

/* 834 */
struct $08BD3D891899F43F57F1E55125C55774
{
  unsigned __int32 number_ : 12;
  unsigned __int32 nesting_ : 8;
  unsigned __int32 cumulative_parent_number_ : 10;
  unsigned __int32 is_generic_ : 1;
  unsigned __int32 is_mvar_ : 1;
};

/* 835 */
union TPI_t
{
  unsigned int index_;
  $08BD3D891899F43F57F1E55125C55774 __s1;
};

/* 836 */
struct __cppobj __declspec(align(4)) charNode : DNameNode
{
  char me;
};

/* 837 */
struct __cppobj pDNameNode : DNameNode
{
  DName *me;
};

/* 838 */
struct UnDecorator
{
  Replicator ArgList;
  Replicator ZNameList;
};

/* 839 */
struct $_TypeDescriptor$_extraBytes_16
{
  const void *pVFTable;
  void *spare;
  char name[16];
};

/* 840 */
struct __cppobj DNameStatusNode : DNameNode
{
  DNameStatus me;
  int myLen;
};

/* 841 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_15
{
  const void *pVFTable;
  void *spare;
  char name[15];
};

/* 842 */
struct __cppobj pcharNode : DNameNode
{
  char *me;
  int myLen;
};

/* 843 */
struct CatchGuardRN
{
  EHRegistrationNode *pNext;
  void *pFrameHandler;
  unsigned int RandomCookie;
  _s_FuncInfo *pFuncInfo;
  EHRegistrationNode *pRN;
  int CatchDepth;
};

/* 844 */
struct TranslatorGuardRN
{
  EHRegistrationNode *pNext;
  void *pFrameHandler;
  unsigned int RandomCookie;
  _s_FuncInfo *pFuncInfo;
  EHRegistrationNode *pRN;
  int CatchDepth;
  EHRegistrationNode *pMarkerRN;
  void *ESP;
  void *EBP;
  int DidUnwind;
};

/* 845 */
union _dbl
{
  int lng[2];
  long double dbl;
};

/* 846 */
struct _exception
{
  int type;
  char *name;
  long double arg1;
  long double arg2;
  long double retval;
};

/* 847 */
struct _U32ARRAY
{
  unsigned int W[4];
};

/* 848 */
struct _U64
{
  unsigned int W[2];
};

/* 849 */
struct _FP128
{
  unsigned int W[4];
};

/* 850 */
struct _FPIEEE_EXCEPTION_FLAGS
{
  unsigned __int32 Inexact : 1;
  unsigned __int32 Underflow : 1;
  unsigned __int32 Overflow : 1;
  unsigned __int32 ZeroDivide : 1;
  unsigned __int32 InvalidOperation : 1;
};

/* 851 */
struct _FP80
{
  unsigned __int16 W[5];
};

/* 852 */
struct _I64
{
  unsigned int W[2];
};

/* 853 */
struct _BCD80
{
  unsigned __int16 W[5];
};

/* 854 */
struct _FPQ64
{
  __int64 W[2];
};

/* 855 */
union $E8BDB5698247BFC098745DA7C54CC1F7
{
  float Fp32Value;
  long double Fp64Value;
  _FP80 Fp80Value;
  _FP128 Fp128Value;
  __int16 I16Value;
  int I32Value;
  _I64 I64Value;
  unsigned __int16 U16Value;
  unsigned int U32Value;
  _U64 U64Value;
  _BCD80 Bcd80Value;
  char *StringValue;
  int CompareValue;
  _U32ARRAY U32ArrayValue;
  __int64 Q64Value;
  _FPQ64 Fpq64Value;
};

/* 856 */
struct __declspec(align(16)) _FPIEEE_VALUE
{
  $E8BDB5698247BFC098745DA7C54CC1F7 Value;
  unsigned __int32 OperandValid : 1;
  unsigned __int32 Format : 4;
};

/* 857 */
struct _FPIEEE_RECORD
{
  unsigned __int32 RoundingMode : 2;
  unsigned __int32 Precision : 3;
  unsigned __int32 Operation : 12;
  _FPIEEE_EXCEPTION_FLAGS Cause;
  _FPIEEE_EXCEPTION_FLAGS Enable;
  _FPIEEE_EXCEPTION_FLAGS Status;
  _FPIEEE_VALUE Operand1;
  _FPIEEE_VALUE Operand2;
  _FPIEEE_VALUE Result;
};

/* 858 */
struct __cppobj IInspectable : IUnknown
{
};

/* 859 */
struct HSTRING__
{
  int unused;
};

/* 860 */
struct __crt_ctype_compatibility_data
{
  unsigned int id;
  int is_clike;
};

/* 861 */
struct __cppobj __crt_findfile_traits
{
};

/* 862 */
struct __cppobj IActivationFactory : IInspectable
{
};

/* 863 */
struct __cppobj $F1BCC8D2ED72627AE3E1D14940DBB08E
{
};

/* 864 */
struct __crt_qualified_locale_data_downlevel
{
  int iLcidState;
  unsigned int lcidLanguage;
  unsigned int lcidCountry;
};

/* 865 */
struct __crt_errno_guard
{
  int *_errno_address;
  int _stored_errno;
};

/* 866 */
struct __cppobj __crt_handle_traits
{
};

/* 867 */
struct __declspec(align(4)) __crt_qualified_locale_data
{
  const wchar_t *pchLanguage;
  const wchar_t *pchCountry;
  int iLocState;
  int iPrimaryLen;
  int bAbbrevLanguage;
  int bAbbrevCountry;
  unsigned int _cachecp;
  wchar_t _cachein[131];
  wchar_t _cacheout[131];
  __crt_ctype_compatibility_data _Loc_c[5];
  wchar_t _cacheLocaleName[85];
};

/* 868 */
struct __crt_signal_action_t
{
  unsigned int _exception_number;
  int _signal_number;
  void (__cdecl *_action)(int);
};

/* 869 */
struct __declspec(align(4)) __acrt_thread_parameter
{
  void *_procedure;
  void *_context;
  void *_thread_handle;
  HINSTANCE__ *_module_handle;
  bool _initialized_apartment;
};

/* 870 */
struct __acrt_ptd
{
  __crt_signal_action_t *_pxcptacttab;
  _EXCEPTION_POINTERS *_tpxcptinfoptrs;
  int _tfpecode;
  void (__cdecl *_terminate)();
  int _terrno;
  unsigned int _tdoserrno;
  unsigned int _rand_state;
  char *_strtok_token;
  char *_mbstok_token;
  wchar_t *_wcstok_token;
  char *_tmpnam_narrow_buffer;
  wchar_t *_tmpnam_wide_buffer;
  char *_asctime_buffer;
  wchar_t *_wasctime_buffer;
  tm *_gmtime_buffer;
  char *_cvtbuf;
  char *_strerror_buffer;
  wchar_t *_wcserror_buffer;
  __crt_multibyte_data *_multibyte_info;
  __crt_locale_data *_locale_info;
  __crt_qualified_locale_data _setloc_data;
  __crt_qualified_locale_data_downlevel *_setloc_downlevel_data;
  int _own_locale;
  char _putch_buffer[5];
  unsigned __int16 _putch_buffer_used;
  void (__cdecl *_thread_local_iph)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, unsigned int);
  __acrt_thread_parameter *_beginthread_context;
};

/* 871 */
struct __declspec(align(4)) _LocaleUpdate
{
  __acrt_ptd *_ptd;
  __crt_locale_pointers _locale_pointers;
  bool _updated;
};

/* 872 */
struct __cppobj __crt_hmodule_traits
{
};

/* 873 */
struct __crt_state_management::dual_state_global<char * *>
{
  char **_value[1];
};

/* 874 */
struct __cppobj __crt_state_management::scoped_global_state_reset
{
};

/* 875 */
struct __crt_state_management::dual_state_global<wchar_t * *>
{
  wchar_t **_value[1];
};

/* 876 */
struct __crt_state_management::dual_state_global<__crt_locale_data *>
{
  __crt_locale_data *_value[1];
};

/* 877 */
struct __crt_scoped_get_last_error_reset
{
  unsigned int _old_last_error;
};

/* 878 */
struct _WIN32_FIND_DATAW
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  wchar_t cFileName[260];
  wchar_t cAlternateFileName[14];
};

/* 879 */
struct __cppobj __crt_char_traits<wchar_t>
{
};

/* 880 */
struct __crt_unique_heap_ptr<wchar_t,__crt_internal_free_policy>
{
  wchar_t *_p;
};

/* 881 */
struct __declspec(align(4)) _WIN32_FIND_DATAA
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  char cFileName[260];
  char cAlternateFileName[14];
};

/* 882 */
struct __cppobj __crt_char_traits<char>
{
};

/* 883 */
struct __crt_unique_heap_ptr<wchar_t *,__crt_internal_free_policy>
{
  wchar_t **_p;
};

/* 884 */
struct __crt_unique_heap_ptr<char *,__crt_internal_free_policy>
{
  char **_p;
};

/* 885 */
struct __cppobj environment_strings_traits
{
};

/* 886 */
struct __crt_unique_handle_t<environment_strings_traits>
{
  wchar_t *_handle;
};

/* 887 */
struct __cppobj __crt_seh_guarded_call<unsigned short>
{
};

/* 888 */
struct fenv_t
{
  unsigned int _Fe_ctl;
  unsigned int _Fe_stat;
};

/* 889 */
struct fenv_get_set
{
  unsigned int _Fe_ctl;
  unsigned int _Fe_stat;
  unsigned int _Fe_pad[5];
};

/* 890 */
struct __crt_state_management::dual_state_global<int (__cdecl*)(_exception *)>
{
  int (__cdecl *_value[1])(_exception *);
};

/* 891 */
struct __unaligned __declspec(align(2)) DispLocals
{
  unsigned __int16 wUser1;
  unsigned __int16 wUser2;
  unsigned __int16 savCntrl;
  unsigned __int16 setCntrl;
  unsigned __int16 StatusWord;
  _TBYTE Fac;
  unsigned int Function;
  char ErrorType;
  char bUser3;
  unsigned int typ;
  unsigned int nam;
  unsigned __int64 arg1;
  unsigned __int64 arg2;
  unsigned __int64 retval;
  char savebuf;
  _BYTE gap3B[107];
};

/* 892 */
struct __declspec(align(2)) funtab
{
  char fnamlen;
  char fnam;
  _BYTE gap2[5];
  char fuseval;
  _BYTE gap8[5];
  char fnumarg;
  char fnumber;
};

/* 893 */
struct _TIME_ZONE_INFORMATION
{
  int Bias;
  wchar_t StandardName[32];
  _SYSTEMTIME StandardDate;
  int StandardBias;
  wchar_t DaylightName[32];
  _SYSTEMTIME DaylightDate;
  int DaylightBias;
};

/* 894 */
struct transitiondate
{
  int yr;
  int yd;
  int ms;
};

/* 895 */
struct __crt_state_management::dual_state_global<long>
{
  int _value[1];
};

/* 896 */
struct __crt_state_management::dual_state_global<int>
{
  int _value[1];
};

/* 897 */
struct _timespec32
{
  int tv_sec;
  int tv_nsec;
};

/* 898 */
struct __cppobj __crt_integer_traits<__int64>
{
};

/* 899 */
struct __cppobj __crt_time_time_t_traits<__int64> : __crt_integer_traits<__int64>
{
};

/* 900 */
struct __cppobj __crt_integer_traits<long>
{
};

/* 901 */
struct __cppobj __crt_time_time_t_traits<long> : __crt_integer_traits<long>
{
};

/* 902 */
struct __crt_unique_heap_ptr<tm,__crt_internal_free_policy>
{
  tm *_p;
};

/* 903 */
struct __cppobj __crt_simd_cleanup_guard<1>
{
};

/* 904 */
union __m256i
{
  char m256i_i8[32];
  __int16 m256i_i16[16];
  int m256i_i32[8];
  __int64 m256i_i64[4];
  char m256i_u8[32];
  unsigned __int16 m256i_u16[16];
  unsigned int m256i_u32[8];
  unsigned __int64 m256i_u64[4];
};

/* 905 */
struct __cppobj __crt_simd_pack_traits<1>
{
};

/* 906 */
struct __cppobj __crt_simd_pack_traits<0>
{
};

/* 907 */
struct __cppobj __crt_simd_element_traits<0,unsigned char> : __crt_simd_pack_traits<0>
{
};

/* 908 */
struct __cppobj __crt_simd_element_traits<1,unsigned char> : __crt_simd_pack_traits<1>
{
};

/* 909 */
struct __cppobj __crt_simd_element_traits<0,unsigned short> : __crt_simd_pack_traits<0>
{
};

/* 910 */
struct __cppobj __crt_simd_cleanup_guard<0>
{
};

/* 911 */
struct __cppobj __crt_simd_element_traits<1,unsigned short> : __crt_simd_pack_traits<1>
{
};

/* 912 */
struct __cppobj __crt_simd_traits<1,unsigned char> : __crt_simd_element_traits<1,unsigned char>
{
};

/* 913 */
struct __cppobj __crt_simd_traits<0,unsigned short> : __crt_simd_element_traits<0,unsigned short>
{
};

/* 914 */
struct __cppobj __crt_simd_traits<1,unsigned short> : __crt_simd_element_traits<1,unsigned short>
{
};

/* 915 */
struct __cppobj __crt_simd_traits<0,unsigned char> : __crt_simd_element_traits<0,unsigned char>
{
};

/* 916 */
struct __declspec(align(2)) __crt_lowio_handle_data
{
  _RTL_CRITICAL_SECTION lock;
  int osfhnd;
  __int64 startpos;
  char osfile;
  _BYTE textmode[1];
  char _pipe_lookahead[3];
  __int8 unicode : 1;
  __int8 utf8translations : 1;
  __int8 dbcsBufferUsed : 1;
  char dbcsBuffer;
};

/* 917 */
struct __cppobj __acrt_stdio_char_traits<char> : __crt_char_traits<char>
{
};

/* 918 */
struct __cppobj __acrt_stdio_char_traits<wchar_t> : __crt_char_traits<wchar_t>
{
};

/* 919 */
struct __declspec(align(4)) __acrt_stdio_temporary_buffering_guard
{
  _iobuf *_stream;
  bool _flag;
};

/* 920 */
union $19D0B679962758FCE97FDDCCB8B11615
{
  _iobuf _public_file;
  char *_ptr;
};

/* 921 */
struct __crt_stdio_stream_data
{
  $19D0B679962758FCE97FDDCCB8B11615 ___u0;
  char *_base;
  int _cnt;
  int _flags;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
  _RTL_CRITICAL_SECTION _lock;
};

/* 922 */
struct __crt_stdio_stream
{
  __crt_stdio_stream_data *_stream;
};

/* 923 */
struct __declspec(align(4)) __acrt_stdio_stream_mode
{
  int _lowio_mode;
  int _stdio_mode;
  bool _success;
};

/* 924 */
struct __crt_unique_heap_ptr<__crt_stdio_stream_data *,__crt_internal_free_policy>
{
  __crt_stdio_stream_data **_p;
};

/* 925 */
struct __crt_unique_heap_ptr<__crt_stdio_stream_data,__crt_internal_free_policy>
{
  __crt_stdio_stream_data *_p;
};

/* 926 */
struct __crt_stdio_output::formatting_buffer
{
  char _member_buffer[1024];
  unsigned int _dynamic_buffer_size;
  __crt_unique_heap_ptr<char,__crt_internal_free_policy> _dynamic_buffer;
};

/* 927 */
union $147BBAAC6F057C74482616A6F88094DB
{
  char *_narrow_string;
  wchar_t *_wide_string;
};

/* 928 */
struct __crt_stdio_output::common_data<wchar_t>
{
  unsigned __int64 _options;
  __crt_locale_pointers *_locale;
  int *_cached_errno;
  const wchar_t *_format_it;
  char *_valist_it;
  int _characters_written;
  __crt_stdio_output::state _state;
  unsigned int _flags;
  int _field_width;
  int _precision;
  __crt_stdio_output::length_modifier _length;
  bool _suppress_output;
  wchar_t _format_char;
  $147BBAAC6F057C74482616A6F88094DB ___u13;
  int _string_length;
  bool _string_is_wide;
  __crt_stdio_output::formatting_buffer _buffer;
};

/* 929 */
struct __crt_stdio_output::stream_output_adapter<wchar_t>
{
  __crt_stdio_stream _stream;
};

/* 930 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::output_adapter_data<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> > : __crt_stdio_output::common_data<wchar_t>
{
  __crt_stdio_output::stream_output_adapter<wchar_t> _output_adapter;
};

/* 931 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> > : __crt_stdio_output::output_adapter_data<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >
{
  __crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass _current_pass;
};

/* 932 */
struct __cppobj __crt_stdio_output::format_validation_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> > : __crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >
{
};

/* 933 */
struct __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::parameter_data
{
  __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::parameter_type _actual_type;
  wchar_t _format_type;
  char *_valist_it;
  __crt_stdio_output::length_modifier _length;
};

/* 934 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> > : __crt_stdio_output::format_validation_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >
{
  __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::pass _current_pass;
  __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::mode _format_mode;
  const wchar_t *_format;
  __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >::parameter_data _parameters[100];
  int _maximum_index;
  int _type_index;
};

/* 935 */
struct _CRT_DOUBLE
{
  long double x;
};

/* 936 */
struct __crt_stdio_output::common_data<char>
{
  unsigned __int64 _options;
  __crt_locale_pointers *_locale;
  int *_cached_errno;
  const char *_format_it;
  char *_valist_it;
  int _characters_written;
  __crt_stdio_output::state _state;
  unsigned int _flags;
  int _field_width;
  int _precision;
  __crt_stdio_output::length_modifier _length;
  bool _suppress_output;
  char _format_char;
  $147BBAAC6F057C74482616A6F88094DB ___u13;
  int _string_length;
  bool _string_is_wide;
  __crt_stdio_output::formatting_buffer _buffer;
};

/* 937 */
struct __declspec(align(4)) __crt_stdio_output::string_output_adapter_context<char>
{
  char *_buffer;
  unsigned int _buffer_count;
  unsigned int _buffer_used;
  bool _continue_count;
};

/* 938 */
struct __crt_stdio_output::string_output_adapter<char>
{
  __crt_stdio_output::string_output_adapter_context<char> *_context;
};

/* 939 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::output_adapter_data<char,__crt_stdio_output::string_output_adapter<char> > : __crt_stdio_output::common_data<char>
{
  __crt_stdio_output::string_output_adapter<char> _output_adapter;
};

/* 940 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::standard_base<char,__crt_stdio_output::string_output_adapter<char> > : __crt_stdio_output::output_adapter_data<char,__crt_stdio_output::string_output_adapter<char> >
{
  __crt_stdio_output::standard_base<char,__crt_stdio_output::string_output_adapter<char> >::pass _current_pass;
};

/* 941 */
struct __cppobj __crt_stdio_output::format_validation_base<char,__crt_stdio_output::string_output_adapter<char> > : __crt_stdio_output::standard_base<char,__crt_stdio_output::string_output_adapter<char> >
{
};

/* 942 */
struct __cppobj __crt_stdio_output::output_processor<char,__crt_stdio_output::string_output_adapter<char>,__crt_stdio_output::format_validation_base<char,__crt_stdio_output::string_output_adapter<char> > > : __crt_stdio_output::format_validation_base<char,__crt_stdio_output::string_output_adapter<char> >
{
};

/* 943 */
struct __declspec(align(4)) __crt_stdio_output::string_output_adapter_context<wchar_t>
{
  wchar_t *_buffer;
  unsigned int _buffer_count;
  unsigned int _buffer_used;
  bool _continue_count;
};

/* 944 */
struct __crt_stdio_output::string_output_adapter<wchar_t>
{
  __crt_stdio_output::string_output_adapter_context<wchar_t> *_context;
};

/* 945 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::output_adapter_data<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> > : __crt_stdio_output::common_data<wchar_t>
{
  __crt_stdio_output::string_output_adapter<wchar_t> _output_adapter;
};

/* 946 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> > : __crt_stdio_output::output_adapter_data<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >
{
  __crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >::pass _current_pass;
};

/* 947 */
struct __cppobj __crt_stdio_output::output_processor<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t>,__crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> > > : __crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >
{
};

/* 948 */
struct __cppobj __crt_stdio_output::output_processor<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t>,__crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> > > : __crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >
{
};

/* 949 */
struct __cppobj __crt_stdio_output::format_validation_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> > : __crt_stdio_output::standard_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >
{
};

/* 950 */
struct __cppobj __crt_stdio_output::output_processor<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t>,__crt_stdio_output::format_validation_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> > > : __crt_stdio_output::format_validation_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >
{
};

/* 951 */
struct __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> >::parameter_data
{
  __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> >::parameter_type _actual_type;
  char _format_type;
  char *_valist_it;
  __crt_stdio_output::length_modifier _length;
};

/* 952 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> > : __crt_stdio_output::format_validation_base<char,__crt_stdio_output::string_output_adapter<char> >
{
  __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> >::pass _current_pass;
  __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> >::mode _format_mode;
  const char *_format;
  __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> >::parameter_data _parameters[100];
  int _maximum_index;
  int _type_index;
};

/* 953 */
struct __cppobj __crt_stdio_output::output_processor<char,__crt_stdio_output::string_output_adapter<char>,__crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> > > : __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::string_output_adapter<char> >
{
};

/* 954 */
struct __crt_stdio_output::stream_output_adapter<char>
{
  __crt_stdio_stream _stream;
};

/* 955 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::output_adapter_data<char,__crt_stdio_output::stream_output_adapter<char> > : __crt_stdio_output::common_data<char>
{
  __crt_stdio_output::stream_output_adapter<char> _output_adapter;
};

/* 956 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > : __crt_stdio_output::output_adapter_data<char,__crt_stdio_output::stream_output_adapter<char> >
{
  __crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> >::pass _current_pass;
};

/* 957 */
struct __cppobj __crt_stdio_output::format_validation_base<char,__crt_stdio_output::stream_output_adapter<char> > : __crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> >
{
};

/* 958 */
struct __cppobj __crt_stdio_output::output_processor<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t>,__crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> > > : __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >
{
};

/* 959 */
struct __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >::parameter_data
{
  __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >::parameter_type _actual_type;
  wchar_t _format_type;
  char *_valist_it;
  __crt_stdio_output::length_modifier _length;
};

/* 960 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> > : __crt_stdio_output::format_validation_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >
{
  __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >::pass _current_pass;
  __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >::mode _format_mode;
  const wchar_t *_format;
  __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >::parameter_data _parameters[100];
  int _maximum_index;
  int _type_index;
};

/* 961 */
struct __cppobj __crt_stdio_output::output_processor<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t>,__crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> > > : __crt_stdio_output::positional_parameter_base<wchar_t,__crt_stdio_output::string_output_adapter<wchar_t> >
{
};

/* 962 */
struct __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> >::parameter_data
{
  __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> >::parameter_type _actual_type;
  char _format_type;
  char *_valist_it;
  __crt_stdio_output::length_modifier _length;
};

/* 963 */
struct __cppobj __declspec(align(8)) __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> > : __crt_stdio_output::format_validation_base<char,__crt_stdio_output::stream_output_adapter<char> >
{
  __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> >::pass _current_pass;
  __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> >::mode _format_mode;
  const char *_format;
  __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> >::parameter_data _parameters[100];
  int _maximum_index;
  int _type_index;
};

/* 964 */
struct __cppobj __crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > > : __crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> >
{
};

/* 965 */
struct __cppobj __crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> > > : __crt_stdio_output::positional_parameter_base<char,__crt_stdio_output::stream_output_adapter<char> >
{
};

/* 966 */
struct __cppobj __crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::format_validation_base<char,__crt_stdio_output::stream_output_adapter<char> > > : __crt_stdio_output::format_validation_base<char,__crt_stdio_output::stream_output_adapter<char> >
{
};

/* 967 */
struct __cppobj __crt_stdio_output::output_processor<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t>,__crt_stdio_output::format_validation_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> > > : __crt_stdio_output::format_validation_base<wchar_t,__crt_stdio_output::stream_output_adapter<wchar_t> >
{
};

/* 968 */
struct __cppobj __crt_stdio_output::output_processor<char,__crt_stdio_output::string_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::string_output_adapter<char> > > : __crt_stdio_output::standard_base<char,__crt_stdio_output::string_output_adapter<char> >
{
};

/* 969 */
struct __acrt_floating_type_traits<double>::components_type
{
  unsigned __int64 _mantissa : 52;
  unsigned __int64 _exponent : 11;
  unsigned __int64 _sign : 1;
};

/* 970 */
struct __cppobj __acrt_floating_type_traits<double>
{
};

/* 971 */
struct __acrt_floating_type_traits<float>::components_type
{
  unsigned __int32 _mantissa : 23;
  unsigned __int32 _exponent : 8;
  unsigned __int32 _sign : 1;
};

/* 972 */
struct __cppobj __acrt_floating_type_traits<float>
{
};

/* 973 */
struct __cppobj __crt_seh_guarded_call<int>
{
};

/* 974 */
struct __acrt_lock_stream_and_call::__l4::<lambda_3ae262bc35d4ba6a3825c4f6bcaaf95c>
{
  _iobuf *const stream;
};

/* 975 */
struct __acrt_lock_stream_and_call::__l3::<lambda_db08b09ef7aa9d4f8620ce68402612bc>
{
  _iobuf *const stream;
};

/* 976 */
struct __crt_stdio_output::output_processor<char,__crt_stdio_output::stream_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::stream_output_adapter<char> > >::type_case_Z::__l2::ansi_string
{
  unsigned __int16 _length;
  unsigned __int16 _maximum_length;
  char *_buffer;
};

/* 977 */
struct __crt_stdio_output::output_processor<char,__crt_stdio_output::string_output_adapter<char>,__crt_stdio_output::standard_base<char,__crt_stdio_output::string_output_adapter<char> > >::type_case_Z::__l2::ansi_string
{
  unsigned __int16 _length;
  unsigned __int16 _maximum_length;
  char *_buffer;
};

/* 978 */
struct __crt_unique_heap_ptr<void (__cdecl*)(void),__crt_internal_free_policy>
{
  void (__cdecl **_p)();
};

/* 979 */
struct __acrt_lock_and_call::__l4::<lambda_293819299cbf9a7022e18b56a874bb5c>
{
  __acrt_lock_id lock_id;
};

/* 980 */
struct __acrt_lock_and_call::__l3::<lambda_995298e7d72eb4c2aab26c0585b3abe5>
{
  __acrt_lock_id lock_id;
};

/* 981 */
struct __acrt_lock_and_call::__l4::<lambda_6dbb1268764f43b569ce7b67e331d33a>
{
  __acrt_lock_id lock_id;
};

/* 982 */
struct __acrt_lock_and_call::__l3::<lambda_800076c951b434888f4765a74a194fcc>
{
  __acrt_lock_id lock_id;
};

/* 983 */
struct _execute_onexit_table::__l22::<lambda_275893d493268fdec8709772e3fcec0e>
{
  _onexit_table_t *const *table;
};

/* 984 */
struct _register_onexit_function::__l23::<lambda_4e60a939b0d047cfe11ddc22648dfba9>
{
  _onexit_table_t *const *table;
  int (__cdecl *const *function)();
};

/* 985 */
struct _RTL_SPLAY_LINKS
{
  _RTL_SPLAY_LINKS *Parent;
  _RTL_SPLAY_LINKS *LeftChild;
  _RTL_SPLAY_LINKS *RightChild;
};

/* 986 */
struct _RTL_DYNAMIC_HASH_TABLE_ENTRY
{
  _LIST_ENTRY Linkage;
  unsigned int Signature;
};

/* 987 */
struct LIST_ENTRY32
{
  unsigned int Flink;
  unsigned int Blink;
};

/* 989 */
struct $54C14EDA482658922DFACF562417FBE6
{
  _RTL_BALANCED_NODE *Left;
  _RTL_BALANCED_NODE *Right;
};

/* 990 */
union $357A424E03A71490DD729E10DCB0FC8B
{
  _RTL_BALANCED_NODE *Children[2];
  $54C14EDA482658922DFACF562417FBE6 __s1;
};

/* 991 */
struct $6B69197EF4D55E2D95459EB4C68BF7A5
{
  __int8 Red : 1;
};

/* 992 */
struct $F3C1C6598D0F3453305F6C918B3A3A2E
{
  __int8 Balance : 2;
};

/* 993 */
union $B967DAD2063BFA9F8801B9AD138FC56F
{
  $6B69197EF4D55E2D95459EB4C68BF7A5 __s0;
  $F3C1C6598D0F3453305F6C918B3A3A2E __s1;
  unsigned int ParentValue;
};

/* 988 */
struct _RTL_BALANCED_NODE
{
  $357A424E03A71490DD729E10DCB0FC8B ___u0;
  $B967DAD2063BFA9F8801B9AD138FC56F ___u1;
};

/* 994 */
struct _RTL_RB_TREE
{
  _RTL_BALANCED_NODE *Root;
  _RTL_BALANCED_NODE *Min;
};

/* 995 */
struct __crt_unique_handle_t<__crt_hmodule_traits>
{
  HINSTANCE__ *_handle;
};

/* 996 */
struct _RTL_AVL_TREE
{
  _RTL_BALANCED_NODE *Root;
};

/* 997 */
struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT
{
  _LIST_ENTRY *ChainHead;
  _LIST_ENTRY *PrevLinkage;
  unsigned int Signature;
};

/* 998 */
struct _XSTATE_FEATURE
{
  unsigned int Offset;
  unsigned int Size;
};

/* 999 */
struct _KSYSTEM_TIME
{
  unsigned int LowPart;
  int High1Time;
  int High2Time;
};

/* 1000 */
struct __declspec(align(8)) _XSTATE_CONFIGURATION
{
  unsigned __int64 EnabledFeatures;
  unsigned __int64 EnabledVolatileFeatures;
  unsigned int Size;
  unsigned __int32 OptimizedSave : 1;
  unsigned __int32 CompactionEnabled : 1;
  _XSTATE_FEATURE Features[64];
  unsigned __int64 EnabledSupervisorFeatures;
  unsigned __int64 AlignedFeatures;
  unsigned int AllFeatureSize;
  unsigned int AllFeatures[64];
};

/* 1001 */
struct $1D42640696A9C570A342825DAF1CFB5C
{
  __int8 NXSupportPolicy : 2;
  __int8 SEHValidationPolicy : 2;
  __int8 CurDirDevicesSkippedForDlls : 2;
  __int8 Reserved : 2;
};

/* 1002 */
union $1C0D1F069F4760A45B9E1E7A33B60C5A
{
  char MitigationPolicies;
  $1D42640696A9C570A342825DAF1CFB5C __s1;
};

/* 1003 */
struct $042777AACEF09CA43CC53981BC5BDACA
{
  unsigned __int32 DbgErrorPortPresent : 1;
  unsigned __int32 DbgElevationEnabled : 1;
  unsigned __int32 DbgVirtEnabled : 1;
  unsigned __int32 DbgInstallerDetectEnabled : 1;
  unsigned __int32 DbgLkgEnabled : 1;
  unsigned __int32 DbgDynProcessorEnabled : 1;
  unsigned __int32 DbgConsoleBrokerEnabled : 1;
  unsigned __int32 DbgSecureBootEnabled : 1;
  unsigned __int32 DbgMultiSessionSku : 1;
  unsigned __int32 SpareBits : 23;
};

/* 1004 */
union $D1B30AECA7E8490555A17B8B23265F71
{
  unsigned int SharedDataFlags;
  $042777AACEF09CA43CC53981BC5BDACA __s1;
};

/* 1005 */
union __unaligned __declspec(align(4)) $E9B61BE8AAEDED914D6F18EDF924214F
{
  _KSYSTEM_TIME TickCount;
  volatile unsigned __int64 TickCountQuad;
  unsigned int ReservedTickCountOverlay[3];
};

/* 1006 */
struct $BBD468F0D875EE42286EB58E73B52EEF
{
  volatile char QpcBypassEnabled;
  char QpcShift;
};

/* 1007 */
union $20FD83B4474AB38DF871BFA50C5D6695
{
  unsigned __int16 QpcData;
  $BBD468F0D875EE42286EB58E73B52EEF __s1;
};

/* 1008 */
struct _KUSER_SHARED_DATA
{
  unsigned int TickCountLowDeprecated;
  unsigned int TickCountMultiplier;
  _KSYSTEM_TIME InterruptTime;
  _KSYSTEM_TIME SystemTime;
  _KSYSTEM_TIME TimeZoneBias;
  unsigned __int16 ImageNumberLow;
  unsigned __int16 ImageNumberHigh;
  wchar_t NtSystemRoot[260];
  unsigned int MaxStackTraceDepth;
  unsigned int CryptoExponent;
  unsigned int TimeZoneId;
  unsigned int LargePageMinimum;
  unsigned int AitSamplingValue;
  unsigned int AppCompatFlag;
  unsigned __int64 RNGSeedVersion;
  unsigned int GlobalValidationRunlevel;
  volatile int TimeZoneBiasStamp;
  unsigned int NtBuildNumber;
  _NT_PRODUCT_TYPE NtProductType;
  char ProductTypeIsValid;
  char Reserved0[1];
  unsigned __int16 NativeProcessorArchitecture;
  unsigned int NtMajorVersion;
  unsigned int NtMinorVersion;
  char ProcessorFeatures[64];
  unsigned int Reserved1;
  unsigned int Reserved3;
  volatile unsigned int TimeSlip;
  _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
  unsigned int BootId;
  _LARGE_INTEGER SystemExpirationDate;
  unsigned int SuiteMask;
  char KdDebuggerEnabled;
  $1C0D1F069F4760A45B9E1E7A33B60C5A ___u33;
  char Reserved6[2];
  volatile unsigned int ActiveConsoleId;
  volatile unsigned int DismountCount;
  unsigned int ComPlusPackage;
  unsigned int LastSystemRITEventTickCount;
  unsigned int NumberOfPhysicalPages;
  char SafeBootMode;
  char Reserved12[3];
  $D1B30AECA7E8490555A17B8B23265F71 ___u42;
  unsigned int DataFlagsPad[1];
  unsigned __int64 TestRetInstruction;
  __int64 QpcFrequency;
  unsigned __int64 SystemCallPad[3];
  $E9B61BE8AAEDED914D6F18EDF924214F ___u47;
  unsigned int TickCountPad[1];
  unsigned int Cookie;
  unsigned int CookiePad[1];
  __int64 ConsoleSessionForegroundProcessId;
  unsigned __int64 TimeUpdateLock;
  unsigned __int64 BaselineSystemTimeQpc;
  unsigned __int64 BaselineInterruptTimeQpc;
  unsigned __int64 QpcSystemTimeIncrement;
  unsigned __int64 QpcInterruptTimeIncrement;
  char QpcSystemTimeIncrementShift;
  char QpcInterruptTimeIncrementShift;
  unsigned __int16 UnparkedProcessorCount;
  char Reserved8[20];
  unsigned __int16 UserModeGlobalLogger[16];
  unsigned int ImageFileExecutionOptions;
  unsigned int LangGenerationCount;
  unsigned __int64 Reserved4;
  volatile unsigned __int64 InterruptTimeBias;
  volatile unsigned __int64 QpcBias;
  unsigned int ActiveProcessorCount;
  volatile char ActiveGroupCount;
  char Reserved9;
  $20FD83B4474AB38DF871BFA50C5D6695 ___u70;
  _LARGE_INTEGER TimeZoneBiasEffectiveStart;
  _LARGE_INTEGER TimeZoneBiasEffectiveEnd;
  _XSTATE_CONFIGURATION XState;
};

/* 1009 */
struct _RTL_DYNAMIC_HASH_TABLE
{
  unsigned int Flags;
  unsigned int Shift;
  unsigned int TableSize;
  unsigned int Pivot;
  unsigned int DivisorMask;
  unsigned int NumEntries;
  unsigned int NonEmptyBuckets;
  unsigned int NumEnumerators;
  void *Directory;
};

/* 1010 */
struct LIST_ENTRY64
{
  unsigned __int64 Flink;
  unsigned __int64 Blink;
};

/* 1011 */
union $E5785E4AA85B98701DA5E16F08BCB373
{
  _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry;
  _LIST_ENTRY *CurEntry;
};

/* 1012 */
struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR
{
  $E5785E4AA85B98701DA5E16F08BCB373 ___u0;
  _LIST_ENTRY *ChainHead;
  unsigned int BucketIndex;
};

/* 1013 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/* 1014 */
struct _RTL_SRWLOCK
{
  void *Ptr;
};

/* 1015 */
struct Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::EventTraits>
{
  Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::EventTraits>Vtbl *vfptr;
  void *handle_;
};

/* 1016 */
struct Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::EventTraits>Vtbl
{
  bool (__thiscall *InternalClose)(Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::EventTraits> *this);
};

/* 1017 */
struct __cppobj Microsoft::WRL::Wrappers::Event : Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::EventTraits>
{
};

/* 1018 */
struct Microsoft::WRL::Wrappers::Details::SyncLockWithStatusT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>
{
  unsigned int status_;
  void *sync_;
};

/* 1019 */
struct Microsoft::WRL::Wrappers::Details::SyncLockT<Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits>
{
  _RTL_SRWLOCK *sync_;
};

/* 1020 */
struct Microsoft::WRL::Wrappers::Details::SyncLockWithStatusT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>
{
  unsigned int status_;
  void *sync_;
};

/* 1021 */
struct Microsoft::WRL::Wrappers::Details::SyncLockT<Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits>
{
  _RTL_SRWLOCK *sync_;
};

/* 1022 */
struct Microsoft::WRL::Wrappers::Details::SyncLockT<Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits>
{
  _RTL_CRITICAL_SECTION *sync_;
};

/* 1023 */
struct __cppobj Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits
{
};

/* 1024 */
struct __cppobj Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits
{
};

/* 1025 */
struct __cppobj Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits
{
};

/* 1026 */
struct __cppobj Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits : Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits
{
};

/* 1027 */
struct __cppobj Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits
{
};

/* 1028 */
struct __cppobj Microsoft::WRL::Wrappers::HandleTraits::MutexTraits : Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits
{
};

/* 1029 */
struct __cppobj Microsoft::WRL::Wrappers::HandleTraits::HANDLETraits
{
};

/* 1030 */
struct __cppobj Microsoft::WRL::Wrappers::HandleTraits::EventTraits : Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits
{
};

/* 1031 */
struct Microsoft::WRL::Wrappers::CriticalSection
{
  _RTL_CRITICAL_SECTION cs_;
};

/* 1032 */
struct Microsoft::WRL::Wrappers::RoInitializeWrapper
{
  HRESULT _hr;
};

/* 1033 */
struct Microsoft::WRL::Wrappers::HString
{
  HSTRING__ *hstr_;
};

/* 1034 */
struct Microsoft::WRL::Wrappers::SRWLock
{
  _RTL_SRWLOCK SRWLock_;
};

/* 1035 */
struct Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>
{
  Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>Vtbl *vfptr;
  void *handle_;
};

/* 1036 */
struct Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>Vtbl
{
  bool (__thiscall *InternalClose)(Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits> *this);
};

/* 1037 */
struct Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>
{
  Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>Vtbl *vfptr;
  void *handle_;
};

/* 1038 */
struct Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>Vtbl
{
  bool (__thiscall *InternalClose)(Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits> *this);
};

/* 1039 */
struct __cppobj Microsoft::WRL::Wrappers::Mutex : Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>
{
};

/* 1040 */
struct __cppobj Microsoft::WRL::Wrappers::Semaphore : Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>
{
};

/* 1041 */
union $8643C4BABBEF67C84787D5869E382895
{
  void *Reserved1;
  char Reserved2[20];
};

/* 1042 */
struct HSTRING_HEADER
{
  $8643C4BABBEF67C84787D5869E382895 Reserved;
};

/* 1043 */
struct Microsoft::WRL::Wrappers::HStringReference
{
  HSTRING_HEADER header_;
  HSTRING__ *hstr_;
};

/* 1044 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_94
{
  const void *pVFTable;
  void *spare;
  char name[94];
};

/* 1045 */
struct __crt_unique_handle_t<__crt_findfile_traits>
{
  void *_handle;
};

/* 1046 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_39
{
  const void *pVFTable;
  void *spare;
  char name[39];
};

/* 1047 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_90
{
  const void *pVFTable;
  void *spare;
  char name[90];
};

/* 1048 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_8
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[2];
  _BYTE gap8[1];
};

/* 1049 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_4
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[1];
  _BYTE gap4[1];
};

/* 1050 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_35
{
  const void *pVFTable;
  void *spare;
  char name[35];
};

/* 1051 */
struct argument_list<wchar_t>
{
  wchar_t **_first;
  wchar_t **_last;
  wchar_t **_end;
};

/* 1052 */
struct argument_list<char>
{
  char **_first;
  char **_last;
  char **_end;
};

/* 1053 */
struct __crt_unique_heap_ptr<unsigned char,__crt_internal_free_policy>
{
  char *_p;
};

/* 1054 */
struct __cppobj expand_argument_wildcards::__l3::<lambda_85387753dfe6d56fcaa3dbebd9c83af9>
{
};

/* 1055 */
struct __cppobj expand_argument_wildcards::__l25::<lambda_62bb7ecb46d0a77b591a051c43eb5ad1>
{
};

/* 1056 */
struct common_configure_argv::__l18::<lambda_385c9462a7c084859dd3c0da461c81cb>
{
  __crt_unique_heap_ptr<char *,__crt_internal_free_policy> *expanded_argv;
};

/* 1057 */
struct __crt_state_management::dual_state_global<void (__cdecl*)(int)>
{
  void (__cdecl *_value[1])(int);
};

/* 1058 */
struct __cppobj __crt_seh_guarded_call<void (__cdecl*)(int)>
{
};

/* 1059 */
struct __acrt_lock_and_call::__l4::<lambda_f7496a158712204296dd6628a163878e>
{
  __acrt_lock_id lock_id;
};

/* 1060 */
struct __acrt_lock_and_call::__l3::<lambda_a048d3beccc847880fc8490e18b82769>
{
  __acrt_lock_id lock_id;
};

/* 1061 */
struct __cppobj __acrt_get_sigabrt_handler::__l3::<lambda_ec61778202f4f5fc7e7711acc23c3bca>
{
};

/* 1062 */
struct __crt_state_management::dual_state_global<void (__cdecl*)(wchar_t const *,wchar_t const *,wchar_t const *,unsigned int,unsigned int)>
{
  void (__cdecl *_value[1])(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, unsigned int);
};

/* 1063 */
struct __crt_unique_handle_t<__crt_handle_traits>
{
  void *_handle;
};

/* 1064 */
struct message_box_arguments<char>
{
  const char *_caption;
  const char *_text;
  unsigned int _type;
  int _result;
};

/* 1065 */
struct message_box_arguments<wchar_t>
{
  const wchar_t *_caption;
  const wchar_t *_text;
  unsigned int _type;
  int _result;
};

/* 1066 */
struct code_page_info
{
  int code_page;
  unsigned __int16 mbulinfo[6];
  char rgrange[4][8];
};

/* 1067 */
struct __crt_unique_heap_ptr<__crt_multibyte_data,__crt_internal_free_policy>
{
  __crt_multibyte_data *_p;
};

/* 1068 */
struct __declspec(align(4)) _cpinfo
{
  unsigned int MaxCharSize;
  char DefaultChar[2];
  char LeadByte[12];
};

/* 1069 */
struct __cppobj __crt_seh_guarded_call<void>
{
};

/* 1070 */
struct __acrt_lock_and_call::__l4::<lambda_4a8533e2866a575feecb8298ce776b0d>
{
  __acrt_lock_id lock_id;
};

/* 1071 */
struct __acrt_lock_and_call::__l3::<lambda_978dc153c237d78434369da87b74ff60>
{
  __acrt_lock_id lock_id;
};

/* 1072 */
struct setmbcp_internal::__l24::<lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c>
{
  __acrt_ptd *const *ptd;
};

/* 1073 */
struct write_result
{
  unsigned int error_code;
  unsigned int char_count;
  unsigned int lf_count;
};

/* 1074 */
struct __crt_unique_heap_ptr<__crt_lowio_handle_data,__crt_internal_free_policy>
{
  __crt_lowio_handle_data *_p;
};

/* 1075 */
struct __acrt_lowio_lock_fh_and_call::__l3::<lambda_61cee617f5178ae960314fd4d05640a0>
{
  const int fh;
};

/* 1076 */
struct __acrt_lowio_lock_fh_and_call::__l4::<lambda_9cd88cf8ad10232537feb2133f08c833>
{
  const int fh;
};

/* 1077 */
struct _commit::__l20::<lambda_6978c1fb23f02e42e1d9e99668cc68aa>
{
  const int *fh;
};

/* 1078 */
struct __acrt_lowio_lock_fh_and_call::__l4::<lambda_ae55bdf541ad94d75914d381c370e64d>
{
  const int fh;
};

/* 1079 */
struct __acrt_lowio_lock_fh_and_call::__l3::<lambda_123407a5e2ac06da108355a851863b7a>
{
  const int fh;
};

/* 1080 */
struct _close::__l20::<lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec>
{
  const int *fh;
};

/* 1081 */
struct $B644E72B4DD720C4C2541D150B4F8662
{
  const wchar_t *catname;
  wchar_t *locale;
  int (__cdecl *init)(__crt_locale_data *);
};

/* 1082 */
struct __cppobj __vcrt_va_list_is_reference<int>
{
};

/* 1083 */
struct __crt_unique_heap_ptr<__crt_locale_pointers,__crt_internal_free_policy>
{
  __crt_locale_pointers *_p;
};

/* 1084 */
struct __crt_locale_strings
{
  wchar_t szLanguage[64];
  wchar_t szCountry[64];
  wchar_t szCodePage[16];
  wchar_t szLocaleName[85];
};

/* 1085 */
struct __crt_unique_heap_ptr<__crt_locale_data,__crt_internal_free_policy>
{
  __crt_locale_data *_p;
};

/* 1086 */
struct _nlsversioninfo
{
  unsigned int dwNLSVersionInfoSize;
  unsigned int dwNLSVersion;
  unsigned int dwDefinedVersion;
  unsigned int dwEffectiveId;
  _GUID guidCustomVersion;
};

/* 1087 */
struct __crt_scoped_stack_ptr_tag<wchar_t>
{
  wchar_t *_p;
};

/* 1088 */
struct __crt_scoped_stack_ptr<wchar_t>
{
  wchar_t *const _p;
};

/* 1089 */
struct LcidToLocaleName
{
  unsigned int lcid;
  wchar_t *localeName;
};

/* 1090 */
struct LocaleNameIndex
{
  wchar_t *name;
  int index;
};

/* 1091 */
struct __crt_unique_heap_ptr<__crt_lc_time_data,__crt_internal_free_policy>
{
  __crt_lc_time_data *_p;
};

/* 1092 */
struct __crt_unique_heap_ptr<long,__crt_internal_free_policy>
{
  int *_p;
};

/* 1093 */
struct __crt_unique_heap_ptr<lconv,__crt_internal_free_policy>
{
  lconv *_p;
};

/* 1094 */
struct __crt_unique_heap_ptr<unsigned short,__crt_internal_free_policy>
{
  unsigned __int16 *_p;
};

/* 1095 */
struct __crt_locale_string_table
{
  wchar_t *szName;
  wchar_t chAbbrev[4];
};

/* 1096 */
struct tagUSEROBJECTFLAGS
{
  int fInherit;
  int fReserved;
  unsigned int dwFlags;
};

/* 1097 */
struct HWINSTA__
{
  int unused;
};

/* 1098 */
struct __acrt_initializer
{
  bool (__cdecl *_initialize)();
  bool (__cdecl *_uninitialize)(bool);
};

/* 1099 */
struct __crt_unique_heap_ptr<__acrt_ptd,__crt_internal_free_policy>
{
  __acrt_ptd *_p;
};

/* 1100 */
struct __acrt_lock_and_call::__l3::<lambda_51b6e8b1eb166f2a3faf91f424b38130>
{
  __acrt_lock_id lock_id;
};

/* 1101 */
struct __acrt_lock_and_call::__l4::<lambda_0b5a4a3e68152e1d9b943535f5f47bed>
{
  __acrt_lock_id lock_id;
};

/* 1102 */
struct __acrt_lock_and_call::__l3::<lambda_3518db117f0e7cdb002338c5d3c47b6c>
{
  __acrt_lock_id lock_id;
};

/* 1103 */
struct __acrt_lock_and_call::__l4::<lambda_abdedf541bb04549bc734292b4a045d4>
{
  __acrt_lock_id lock_id;
};

/* 1104 */
struct __acrt_lock_and_call::__l3::<lambda_5b71d36f03204c0beab531769a5b5694>
{
  __acrt_lock_id lock_id;
};

/* 1105 */
struct __acrt_lock_and_call::__l4::<lambda_8f9ce462984622f9bf76b59e2aaaf805>
{
  __acrt_lock_id lock_id;
};

/* 1106 */
struct __acrt_lock_and_call::__l3::<lambda_9df27f884b057bc3edfc946cb5b7cf47>
{
  __acrt_lock_id lock_id;
};

/* 1107 */
struct __acrt_lock_and_call::__l4::<lambda_cc0d902bcbbeb830f749456577db4721>
{
  __acrt_lock_id lock_id;
};

/* 1108 */
struct construct_ptd::__l4::<lambda_b2ea41f6bbb362cd97d94c6828d90b61>
{
  __acrt_ptd *const *ptd;
  __crt_locale_data **const *locale_data;
};

/* 1109 */
struct construct_ptd::__l3::<lambda_e69574bed617af4e071282c136b37893>
{
  __acrt_ptd *const *ptd;
};

/* 1110 */
struct destroy_ptd::__l15::<lambda_6250bd4b2a391816dd638c3bf72b0bcb>
{
  __acrt_ptd *const *ptd;
};

/* 1111 */
struct destroy_ptd::__l16::<lambda_be2b3da3f62db62e9dad5dc70221a656>
{
  __acrt_ptd *const *ptd;
};

/* 1112 */
struct __crt_state_management::dual_state_global<int (__cdecl*)(unsigned int)>
{
  int (__cdecl *_value[1])(unsigned int);
};

/* 1113 */
struct _strflt
{
  int sign;
  int decpt;
  char *mantissa;
};

/* 1114 */
struct __cppobj __crt_strtox::is_signed<long>
{
};

/* 1115 */
struct __crt_strtox::c_string_character_source<wchar_t>
{
  const wchar_t *_p;
  const wchar_t **_end;
};

/* 1116 */
struct __declspec(align(4)) __crt_strtox::floating_point_string
{
  int _exponent;
  unsigned int _mantissa_count;
  char _mantissa[768];
  bool _is_negative;
};

/* 1117 */
struct __crt_strtox::c_string_character_source<char>
{
  const char *_p;
  const char **_end;
};

/* 1118 */
struct __cppobj __crt_strtox::is_signed<unsigned __int64>
{
};

/* 1119 */
struct __crt_strtox::big_integer
{
  unsigned int _used;
  unsigned int _data[115];
};

/* 1120 */
struct __cppobj __crt_strtox::is_signed<unsigned long>
{
};

/* 1121 */
struct __cppobj __crt_strtox::is_signed<__int64>
{
};

/* 1122 */
struct __declspec(align(4)) __crt_strtox::floating_point_value
{
  void *_value;
  bool _is_double;
};

/* 1123 */
struct __declspec(align(4)) scoped_fp_state_reset
{
  fenv_t _environment;
  bool _requires_reset;
};

/* 1124 */
typedef _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;

/* 1126 */
typedef char *LPBYTE;

/* 1127 */
typedef char *pchar_t;

/* 1128 */
typedef bool (__cdecl *__acrt_initialize_pft)();

/* 1129 */
typedef unsigned __int16 PROPVAR_PAD2;

/* 1130 */
typedef bool __vcrt_bool;

/* 1131 */
typedef unsigned __int64 *PREGHANDLE;

/* 1132 */
typedef int (__cdecl *osal_openTempFile_func)(const char *, int, int);

/* 1133 */
typedef void (__stdcall *PIMAGE_TLS_CALLBACK)(void *, unsigned int, void *);

/* 1134 */
typedef HWINSTA__ *HWINSTA;

/* 1135 */
typedef _ACTIVATION_CONTEXT *PACTIVATION_CONTEXT;

/* 1136 */
typedef int (__cdecl *osal_close_func)(void *);

/* 1137 */
typedef int (__stdcall *FARPROC)();

/* 1138 */
typedef _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;

/* 1139 */
typedef _PEB_LDR_DATA *PPEB_LDR_DATA;

/* 1140 */
typedef int __stdcall RTL_TREE_COMPARE_FUNCTION(void *, _RTL_BALANCED_NODE *);

/* 1141 */
typedef int (__stdcall *FlsSetValue_pft)(unsigned int, void *);

/* 1142 */
typedef _RTL_DYNAMIC_HASH_TABLE_CONTEXT *PRTL_DYNAMIC_HASH_TABLE_CONTEXT;

/* 1143 */
typedef void *(__cdecl *malloc_func)(unsigned int);

/* 1144 */
typedef const char *STRSAFE_PCNZCH;

/* 1145 */
typedef _STARTUPINFOA *LPSTARTUPINFOA;

/* 1146 */
typedef int (__stdcall *GetUserDefaultLocaleName_pft)(wchar_t *, int);

/* 1147 */
typedef $F1BCC8D2ED72627AE3E1D14940DBB08E *RO_REGISTRATION_COOKIE;

/* 1148 */
typedef int *PBOOL;

/* 1149 */
typedef HRESULT (__stdcall *PFNGETACTIVATIONFACTORY)(HSTRING__ *, IActivationFactory **);

/* 1150 */
typedef float FLOAT;

/* 1151 */
typedef tagVARIANT *LPVARIANT;

/* 1152 */
typedef char UINT8;

/* 1153 */
typedef int (__stdcall *FlsFree_pft)(unsigned int);

/* 1154 */
typedef unsigned int UINT;

/* 1155 */
typedef unsigned int *PULONG;

/* 1156 */
typedef _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA;

/* 1157 */
typedef _TEB_ACTIVE_FRAME *PTEB_ACTIVE_FRAME;

/* 1158 */
typedef _DETOUR_TRAMPOLINE *PDETOUR_TRAMPOLINE;

/* 1159 */
typedef int (__stdcall *HOOKPROC)(int, unsigned int, int);

/* 1160 */
typedef unsigned int _U32;

/* 1161 */
typedef unsigned __int16 PROPVAR_PAD3;

/* 1162 */
typedef wchar_t *PWCHAR;

/* 1163 */
typedef void (__cdecl *_invalid_parameter_handler)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, unsigned int);

/* 1164 */
typedef unsigned int std::_Atomic_integral_t;

/* 1165 */
typedef tagSAFEARRAY *LPSAFEARRAY;

/* 1166 */
typedef _SYMBOL_INFO *PSYMBOL_INFO;

/* 1167 */
typedef int (__stdcall *GetLocaleInfoEx_pft)(const wchar_t *, unsigned int, wchar_t *, int);

/* 1168 */
typedef unsigned __int16 *PUSHORT;

/* 1169 */
typedef __int16 INT16;

/* 1170 */
typedef _STRING *PSTRING;

/* 1171 */
typedef int _off_t;

/* 1172 */
typedef void *(__cdecl *Alloc_t)(unsigned int);

/* 1173 */
typedef _IMAGEHLP_MODULE64 *PIMAGEHLP_MODULE64;

/* 1174 */
typedef HSTRING__ *HSTRING;

/* 1175 */
typedef _EXCEPTION_REGISTRATION_RECORD *PEXCEPTION_REGISTRATION_RECORD;

/* 1176 */
typedef int (__stdcall *GetTimeFormatEx_pft)(const wchar_t *, unsigned int, _SYSTEMTIME *, const wchar_t *, wchar_t *, int);

/* 1177 */
typedef int LRESULT;

/* 1179 */
typedef unsigned int *PDWORD;

/* 1180 */
typedef int (__stdcall *InitializeCriticalSectionEx_pft)(_RTL_CRITICAL_SECTION *, unsigned int, unsigned int);

/* 1181 */
typedef LIST_ENTRY32 *PLIST_ENTRY32;

/* 1182 */
typedef unsigned int LCTYPE;

/* 1183 */
typedef unsigned int uintptr_t;

/* 1184 */
typedef void (__stdcall *PTP_CLEANUP_GROUP_CANCEL_CALLBACK)(void *, void *);

/* 1185 */
typedef __int64 LONG64;

/* 1186 */
typedef const char *STRSAFE_LPCSTR;

/* 1187 */
typedef _tagADDRESS *LPADDRESS;

/* 1188 */
typedef char *va_list;

/* 1189 */
typedef _EXCEPTION_POINTERS *LPEXCEPTION_POINTERS;

/* 1190 */
typedef int (__cdecl *pthread_mutex_unlock_func)(pthread_mutex_t_ **);

/* 1191 */
typedef _WIN32_FIND_DATAW *LPWIN32_FIND_DATAW;

/* 1192 */
typedef int (__stdcall *PF_DETOUR_BINARY_FILE_CALLBACK)(void *, const char *, const char *, const char **);

/* 1193 */
typedef int (__stdcall *PF_DETOUR_BINARY_BYWAY_CALLBACK)(void *, const char *, const char **);

/* 1194 */
typedef HWND__ *(__stdcall *GetLastActivePopup_pft)(HWND__ *);

/* 1195 */
typedef _GUID *LPCGUID;

/* 1196 */
typedef void DispatcherContext;

/* 1197 */
typedef unsigned int (__stdcall *EventWriteTransfer_pft)(unsigned __int64, _EVENT_DESCRIPTOR *, _GUID *, _GUID *, unsigned int, _EVENT_DATA_DESCRIPTOR *);

/* 1198 */
typedef char BYTE;

/* 1199 */
typedef int (__stdcall *PDETOUR_CREATE_PROCESS_ROUTINEA)(const char *, char *, _SECURITY_ATTRIBUTES *, _SECURITY_ATTRIBUTES *, int, unsigned int, void *, const char *, _STARTUPINFOA *, _PROCESS_INFORMATION *);

/* 1200 */
typedef _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;

/* 1201 */
typedef char __crt_lowio_pipe_lookahead[3];

/* 1202 */
typedef int (__stdcall *PDETOUR_CREATE_PROCESS_ROUTINEW)(const wchar_t *, wchar_t *, _SECURITY_ATTRIBUTES *, _SECURITY_ATTRIBUTES *, int, unsigned int, void *, const wchar_t *, _STARTUPINFOW *, _PROCESS_INFORMATION *);

/* 1203 */
typedef void *PVOID;

/* 1204 */
typedef void *(__stdcall *FlsGetValue_pft)(unsigned int);

/* 1205 */
typedef unsigned int UINT32;

/* 1206 */
typedef void (__stdcall *PRTL_TREE_DELETE_FUNCTION)(_RTL_BALANCED_NODE *, void *);

/* 1207 */
typedef const wchar_t *LPCWCH;

/* 1208 */
typedef unsigned __int16 PROPVAR_PAD1;

/* 1209 */
typedef int DISPID;

/* 1210 */
typedef unsigned int _Uint32t;

/* 1211 */
typedef wchar_t *STRSAFE_LPWSTR;

/* 1212 */
typedef _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;

/* 1213 */
typedef int (__stdcall *PF_DETOUR_BINARY_SYMBOL_CALLBACK)(void *, unsigned int, unsigned int, unsigned int *, const char *, const char *, const char **);

/* 1214 */
typedef _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;

/* 1215 */
typedef int LPARAM;

/* 1216 */
typedef const void *LPCVOID;

/* 1217 */
typedef wchar_t *PWCH;

/* 1218 */
typedef _SYSTEMTIME *LPSYSTEMTIME;

/* 1219 */
typedef unsigned int WPARAM;

/* 1220 */
typedef __int64 _Q64;

/* 1221 */
typedef const wchar_t *STRSAFE_LPCWSTR;

/* 1222 */
typedef int INT32;

/* 1223 */
typedef _KDHELP *PKDHELP;

/* 1224 */
typedef int (__cdecl *writePipe_func)(void *, const void *, int);

/* 1225 */
typedef void (__cdecl *_crt_signal_t)(int);

/* 1226 */
typedef void *(__cdecl *mmap_func)(void *, unsigned int, int, int, int, unsigned __int64);

/* 1227 */
typedef int NTSTATUS;

/* 1228 */
typedef unsigned int std::_Atomic_counter_t;

/* 1229 */
typedef char *PBOOLEAN;

/* 1230 */
typedef _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32;

/* 1231 */
typedef void (__stdcall *GetSystemTimePreciseAsFileTime_pft)(_FILETIME *);

/* 1232 */
typedef __int64 LONGLONG;

/* 1233 */
typedef HWINSTA__ *(__stdcall *GetProcessWindowStation_pft)();

/* 1234 */
typedef int (__stdcall *PF_DETOUR_IMPORT_FILE_CALLBACK)(void *, HINSTANCE__ *, const char *);

/* 1235 */
typedef __int64 *PLONGLONG;

/* 1236 */
typedef _WIN32_FIND_DATAA *LPWIN32_FIND_DATAA;

/* 1237 */
typedef int (__cdecl *socketeq_open_func)(const char *, int);

/* 1238 */
typedef unsigned __int64 ULONGLONG;

/* 1239 */
typedef void (__cdecl *_purecall_handler)();

/* 1240 */
typedef __int64 _Longlong;

/* 1241 */
typedef int (__cdecl *send_message_func)(const void *, unsigned int, bool, int, void *);

/* 1242 */
typedef void *PDETOUR_BINARY;

/* 1243 */
typedef int (__cdecl *_LIBM_HANDLE_MATHERR_D)(_exception *);

/* 1244 */
typedef void **LPHANDLE;

/* 1245 */
typedef _IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;

/* 1246 */
typedef int (__stdcall *PF_DETOUR_BINARY_COMMIT_CALLBACK)(void *);

/* 1247 */
typedef unsigned int uint_t;

/* 1248 */
typedef unsigned __int16 wint_t;

/* 1249 */
typedef int (__stdcall *LCMapStringEx_pft)(const wchar_t *, unsigned int, const wchar_t *, int, wchar_t *, int, _nlsversioninfo *, void *, int);

/* 1250 */
typedef int (__stdcall *PRTL_TREE_WALK_FUNCTION)(_RTL_BALANCED_NODE *, void *);

/* 1251 */
typedef LIST_ENTRY64 *PLIST_ENTRY64;

/* 1252 */
typedef unsigned __int64 UINT64;

/* 1253 */
typedef unsigned int (__stdcall *EventUnregister_pft)(unsigned __int64);

/* 1254 */
typedef _RTL_BALANCED_NODE *PRTL_AVL_NODE;

/* 1255 */
typedef unsigned __int64 (__stdcall *GetEnabledXStateFeatures_pft)();

/* 1256 */
typedef int (__cdecl *osal_sockmap_getPid_func)(const char *);

/* 1257 */
typedef __int16 *PSHORT;

/* 1258 */
typedef tagPROCESSENTRY32 *LPPROCESSENTRY32;

/* 1259 */
typedef unsigned __int16 WORD;

/* 1260 */
typedef unsigned __int16 USHORT;

/* 1261 */
typedef int (__stdcall *LOCALE_ENUMPROCW)(wchar_t *);

/* 1262 */
typedef void (__fastcall *GUARDCF_CHECK_ROUTINE)(unsigned int);

/* 1263 */
typedef unsigned __int16 _U16;

/* 1264 */
typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 1265 */
typedef bool __crt_bool;

/* 1266 */
typedef void **PPVOID;

/* 1267 */
typedef bool (__cdecl *__acrt_uninitialize_pft)(bool);

/* 1268 */
typedef int MEMBERID;

/* 1269 */
typedef void *LPVOID;

/* 1270 */
typedef unsigned __int64 uintmax_t;

/* 1271 */
typedef int (__stdcall *PRTL_TREE_COMPARE_FUNCTION)(void *, _RTL_BALANCED_NODE *);

/* 1272 */
typedef _cpinfo *LPCPINFO;

/* 1273 */
typedef unsigned __int16 *LPWORD;

/* 1274 */
typedef int google::LogSeverity;

/* 1275 */
typedef int (__stdcall *PF_DETOUR_IMPORT_FUNC_CALLBACK)(void *, unsigned int, const char *, void *);

/* 1276 */
typedef int (__stdcall *GetFileInformationByHandleEx_pft)(void *, _FILE_INFO_BY_HANDLE_CLASS, void *, unsigned int);

/* 1277 */
typedef int LONG;

/* 1278 */
typedef int *LPLONG;

/* 1279 */
typedef _EXCEPTION_RECORD *PEXCEPTION_RECORD;

/* 1280 */
typedef int (__cdecl *_PNH)(unsigned int);

/* 1281 */
typedef __int64 time_t;

/* 1282 */
typedef int __cdecl internal_map_type(int, __crt_locale_pointers *);

/* 1283 */
typedef int __stdcall RTL_TREE_WALK_FUNCTION(_RTL_BALANCED_NODE *, void *);

/* 1284 */
typedef _FILETIME *LPFILETIME;

/* 1285 */
typedef char CHAR;

/* 1286 */
typedef int (__cdecl *munmap_func)(void *, unsigned int);

/* 1287 */
typedef int (__cdecl *binder_thread_read_proc)(unsigned int *, unsigned int *, char *, unsigned int, unsigned int *, int);

/* 1288 */
typedef _RTL_SRWLOCK *PSRWLOCK;

/* 1289 */
typedef void (__thiscall *constructor_type)(void *);

/* 1290 */
typedef void (__cdecl *_se_translator_function)(unsigned int, _EXCEPTION_POINTERS *);

/* 1291 */
typedef char *(__cdecl *GetParameter_t)(int);

/* 1292 */
typedef void *PDETOUR_LOADED_BINARY;

/* 1293 */
typedef DETOUR_REGION *PDETOUR_REGION;

/* 1294 */
typedef int (__stdcall *GetCurrentPackageId_pft)(unsigned int *, char *);

/* 1295 */
typedef _STARTUPINFOW *LPSTARTUPINFOW;

/* 1296 */
typedef int (__cdecl *pthread_mutex_lock_func)(pthread_mutex_t_ **);

/* 1297 */
typedef __int64 INT64;

/* 1298 */
typedef _NT_TIB *PNT_TIB;

/* 1299 */
typedef int (__stdcall *LPTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 1300 */
typedef __int16 std::nullptr_t;

/* 1301 */
typedef _PROCESS_INFORMATION *LPPROCESS_INFORMATION;

/* 1302 */
typedef bool __cdecl internal_istype_l_type(int, __crt_locale_pointers *);

/* 1303 */
typedef unsigned __int16 UINT16;

/* 1304 */
typedef char *STRSAFE_LPSTR;

/* 1305 */
typedef _UNICODE_STRING *PUNICODE_STRING;

/* 1306 */
typedef unsigned int TP_VERSION;

/* 1307 */
typedef long double DOUBLE;

/* 1308 */
typedef int (__cdecl *_get_osfhandle_func)(int);

/* 1309 */
typedef char *PCH;

/* 1310 */
typedef int (__cdecl *pthread_cond_init_func)(struct pthread_cond_t_ **, struct pthread_condattr_t_ *const *);

/* 1311 */
typedef int (__stdcall *LOCALE_ENUMPROCEX)(wchar_t *, unsigned int, int);

/* 1312 */
typedef unsigned int SIZE_T;

/* 1313 */
typedef unsigned int size_t;

/* 1314 */
typedef unsigned int (__stdcall *EventSetInformation_pft)(unsigned __int64, _EVENT_INFO_CLASS, void *, unsigned int);

/* 1315 */
typedef __int16 VARIANT_BOOL;

/* 1316 */
typedef _RTL_BALANCED_NODE *PRTL_RB_NODE;

/* 1317 */
typedef unsigned __int64 *PDWORD64;

/* 1318 */
typedef unsigned int *PUINT_PTR;

/* 1319 */
typedef const char *PCCH;

/* 1320 */
typedef _CONTEXT *LPCONTEXT;

/* 1321 */
typedef pthread_condattr_t_ *pthread_condattr_t;

/* 1322 */
typedef __int16 SHORT;

/* 1323 */
typedef void (__stdcall *RoUninitialize_pft)();

/* 1324 */
typedef int (__stdcall *PHANDLER_ROUTINE)(unsigned int);

/* 1325 */
typedef const wchar_t *PCNZWCH;

/* 1326 */
typedef _tagADDRESS64 *LPADDRESS64;

/* 1327 */
typedef unsigned int std::_Uint4_t;

/* 1328 */
typedef _strflt *STRFLT;

/* 1329 */
typedef pthread_mutex_t_ *pthread_mutex_t;

/* 1330 */
typedef const wchar_t *LPCOLESTR;

/* 1331 */
typedef unsigned int UINT_PTR;

/* 1332 */
typedef int (__cdecl *gettid_func)();

/* 1333 */
typedef int (__stdcall *GetDateFormatEx_pft)(const wchar_t *, unsigned int, _SYSTEMTIME *, const wchar_t *, wchar_t *, int, const wchar_t *);

/* 1334 */
typedef char INT8;

/* 1335 */
typedef void (__cdecl *_PVFV)();

/* 1336 */
typedef int (__cdecl *Perror_func)(const char *);

/* 1338 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS;

/* 1339 */
typedef __int64 std::streamoff;

/* 1340 */
typedef unsigned __int16 *PWORD;

/* 1341 */
typedef __int64 std::streamsize;

/* 1342 */
typedef int (__cdecl *pthread_cond_wait_func)(struct pthread_cond_t_ **, pthread_mutex_t_ **);

/* 1343 */
typedef HINSTANCE__ *HMODULE;

/* 1344 */
typedef __crt_locale_pointers *_locale_t;

/* 1345 */
typedef unsigned int (__stdcall *LPTHREAD_START_ROUTINE)(void *);

/* 1346 */
typedef int (__stdcall *CompareStringEx_pft)(const wchar_t *, unsigned int, const wchar_t *, int, const wchar_t *, int, _nlsversioninfo *, void *, int);

/* 1347 */
typedef unsigned int *PULONG_PTR;

/* 1348 */
typedef const char *PCSTR;

/* 1349 */
typedef void (__cdecl *free_func)(void *);

/* 1350 */
typedef unsigned int (__stdcall *FlsAlloc_pft)(void (__stdcall *)(void *));

/* 1351 */
typedef _RTL_BALANCED_NODE *PRTL_BALANCED_NODE;

/* 1352 */
typedef __int16 _I16;

/* 1353 */
typedef char *PBYTE;

/* 1354 */
typedef int (__cdecl *getuid_func)();

/* 1355 */
typedef _STRING *PANSI_STRING;

/* 1356 */
typedef unsigned __int16 uint16_t;

/* 1357 */
typedef _EH4_EXCEPTION_REGISTRATION_RECORD *PEH4_EXCEPTION_REGISTRATION_RECORD;

/* 1358 */
typedef _EVENT_FILTER_DESCRIPTOR *PEVENT_FILTER_DESCRIPTOR;

/* 1359 */
typedef API_VERSION *LPAPI_VERSION;

/* 1360 */
typedef unsigned int *LPDWORD;

/* 1361 */
typedef _LIST_ENTRY *PLIST_ENTRY;

/* 1362 */
typedef _EVENT_DESCRIPTOR *PEVENT_DESCRIPTOR;

/* 1363 */
typedef unsigned __int64 ULONG64;

/* 1364 */
typedef unsigned int DWORD_PTR;

/* 1365 */
typedef __int64 *PLONG64;

/* 1366 */
typedef _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;

/* 1367 */
typedef void (__stdcall *PPS_POST_PROCESS_INIT_ROUTINE)();

/* 1368 */
typedef int (__cdecl *readPipe_func)(void *, void *, unsigned int);

/* 1369 */
typedef __int64 int64_t;

/* 1370 */
typedef int __time32_t;

/* 1371 */
typedef _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;

/* 1372 */
typedef unsigned int (__stdcall *EventRegister_pft)(_GUID *, void (__stdcall *)(_GUID *, unsigned int, char, unsigned __int64, unsigned __int64, _EVENT_FILTER_DESCRIPTOR *, void *), void *, unsigned __int64 *);

/* 1373 */
typedef int INT;

/* 1374 */
typedef wchar_t **SNB;

/* 1375 */
typedef unsigned int LCID;

/* 1376 */
typedef _DETOUR_EXE_RESTORE *PDETOUR_EXE_RESTORE;

/* 1377 */
typedef int (__cdecl *pthread_cond_signal_func)(struct pthread_cond_t_ **);

/* 1378 */
typedef _SINGLE_LIST_ENTRY *PSLIST_ENTRY;

/* 1379 */
typedef char *LPSTR;

/* 1380 */
typedef int (__cdecl *binder_thread_write_proc)(unsigned int *, unsigned int *, char *, unsigned int, unsigned int *);

/* 1381 */
typedef _nlsversioninfo *LPNLSVERSIONINFO;

/* 1382 */
typedef int (__cdecl *closePipe_func)(void *);

/* 1383 */
typedef __int64 intmax_t;

/* 1384 */
typedef _RTL_CRITICAL_SECTION *LPCRITICAL_SECTION;

/* 1385 */
typedef _RTL_RB_TREE *PRTL_RB_TREE;

/* 1386 */
typedef wchar_t *LPOLESTR;

/* 1387 */
typedef _DETOUR_SECTION_RECORD *PDETOUR_SECTION_RECORD;

/* 1388 */
typedef _EXCEPTION_DISPOSITION __stdcall EXCEPTION_ROUTINE(_EXCEPTION_RECORD *, void *, _CONTEXT *, void *);

/* 1389 */
typedef const char *pcchar_t;

/* 1390 */
typedef long double DATE;

/* 1391 */
typedef unsigned int (__stdcall *PTHREAD_START_ROUTINE)(void *);

/* 1392 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER;

/* 1393 */
typedef _DETOUR_SYM_INFO *PDETOUR_SYM_INFO;

/* 1394 */
typedef void (__stdcall *PFLS_CALLBACK_FUNCTION)(void *);

/* 1395 */
typedef int (__cdecl *PEXCEPTION_FILTER)();

/* 1396 */
typedef HHOOK__ *HHOOK;

/* 1397 */
typedef _ACTIVATION_CONTEXT_STACK *PACTIVATION_CONTEXT_STACK;

/* 1398 */
typedef int SCODE;

/* 1399 */
typedef wchar_t *PUWSTR;

/* 1400 */
typedef __int64 fpos_t;

/* 1401 */
typedef int (__stdcall *PTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 1402 */
typedef int pid_t;

/* 1403 */
typedef int (__stdcall *SetThreadStackGuarantee_pft)(unsigned int *);

/* 1404 */
typedef int uid_t;

/* 1405 */
typedef _EH4_SCOPETABLE *PEH4_SCOPETABLE;

/* 1406 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;

/* 1407 */
typedef _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;

/* 1408 */
typedef unsigned int _dev_t;

/* 1409 */
typedef _CONTEXT *PCONTEXT;

/* 1410 */
typedef void (__stdcall *PENABLECALLBACK)(_GUID *, unsigned int, char, unsigned __int64, unsigned __int64, _EVENT_FILTER_DESCRIPTOR *, void *);

/* 1411 */
typedef __crt_lowio_handle_data *__crt_lowio_handle_data_array[128];

/* 1412 */
typedef struct pthread_cond_t_ *pthread_cond_t;

/* 1413 */
typedef void __stdcall RTL_TREE_DELETE_FUNCTION(_RTL_BALANCED_NODE *, void *);

/* 1414 */
typedef int (__cdecl *_onexit_t)();

/* 1415 */
typedef float _FP32;

/* 1416 */
typedef _EVENT_DESCRIPTOR *PCEVENT_DESCRIPTOR;

/* 1417 */
typedef unsigned int rsize_t;

/* 1418 */
typedef const wchar_t *STRSAFE_PCNZWCH;

/* 1419 */
typedef unsigned __int64 REGHANDLE;

/* 1420 */
typedef int (__stdcall *GetXStateFeaturesMask_pft)(_CONTEXT *, unsigned __int64 *);

/* 1421 */
typedef unsigned __int16 VARTYPE;

/* 1422 */
typedef int (__stdcall *PF_DETOUR_IMPORT_FUNC_CALLBACK_EX)(void *, unsigned int, const char *, void **);

/* 1423 */
typedef int (__cdecl *_PIFV)();

/* 1424 */
typedef _EH4_SCOPETABLE_RECORD *PEH4_SCOPETABLE_RECORD;

/* 1425 */
typedef __int64 google::int64;

/* 1426 */
typedef void *(__stdcall *LocateXStateFeature_pft)(_CONTEXT *, unsigned int, unsigned int *);

/* 1427 */
typedef unsigned __int64 uint64_t;

/* 1428 */
typedef tagVersionedStream *LPVERSIONEDSTREAM;

/* 1429 */
typedef int INT_PTR;

/* 1430 */
typedef HRESULT (__stdcall *RoInitialize_pft)(RO_INIT_TYPE);

/* 1431 */
typedef int (__cdecl *_open_osfhandle_func)(int, int);

/* 1432 */
typedef int (__cdecl *get_file_name_func)(void *, char *, int);

/* 1433 */
typedef _TP_CALLBACK_INSTANCE *PTP_CALLBACK_INSTANCE;

/* 1434 */
typedef int (__stdcall *PF_SymInitialize)(void *, const char *, int);

/* 1435 */
typedef void (__cdecl *terminate_handler)();

/* 1436 */
typedef unsigned int DWORD32;

/* 1437 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

/* 1438 */
typedef int (__stdcall *EnumSystemLocalesEx_pft)(int (__stdcall *)(wchar_t *, unsigned int, int), unsigned int, int, void *);

/* 1439 */
typedef void (__thiscall *destructor_type)(void *);

/* 1440 */
typedef unsigned int LOGICAL;

/* 1441 */
typedef void (__cdecl *__crt_signal_handler_t)(int);

/* 1442 */
typedef void (__cdecl *_PMFN)(void *);

/* 1443 */
typedef void (__stdcall *PFNPREPARE_FOR_THROW)(void *);

/* 1444 */
typedef _LARGE_INTEGER *PLARGE_INTEGER;

/* 1445 */
typedef char *PSE_SIGNING_LEVEL;

/* 1446 */
typedef int (__stdcall *AreFileApisANSI_pft)();

/* 1447 */
typedef _RTL_AVL_TREE *PRTL_AVL_TREE;

/* 1448 */
typedef unsigned int (__stdcall *PF_SymSetOptions)(unsigned int);

/* 1449 */
typedef HINSTANCE__ *HINSTANCE;

/* 1450 */
typedef int (__cdecl *getpid_func)();

/* 1451 */
typedef _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;

/* 1452 */
typedef int __ehstate_t;

/* 1453 */
typedef _SLIST_HEADER *PSLIST_HEADER;

/* 1454 */
typedef const wchar_t *PCWSTR;

/* 1455 */
typedef void (__stdcall *PTP_SIMPLE_CALLBACK)(_TP_CALLBACK_INSTANCE *, void *);

/* 1456 */
typedef char int8_t;

/* 1457 */
typedef int (__stdcall *__scrt_dllmain_type)(HINSTANCE__ *, unsigned int, void *);

/* 1458 */
typedef _TP_CALLBACK_ENVIRON_V3 *PTP_CALLBACK_ENVIRON;

/* 1459 */
typedef unsigned int fexcept_t;

/* 1460 */
typedef int int32_t;

/* 1461 */
typedef void (__cdecl *unexpected_handler)();

/* 1462 */
typedef int (__stdcall *MessageBoxA_pft)(HWND__ *, const char *, const char *, unsigned int);

/* 1463 */
typedef int (__cdecl *_HANDLE_MATH_ERROR)(_exception *);

/* 1464 */
typedef void (__fastcall *PTERMINATION_HANDLER)(int);

/* 1465 */
typedef _RTL_DYNAMIC_HASH_TABLE *PRTL_DYNAMIC_HASH_TABLE;

/* 1466 */
typedef int _I32;

/* 1467 */
typedef wchar_t *PWSTR;

/* 1468 */
typedef const char *LPCSTR;

/* 1469 */
typedef _TIME_ZONE_INFORMATION *LPTIME_ZONE_INFORMATION;

/* 1470 */
typedef void *(__cdecl *connectPipe_func)(const char *);

/* 1471 */
typedef int errno_t;

/* 1472 */
typedef void (__stdcall *_tls_callback_type)(void *, unsigned int, void *);

/* 1473 */
typedef int LONG_PTR;

/* 1474 */
typedef HWND__ *(__stdcall *GetActiveWindow_pft)();

/* 1475 */
typedef _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;

/* 1476 */
typedef int intptr_t;

/* 1477 */
typedef unsigned int uint32_t;

/* 1478 */
typedef void *HANDLE;

/* 1479 */
typedef _DETOUR_EXE_HELPER *PDETOUR_EXE_HELPER;

/* 1480 */
typedef unsigned int GDI_HANDLE_BUFFER[34];

/* 1481 */
typedef tagPARAMDESCEX *LPPARAMDESCEX;

/* 1482 */
typedef wchar_t *LPWCH;

/* 1483 */
typedef int (__stdcall *PF_SymFromName)(void *, char *, _SYMBOL_INFO *);

/* 1484 */
typedef int (__cdecl *pid2handle_func)(int);

/* 1485 */
typedef unsigned int (__stdcall *LocaleNameToLCID_pft)(const wchar_t *, unsigned int);

/* 1486 */
typedef int (__stdcall *PF_DETOUR_ENUMERATE_EXPORT_CALLBACK)(void *, unsigned int, const char *, void *);

/* 1487 */
typedef _OVERLAPPED *LPOVERLAPPED;

/* 1488 */
typedef API_VERSION *(__stdcall *PF_ImagehlpApiVersionEx)(API_VERSION *);

/* 1489 */
typedef _TP_CLEANUP_GROUP *PTP_CLEANUP_GROUP;

/* 1490 */
typedef long double _FP64;

/* 1491 */
typedef int (__stdcall *IsValidLocaleName_pft)(const wchar_t *);

/* 1492 */
typedef int (__stdcall *MessageBoxW_pft)(HWND__ *, const wchar_t *, const wchar_t *, unsigned int);

/* 1493 */
typedef unsigned __int64 (__stdcall *PF_SymLoadModule64)(void *, void *, char *, char *, unsigned __int64, unsigned int);

/* 1494 */
typedef unsigned __int16 wctype_t;

/* 1495 */
typedef int (__stdcall *PF_SymGetModuleInfo64)(void *, unsigned __int64, _IMAGEHLP_MODULE64 *);

/* 1496 */
typedef int (__stdcall *GetUserObjectInformationW_pft)(void *, int, void *, unsigned int, unsigned int *);

/* 1497 */
typedef unsigned int HREFTYPE;

/* 1498 */
typedef const wchar_t *PCUWSTR;

/* 1499 */
typedef const wchar_t *PCWCH;

/* 1500 */
typedef _PEB *PPEB;

/* 1501 */
typedef _EXCEPTION_DISPOSITION (__stdcall *PEXCEPTION_ROUTINE)(_EXCEPTION_RECORD *, void *, _CONTEXT *, void *);

/* 1502 */
typedef unsigned __int64 DWORD64;

/* 1503 */
typedef _IMAGE_NT_HEADERS64 *PIMAGE_NT_HEADERS64;

/* 1504 */
typedef unsigned int ULONG_PTR;

/* 1505 */
typedef HWND__ *HWND;

/* 1506 */
typedef unsigned int (__stdcall *PF_SymGetOptions)();

/* 1507 */
typedef _DETOUR_CLR_HEADER *PDETOUR_CLR_HEADER;

/* 1508 */
typedef __int16 int16_t;

/* 1509 */
typedef int BOOL;

/* 1510 */
typedef int *LPBOOL;

/* 1511 */
typedef _TEB_ACTIVE_FRAME_CONTEXT *PCTEB_ACTIVE_FRAME_CONTEXT;

/* 1512 */
typedef _RTL_SPLAY_LINKS *PRTL_SPLAY_LINKS;

/* 1513 */
typedef void *(__stdcall *PGETWINRT_OOM_EXCEPTION)();

/* 1514 */
typedef const char *LPCCH;

/* 1515 */
typedef _EVENT_DATA_DESCRIPTOR *PEVENT_DATA_DESCRIPTOR;

/* 1516 */
typedef int (__stdcall *LCIDToLocaleName_pft)(unsigned int, wchar_t *, int, unsigned int);

/* 1517 */
typedef char *PCHAR;

/* 1518 */
typedef __int64 __time64_t;

/* 1519 */
typedef char TCHAR;

/* 1520 */
typedef char UCHAR;

/* 1521 */
typedef char CCHAR;

/* 1522 */
typedef _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR *PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR;

/* 1523 */
typedef const wchar_t *LPCWSTR;

/* 1524 */
typedef char (__stdcall *SystemFunction036_pft)(void *, unsigned int);

/* 1525 */
typedef unsigned __int16 LANGID;

/* 1526 */
typedef unsigned __int16 _ino_t;

/* 1527 */
typedef wchar_t *BSTR;

/* 1528 */
typedef _KDHELP64 *PKDHELP64;

/* 1529 */
typedef char uint8_t;

/* 1530 */
typedef void (__cdecl *PEXCEPTION_HANDLER)();

/* 1531 */
typedef wchar_t *LPWSTR;

/* 1532 */
typedef int *PLONG;

/* 1533 */
typedef unsigned int ULONG;

/* 1534 */
typedef void (__cdecl *PMFN)(void *);

/* 1535 */
typedef int ptrdiff_t;

/* 1536 */
typedef char BOOLEAN;

/* 1537 */
typedef void (__cdecl *Free_t)(void *);

/* 1538 */
typedef _TP_POOL *PTP_POOL;

/* 1539 */
typedef struct _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 1540 */
struct _EH3_EXCEPTION_REGISTRATION
{
  struct _EH3_EXCEPTION_REGISTRATION *Next;
  PVOID ExceptionHandler;
  PSCOPETABLE_ENTRY ScopeTable;
  DWORD TryLevel;
};

/* 1541 */
typedef struct _EH3_EXCEPTION_REGISTRATION EH3_EXCEPTION_REGISTRATION;

/* 1542 */
typedef struct _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 1543 */
struct CPPEH_RECORD
{
  DWORD old_esp;
  EXCEPTION_POINTERS *exc_ptr;
  struct _EH3_EXCEPTION_REGISTRATION registration;
};

/* 1545 */
typedef _iobuf FILE;

/* 1546 */
typedef _GUID GUID;

/* 1547 */
struct __m128d
{
  double m128d_f64[2];
};

/* 1548 */
union __declspec(align(32)) __m256
{
  float m256_f32[8];
};

/* 1549 */
union __declspec(align(32)) __m256d
{
  double m256d_f64[4];
};

